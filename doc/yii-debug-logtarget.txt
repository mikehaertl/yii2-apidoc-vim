
*yii/debug/LogTarget*   >> |yii/log/Target|
=====================

DESCRIPTION
------------------------------------------------------------------------------




PROPERTY DETAILS
------------------------------------------------------------------------------

$enabled				*yii/debug/LogTarget::$enabled*
 See |yii/log/Target::$enabled|

$categories				*yii/debug/LogTarget::$categories*
 See |yii/log/Target::$categories|

$except					*yii/debug/LogTarget::$except*
 See |yii/log/Target::$except|

$logVars				*yii/debug/LogTarget::$logVars*
 See |yii/log/Target::$logVars|

$prefix					*yii/debug/LogTarget::$prefix*
 See |yii/log/Target::$prefix|

$exportInterval				*yii/debug/LogTarget::$exportInterval*
 See |yii/log/Target::$exportInterval|

$messages				*yii/debug/LogTarget::$messages*
 See |yii/log/Target::$messages|

$module					*yii/debug/LogTarget::$module*
 (\yii\debug\Module)

$tag					*yii/debug/LogTarget::$tag*
 ()

$behaviors				*yii/debug/LogTarget::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

$levels					*yii/debug/LogTarget::$levels*
 (integer) The message levels that this target is interested in. This is a
 bitmap of level values. Defaults to 0, meaning  all available levels.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/debug/LogTarget::className*				public
 See |yii/base/Object::className|


*yii/debug/LogTarget::__construct*			public
>
 __construct($module, $config='[]')
<
(void)


    [$module] (\yii\debug\Module) 
    [$config] (array) 


*yii/debug/LogTarget::init*				public
 See |yii/base/Object::init|


*yii/debug/LogTarget::__get*				public
 See |yii/base/Component::__get|


*yii/debug/LogTarget::__set*				public
 See |yii/base/Component::__set|


*yii/debug/LogTarget::__isset*				public
 See |yii/base/Component::__isset|


*yii/debug/LogTarget::__unset*				public
 See |yii/base/Component::__unset|


*yii/debug/LogTarget::__call*				public
 See |yii/base/Component::__call|


*yii/debug/LogTarget::hasProperty*			public
 See |yii/base/Component::hasProperty|


*yii/debug/LogTarget::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/debug/LogTarget::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/debug/LogTarget::hasMethod*				public
 See |yii/base/Component::hasMethod|


*yii/debug/LogTarget::__clone*				public
 See |yii/base/Component::__clone|


*yii/debug/LogTarget::behaviors*				public
 See |yii/base/Component::behaviors|


*yii/debug/LogTarget::hasEventHandlers*			public
 See |yii/base/Component::hasEventHandlers|


*yii/debug/LogTarget::on*					public
 See |yii/base/Component::on|


*yii/debug/LogTarget::off*				public
 See |yii/base/Component::off|


*yii/debug/LogTarget::trigger*				public
 See |yii/base/Component::trigger|


*yii/debug/LogTarget::getBehavior*			public
 See |yii/base/Component::getBehavior|


*yii/debug/LogTarget::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/debug/LogTarget::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/debug/LogTarget::attachBehaviors*			public
 See |yii/base/Component::attachBehaviors|


*yii/debug/LogTarget::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/debug/LogTarget::detachBehaviors*			public
 See |yii/base/Component::detachBehaviors|


*yii/debug/LogTarget::ensureBehaviors*			public
 See |yii/base/Component::ensureBehaviors|


*yii/debug/LogTarget::export*				public
>
 export()
<
(void)

 Child classes must implement this method.


*yii/debug/LogTarget::collect*				public
>
 collect($messages, $final)
<
(void)

 This method will filter the given messages with 'levels' and 'categories'.
 And if requested, it will also export the filtering result to specific medium
 (e.g. email).
    [$messages] (array) Log messages to be processed. See
    '\yii\log\Logger::messages' for the structure of each message.
    [$final] (boolean) Whether this method is called at the end of the current
    application


*yii/debug/LogTarget::getContextMessage*			protected
 See |yii/log/Target::getContextMessage|


*yii/debug/LogTarget::getLevels*				public
 See |yii/log/Target::getLevels|


*yii/debug/LogTarget::setLevels*				public
 See |yii/log/Target::setLevels|


*yii/debug/LogTarget::filterMessages*			public
 See |yii/log/Target::filterMessages|


*yii/debug/LogTarget::formatMessage*			public
 See |yii/log/Target::formatMessage|


*yii/debug/LogTarget::getMessagePrefix*			public
 See |yii/log/Target::getMessagePrefix|


*yii/debug/LogTarget::gc*					protected
>
 gc($manifest)
<
(void)

    [$manifest] () 


*yii/debug/LogTarget::collectSummary*			protected
>
 collectSummary()
<
(array) 




*yii/debug/LogTarget::getSqlTotalCount*			protected
>
 getSqlTotalCount()
<
(integer) 





 vim:tw=78:ts=8:ft=help:norl:
