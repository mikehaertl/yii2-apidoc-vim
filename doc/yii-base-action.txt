
*yii/base/Action*   >> |yii/base/Component|
=================

SUBCLASSES
------------------------------------------------------------------------------

|yii/captcha/CaptchaAction|
|yii/base/InlineAction|
|yii/rest/Action|
|yii/rest/OptionsAction|
|yii/rest/CreateAction|
|yii/rest/IndexAction|
|yii/rest/ViewAction|
|yii/rest/DeleteAction|
|yii/rest/UpdateAction|
|yii/web/ErrorAction|
|yii/web/ViewAction|
|yii/authclient/AuthAction|
|yii/debug/actions/db/ExplainAction|
|yii/elasticsearch/DebugAction|
|yii/gii/console/GenerateAction|
|yii/httpclient/debug/RequestExecuteAction|
|yii/mongodb/debug/ExplainAction|
|yii/queue/cli/Action|
|yii/queue/file/InfoAction|
|yii/queue/db/InfoAction|
|yii/queue/redis/InfoAction|
|yii/queue/beanstalk/InfoAction|

DESCRIPTION
------------------------------------------------------------------------------

 Action provides a way to reuse action method code. An action method in an
 Action class can be used in multiple controllers or in different projects.

 Derived classes must implement a method named 'run()'. This method will be
 invoked by the controller when the action is requested. The 'run()' method
 can have parameters which will be filled up with user input values
 automatically according to their names. For example, if the 'run()' method is
 declared as follows:

   public function run($id, $type = 'book') { ... }

 And the parameters provided for the action are: '['id' => 1]'. Then the
 'run()' method will be invoked as 'run(1)' automatically.

 For more details and usage information on Action, see the [guide article on
 actions](guide:structure-controllers).


PROPERTY DETAILS
------------------------------------------------------------------------------


$id					*yii/base/Action::$id*

 (string) ID of the action

$controller				*yii/base/Action::$controller*

 (\yii\base\Controller|\yii\web\Controller|\yii\console\Controller) The
 controller that owns this action



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|


*yii/base/Action::__construct*				public
>
 __construct($id, $controller, $config='[]')
<
return (void)

 Constructor.

    [$id] (string) The ID of this action
    [$controller] (\yii\base\Controller) The controller that owns this action
    [$config] (array) Name-value pairs that will be used to initialize the
    object properties


*yii/base/Action::getUniqueId*				public
>
 getUniqueId()
<
return (string) The unique ID of this action among the whole application.

 Returns the unique ID of this action among the whole application.


*yii/base/Action::runWithParams*				public
>
 runWithParams($params)
<
return (mixed) The result of the action

 Runs this action with the specified parameters.

 This method is mainly invoked by the controller.

    [$params] (array) The parameters to be bound to the action's run() method.


*yii/base/Action::beforeRun*				protected
>
 beforeRun()
<
return (bool) Whether to run the action.

 This method is called right before 'run()' is executed.

 You may override this method to do preparation work for the action run. If
 the method returns false, it will cancel the action.


*yii/base/Action::afterRun*				protected
>
 afterRun()
<
return (void)

 This method is called right after 'run()' is executed.

 You may override this method to do post-processing work for the action run.



 vim:tw=78:ts=8:ft=help:norl:
