
*yii/db/ColumnSchemaBuilder*   >> |yii/base/Object|
============================

SUBCLASSES
------------------------------------------------------------------------------

|yii/db/cubrid/ColumnSchemaBuilder|
|yii/db/mysql/ColumnSchemaBuilder|
|yii/db/sqlite/ColumnSchemaBuilder|
|yii/db/oci/ColumnSchemaBuilder|

DESCRIPTION
------------------------------------------------------------------------------

 See 'SchemaBuilderTrait' for more detailed description and usage examples.


PROPERTY DETAILS
------------------------------------------------------------------------------

$type					*yii/db/ColumnSchemaBuilder::$type*

 (string) The column type definition such as INTEGER, VARCHAR, DATETIME, etc.

$length					*yii/db/ColumnSchemaBuilder::$length*

 (integer|string|array) Column size or precision definition. This is what goes
 into the parenthesis after the column type. This can be either a string, an
 integer or an array. If it is an array, the array values will be joined into
 a string separated by comma.

$isNotNull				*yii/db/ColumnSchemaBuilder::$isNotNull*

 (boolean) Whether the column is not nullable. If this is 'true', a 'NOT NULL'
 constraint will be added.

$isUnique				*yii/db/ColumnSchemaBuilder::$isUnique*

 (boolean) Whether the column values should be unique. If this is 'true', a
 'UNIQUE' constraint will be added.

$check					*yii/db/ColumnSchemaBuilder::$check*

 (string) The 'CHECK' constraint for the column.

$default				*yii/db/ColumnSchemaBuilder::$default*

 (mixed) Default value of the column.

$isUnsigned				*yii/db/ColumnSchemaBuilder::$isUnsigned*

 (boolean) Whether the column values should be unsigned. If this is 'true', an
 'UNSIGNED' keyword will be added.

$after					*yii/db/ColumnSchemaBuilder::$after*

 (string) The column after which this column will be added.

$isFirst				*yii/db/ColumnSchemaBuilder::$isFirst*

 (boolean) Whether this column is to be inserted at the beginning of the
 table.

$categoryMap				*yii/db/ColumnSchemaBuilder::$categoryMap*

 (array) Mapping of abstract column types (keys) to type categories (values).

$db					*yii/db/ColumnSchemaBuilder::$db*

 (\yii\db\Connection) The current database connection. It is used mainly to
 escape strings safely when building the final column schema string.

$comment				*yii/db/ColumnSchemaBuilder::$comment*

 (string) Comment value of the column.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/db/ColumnSchemaBuilder::className*			public

 See |yii/base/Object::className|


*yii/db/ColumnSchemaBuilder::__construct*			public
>
 __construct($type, $length='null', $db='null', $config='[]')
<
return (void)

    [$type] (string) Type of the column. See '$type'.
    [$length] (integer|string|array) Length or precision of the column. See
    '$length'.
    [$db] (\yii\db\Connection) The current database connection. See '$db'.
    [$config] (array) Name-value pairs that will be used to initialize the
    object properties


*yii/db/ColumnSchemaBuilder::init*			public

 See |yii/base/Object::init|


*yii/db/ColumnSchemaBuilder::__get*			public

 See |yii/base/Object::__get|


*yii/db/ColumnSchemaBuilder::__set*			public

 See |yii/base/Object::__set|


*yii/db/ColumnSchemaBuilder::__isset*			public

 See |yii/base/Object::__isset|


*yii/db/ColumnSchemaBuilder::__unset*			public

 See |yii/base/Object::__unset|


*yii/db/ColumnSchemaBuilder::__call*			public

 See |yii/base/Object::__call|


*yii/db/ColumnSchemaBuilder::hasProperty*			public

 See |yii/base/Object::hasProperty|


*yii/db/ColumnSchemaBuilder::canGetProperty*		public

 See |yii/base/Object::canGetProperty|


*yii/db/ColumnSchemaBuilder::canSetProperty*		public

 See |yii/base/Object::canSetProperty|


*yii/db/ColumnSchemaBuilder::hasMethod*			public

 See |yii/base/Object::hasMethod|


*yii/db/ColumnSchemaBuilder::notNull*			public
>
 notNull()
<
return ($this) 



*yii/db/ColumnSchemaBuilder::unique*			public
>
 unique()
<
return ($this) 



*yii/db/ColumnSchemaBuilder::check*			public
>
 check($check)
<
return ($this) 

    [$check] (string) The SQL of the 'CHECK' constraint to be added.


*yii/db/ColumnSchemaBuilder::defaultValue*		public
>
 defaultValue($default)
<
return ($this) 

    [$default] (mixed) The default value.


*yii/db/ColumnSchemaBuilder::comment*			public
>
 comment($comment)
<
return ($this) 

    [$comment] (string) The comment


*yii/db/ColumnSchemaBuilder::unsigned*			public
>
 unsigned()
<
return ($this) 



*yii/db/ColumnSchemaBuilder::after*			public
>
 after($after)
<
return ($this) 

 Note: MySQL, Oracle and Cubrid support only.

    [$after] (string) The column after which $this column will be added.


*yii/db/ColumnSchemaBuilder::first*			public
>
 first()
<
return ($this) 

 Note: MySQL, Oracle and Cubrid support only.


*yii/db/ColumnSchemaBuilder::defaultExpression*		public
>
 defaultExpression($default)
<
return ($this) 

    [$default] (string) The default value expression.


*yii/db/ColumnSchemaBuilder::__toString*			public
>
 __toString()
<
return (string) 



*yii/db/ColumnSchemaBuilder::buildLengthString*		protected
>
 buildLengthString()
<
return (string) 



*yii/db/ColumnSchemaBuilder::buildNotNullString*		protected
>
 buildNotNullString()
<
return (string) Returns 'NOT NULL' if 'isNotNull' is true, otherwise it returns an
empty string.



*yii/db/ColumnSchemaBuilder::buildUniqueString*		protected
>
 buildUniqueString()
<
return (string) Returns string 'UNIQUE' if 'isUnique' is true, otherwise it returns
an empty string.



*yii/db/ColumnSchemaBuilder::buildDefaultString*		protected
>
 buildDefaultString()
<
return (string) String with default value of column.



*yii/db/ColumnSchemaBuilder::buildCheckString*		protected
>
 buildCheckString()
<
return (string) A string containing the CHECK constraint.



*yii/db/ColumnSchemaBuilder::buildUnsignedString*		protected
>
 buildUnsignedString()
<
return (string) A string containing UNSIGNED keyword.



*yii/db/ColumnSchemaBuilder::buildAfterString*		protected
>
 buildAfterString()
<
return (string) A string containing the AFTER constraint.



*yii/db/ColumnSchemaBuilder::buildFirstString*		protected
>
 buildFirstString()
<
return (string) A string containing the FIRST constraint.



*yii/db/ColumnSchemaBuilder::getTypeCategory*		protected
>
 getTypeCategory()
<
return (string) A string containing the column type category name.



*yii/db/ColumnSchemaBuilder::buildCommentString*		protected
>
 buildCommentString()
<
return (string) A string containing the COMMENT keyword and the comment itself



*yii/db/ColumnSchemaBuilder::buildCompleteString*		protected
>
 buildCompleteString($format)
<
return (string) A string containing the complete column definition.

    [$format] (string) The format of the definition.



 vim:tw=78:ts=8:ft=help:norl:
