
*yii/i18n/MessageSource*   >> |yii/base/Component|
========================

SUBCLASSES
------------------------------------------------------------------------------

|yii/mongodb/i18n/MongoDbMessageSource|
|yii/i18n/PhpMessageSource|
|yii/i18n/DbMessageSource|
|yii/i18n/GettextMessageSource|

DESCRIPTION
------------------------------------------------------------------------------

 A message source stores message translations in some persistent storage.

 Child classes should override 'loadMessages()' to provide translated
 messages.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Component::$behaviors|


$forceTranslation			*yii/i18n/MessageSource::$forceTranslation*

 (bool) Whether to force message translation when the source and target
 languages are the same. Defaults to false, meaning translation is only
 performed when source and target languages are different.

$sourceLanguage				*yii/i18n/MessageSource::$sourceLanguage*

 (string) The language that the original messages are in. If not set, it will
 use the value of '\yii\base\Application::sourceLanguage'.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|


*yii/i18n/MessageSource::init*				public
>
 init()
<
return (void)

 Initializes this component.


*yii/i18n/MessageSource::loadMessages*			protected
>
 loadMessages($category, $language)
<
return (array) The loaded messages. The keys are original messages, and the values
are translated messages.

 Loads the message translation for the specified language and category.

 If translation for specific locale code such as 'en-US' isn't found it tries
 more generic 'en'.

    [$category] (string) The message category
    [$language] (string) The target language


*yii/i18n/MessageSource::translate*			public
>
 translate($category, $message, $language)
<
return (string|bool) The translated message or false if translation wasn't found or
isn't required

 Translates a message to the specified language.

 Note that unless 'forceTranslation' is true, if the target language is the
 same as the 'sourceLanguage|source language', the message will NOT be
 translated.

 If a translation is not found, a
 'EVENT_MISSING_TRANSLATION|missingTranslation' event will be triggered.

    [$category] (string) The message category
    [$message] (string) The message to be translated
    [$language] (string) The target language


*yii/i18n/MessageSource::translateMessage*		protected
>
 translateMessage($category, $message, $language)
<
return (string|bool) The translated message or false if translation wasn't found.

 Translates the specified message.

 If the message is not found, a 'EVENT_MISSING_TRANSLATION|missingTranslation'
 event will be triggered. If there is an event handler, it may provide a
 'MissingTranslationEvent::$translatedMessage|fallback translation'. If no
 fallback translation is provided this method will return 'false'.

    [$category] (string) The category that the message belongs to.
    [$message] (string) The message to be translated.
    [$language] (string) The target language.



 vim:tw=78:ts=8:ft=help:norl:
