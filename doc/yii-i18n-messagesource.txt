
*yii/i18n/MessageSource*   >> |yii/base/Component|
========================

SUBCLASSES
------------------------------------------------------------------------------

|yii/i18n/GettextMessageSource|
|yii/i18n/DbMessageSource|
|yii/i18n/PhpMessageSource|

DESCRIPTION
------------------------------------------------------------------------------

 A message source stores message translations in some persistent storage.

 Child classes should override 'loadMessages()' to provide translated
 messages.


PROPERTY DETAILS
------------------------------------------------------------------------------

$forceTranslation			*yii/i18n/MessageSource::$forceTranslation*

 (boolean) Whether to force message translation when the source and target
 languages are the same. Defaults to false, meaning translation is only
 performed when source and target languages are different.

$sourceLanguage				*yii/i18n/MessageSource::$sourceLanguage*

 (string) The language that the original messages are in. If not set, it will
 use the value of '\yii\base\Application::sourceLanguage'.

$behaviors				*yii/i18n/MessageSource::$behaviors*

 See |yii/base/Component::$behaviors|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/i18n/MessageSource::className*			public

 See |yii/base/Object::className|


*yii/i18n/MessageSource::__construct*			public

 See |yii/base/Object::__construct|


*yii/i18n/MessageSource::init*				public
>
 init()
<
return (void)



*yii/i18n/MessageSource::__get*				public

 See |yii/base/Component::__get|


*yii/i18n/MessageSource::__set*				public

 See |yii/base/Component::__set|


*yii/i18n/MessageSource::__isset*				public

 See |yii/base/Component::__isset|


*yii/i18n/MessageSource::__unset*				public

 See |yii/base/Component::__unset|


*yii/i18n/MessageSource::__call*				public

 See |yii/base/Component::__call|


*yii/i18n/MessageSource::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/i18n/MessageSource::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/i18n/MessageSource::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/i18n/MessageSource::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/i18n/MessageSource::__clone*				public

 See |yii/base/Component::__clone|


*yii/i18n/MessageSource::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/i18n/MessageSource::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/i18n/MessageSource::on*				public

 See |yii/base/Component::on|


*yii/i18n/MessageSource::off*				public

 See |yii/base/Component::off|


*yii/i18n/MessageSource::trigger*				public

 See |yii/base/Component::trigger|


*yii/i18n/MessageSource::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/i18n/MessageSource::getBehaviors*			public

 See |yii/base/Component::getBehaviors|


*yii/i18n/MessageSource::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/i18n/MessageSource::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/i18n/MessageSource::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/i18n/MessageSource::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/i18n/MessageSource::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/i18n/MessageSource::loadMessages*			protected
>
 loadMessages($category, $language)
<
return (array) The loaded messages. The keys are original messages, and the values
are translated messages.

 If translation for specific locale code such as 'en-US' isn't found it tries
 more generic 'en'.

    [$category] (string) The message category
    [$language] (string) The target language


*yii/i18n/MessageSource::translate*			public
>
 translate($category, $message, $language)
<
return (string|boolean) The translated message or false if translation wasn't found
or isn't required

 Note that unless 'forceTranslation' is true, if the target language is the
 same as the 'sourceLanguage|source language', the message will NOT be
 translated.

 If a translation is not found, a
 'EVENT_MISSING_TRANSLATION|missingTranslation' event will be triggered.

    [$category] (string) The message category
    [$message] (string) The message to be translated
    [$language] (string) The target language


*yii/i18n/MessageSource::translateMessage*		protected
>
 translateMessage($category, $message, $language)
<
return (string|boolean) The translated message or false if translation wasn't found.

 If the message is not found, a 'EVENT_MISSING_TRANSLATION|missingTranslation'
 event will be triggered. If there is an event handler, it may provide a
 'MissingTranslationEvent::$translatedMessage|fallback translation'. If no
 fallback translation is provided this method will return 'false'.

    [$category] (string) The category that the message belongs to.
    [$message] (string) The message to be translated.
    [$language] (string) The target language.



 vim:tw=78:ts=8:ft=help:norl:
