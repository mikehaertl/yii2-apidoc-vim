
*yii/db/oci/Schema*   >> |yii/db/Schema|
===================

DESCRIPTION
------------------------------------------------------------------------------




PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/oci/Schema::$db*
 See |yii/db/Schema::$db|

$defaultSchema				*yii/db/oci/Schema::$defaultSchema*
 See |yii/db/Schema::$defaultSchema|

$tableSchemas				*yii/db/oci/Schema::$tableSchemas*
 (\yii\db\TableSchema[]) The metadata for all tables in the database. Each
 array element is an instance of 'TableSchema' or its child class.

$tableNames				*yii/db/oci/Schema::$tableNames*
 (string[]) All table names in the database.

$queryBuilder				*yii/db/oci/Schema::$queryBuilder*
 (\yii\db\QueryBuilder) The query builder for this connection.

$lastInsertID				*yii/db/oci/Schema::$lastInsertID*
 (string) The row ID of the last row inserted, or the last value retrieved
 from the sequence object



METHOD DETAILS
------------------------------------------------------------------------------

*yii/db/oci/Schema::className*				public
 See |yii/base/Object::className|


*yii/db/oci/Schema::__construct*				public
 See |yii/base/Object::__construct|


*yii/db/oci/Schema::init*					public
>
 init()
<
(void)




*yii/db/oci/Schema::__get*				public
 See |yii/base/Object::__get|


*yii/db/oci/Schema::__set*				public
 See |yii/base/Object::__set|


*yii/db/oci/Schema::__isset*				public
 See |yii/base/Object::__isset|


*yii/db/oci/Schema::__unset*				public
 See |yii/base/Object::__unset|


*yii/db/oci/Schema::__call*				public
 See |yii/base/Object::__call|


*yii/db/oci/Schema::hasProperty*				public
 See |yii/base/Object::hasProperty|


*yii/db/oci/Schema::canGetProperty*			public
 See |yii/base/Object::canGetProperty|


*yii/db/oci/Schema::canSetProperty*			public
 See |yii/base/Object::canSetProperty|


*yii/db/oci/Schema::hasMethod*				public
 See |yii/base/Object::hasMethod|


*yii/db/oci/Schema::loadTableSchema*			public
>
 loadTableSchema($name)
<
(\yii\db\TableSchema) DBMS-dependent table metadata, null if the table does
not exist.


    [$name] () 


*yii/db/oci/Schema::getTableSchema*			public
 See |yii/db/Schema::getTableSchema|


*yii/db/oci/Schema::getCacheKey*				protected
 See |yii/db/Schema::getCacheKey|


*yii/db/oci/Schema::getCacheGroup*			protected
 See |yii/db/Schema::getCacheGroup|


*yii/db/oci/Schema::getTableSchemas*			public
 See |yii/db/Schema::getTableSchemas|


*yii/db/oci/Schema::getTableNames*			public
 See |yii/db/Schema::getTableNames|


*yii/db/oci/Schema::getQueryBuilder*			public
 See |yii/db/Schema::getQueryBuilder|


*yii/db/oci/Schema::getPdoType*				public
 See |yii/db/Schema::getPdoType|


*yii/db/oci/Schema::refresh*				public
 See |yii/db/Schema::refresh|


*yii/db/oci/Schema::createQueryBuilder*			public
>
 createQueryBuilder()
<
(\yii\db\QueryBuilder) Query builder instance




*yii/db/oci/Schema::findTableNames*			protected
>
 findTableNames($schema='\'\'')
<
(array) All table names in the database. The names have NO schema name prefix.


    [$schema] () 


*yii/db/oci/Schema::findUniqueIndexes*			public
 See |yii/db/Schema::findUniqueIndexes|


*yii/db/oci/Schema::getLastInsertID*			public
 See |yii/db/Schema::getLastInsertID|


*yii/db/oci/Schema::supportsSavepoint*			public
 See |yii/db/Schema::supportsSavepoint|


*yii/db/oci/Schema::createSavepoint*			public
 See |yii/db/Schema::createSavepoint|


*yii/db/oci/Schema::releaseSavepoint*			public
>
 releaseSavepoint($name)
<
(void)


    [$name] () 


*yii/db/oci/Schema::rollBackSavepoint*			public
 See |yii/db/Schema::rollBackSavepoint|


*yii/db/oci/Schema::quoteValue*				public
 See |yii/db/Schema::quoteValue|


*yii/db/oci/Schema::quoteTableName*			public
 See |yii/db/Schema::quoteTableName|


*yii/db/oci/Schema::quoteColumnName*			public
 See |yii/db/Schema::quoteColumnName|


*yii/db/oci/Schema::quoteSimpleTableName*			public
>
 quoteSimpleTableName($name)
<
(string) The properly quoted table name


    [$name] () 


*yii/db/oci/Schema::quoteSimpleColumnName*		public
>
 quoteSimpleColumnName($name)
<
(string) The properly quoted column name


    [$name] () 


*yii/db/oci/Schema::getRawTableName*			public
 See |yii/db/Schema::getRawTableName|


*yii/db/oci/Schema::getColumnPhpType*			protected
 See |yii/db/Schema::getColumnPhpType|


*yii/db/oci/Schema::resolveTableNames*			protected
>
 resolveTableNames($table, $name)
<
(void)


    [$table] (\yii\db\TableSchema) The table metadata object
    [$name] (string) The table name


*yii/db/oci/Schema::findColumns*				protected
>
 findColumns($table)
<
(boolean) Whether the table exists


    [$table] (\yii\db\TableSchema) The table schema


*yii/db/oci/Schema::createColumn*				protected
>
 createColumn($column)
<
(void)

    [$column] () 


*yii/db/oci/Schema::findConstraints*			protected
>
 findConstraints($table)
<
(void)

    [$table] () 


*yii/db/oci/Schema::extractColumnType*			protected
>
 extractColumnType($column, $dbType)
<
(void)


    [$column] (\yii\db\ColumnSchema) 
    [$dbType] (string) DB type


*yii/db/oci/Schema::extractColumnSize*			protected
>
 extractColumnSize($column, $dbType)
<
(void)


    [$column] (\yii\db\ColumnSchema) 
    [$dbType] (string) The column's DB type



 vim:tw=78:ts=8:ft=help:norl:
