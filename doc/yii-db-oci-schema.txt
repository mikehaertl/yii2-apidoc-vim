
*yii/db/oci/Schema*   >> |yii/db/Schema|
===================


PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/oci/Schema::$db*

 See |yii/db/Schema::$db|

$defaultSchema				*yii/db/oci/Schema::$defaultSchema*

 See |yii/db/Schema::$defaultSchema|

$exceptionMap				*yii/db/oci/Schema::$exceptionMap*

 (array) Map of DB errors and corresponding exceptions If left part is found
 in DB error message exception class from the right part is used.

$tableSchemas				*yii/db/oci/Schema::$tableSchemas*

 See |yii/db/Schema::$tableSchemas|

$schemaNames				*yii/db/oci/Schema::$schemaNames*

 See |yii/db/Schema::$schemaNames|

$tableNames				*yii/db/oci/Schema::$tableNames*

 See |yii/db/Schema::$tableNames|

$queryBuilder				*yii/db/oci/Schema::$queryBuilder*

 See |yii/db/Schema::$queryBuilder|

$lastInsertID				*yii/db/oci/Schema::$lastInsertID*

 (string) The row ID of the last row inserted, or the last value retrieved
 from the sequence object

$transactionIsolationLevel		*yii/db/oci/Schema::$transactionIsolationLevel*

 See |yii/db/Schema::$transactionIsolationLevel|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/db/oci/Schema::className*				public

 See |yii/base/Object::className|


*yii/db/oci/Schema::__construct*				public

 See |yii/base/Object::__construct|


*yii/db/oci/Schema::init*					public
>
 init()
<
return (void)



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/db/oci/Schema::__get*				public

 See |yii/base/Object::__get|


*yii/db/oci/Schema::__set*				public

 See |yii/base/Object::__set|


*yii/db/oci/Schema::__isset*				public

 See |yii/base/Object::__isset|


*yii/db/oci/Schema::__unset*				public

 See |yii/base/Object::__unset|


*yii/db/oci/Schema::__call*				public

 See |yii/base/Object::__call|


*yii/db/oci/Schema::hasProperty*				public

 See |yii/base/Object::hasProperty|


*yii/db/oci/Schema::canGetProperty*			public

 See |yii/base/Object::canGetProperty|


*yii/db/oci/Schema::canSetProperty*			public

 See |yii/base/Object::canSetProperty|


*yii/db/oci/Schema::hasMethod*				public

 See |yii/base/Object::hasMethod|


*yii/db/oci/Schema::createColumnSchema*			protected

 See |yii/db/Schema::createColumnSchema|


*yii/db/oci/Schema::loadTableSchema*			public
>
 loadTableSchema($name)
<
return (null|\yii\db\TableSchema) DBMS-dependent table metadata, null if the table
does not exist.







    [$name] (string) Table name


*yii/db/oci/Schema::getTableSchema*			public

 See |yii/db/Schema::getTableSchema|


*yii/db/oci/Schema::getCacheKey*				protected

 See |yii/db/Schema::getCacheKey|


*yii/db/oci/Schema::getCacheTag*				protected

 See |yii/db/Schema::getCacheTag|


*yii/db/oci/Schema::getTableSchemas*			public

 See |yii/db/Schema::getTableSchemas|


*yii/db/oci/Schema::getSchemaNames*			public

 See |yii/db/Schema::getSchemaNames|


*yii/db/oci/Schema::getTableNames*			public

 See |yii/db/Schema::getTableNames|


*yii/db/oci/Schema::getQueryBuilder*			public

 See |yii/db/Schema::getQueryBuilder|


*yii/db/oci/Schema::getPdoType*				public

 See |yii/db/Schema::getPdoType|


*yii/db/oci/Schema::refresh*				public

 See |yii/db/Schema::refresh|


*yii/db/oci/Schema::refreshTableSchema*			public

 See |yii/db/Schema::refreshTableSchema|


*yii/db/oci/Schema::createQueryBuilder*			public
>
 createQueryBuilder()
<
return (\yii\db\QueryBuilder) Query builder instance



 This method may be overridden by child classes to create a DBMS-specific
 query builder.




*yii/db/oci/Schema::createColumnSchemaBuilder*		public
>
 createColumnSchemaBuilder($type, $length='null')
<
return (\yii\db\ColumnSchemaBuilder) Column schema builder instance



 This method may be overridden by child classes to create a DBMS-specific
 column schema builder.



    [$type] (string) Type of the column. See 'ColumnSchemaBuilder::$type'.
    [$length] (integer|string|array) Length or precision of the column. See
    'ColumnSchemaBuilder::$length'.


*yii/db/oci/Schema::findSchemaNames*			protected
>
 findSchemaNames()
<
return (array) All schema names in the database, except system schemas



 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.




*yii/db/oci/Schema::findTableNames*			protected
>
 findTableNames($schema='''')
<
return (array) All table names in the database. The names have NO schema name prefix.



 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.



    [$schema] (string) The schema of the tables. Defaults to empty string,
    meaning the current or default schema.


*yii/db/oci/Schema::findUniqueIndexes*			public
>
 findUniqueIndexes($table)
<
return (array) All unique indexes for the given table.

 Each array element is of the following structure:

   [
       'IndexName1' => ['col1' [, ...]],
       'IndexName2' => ['col2' [, ...]],
   ]



    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/oci/Schema::getLastInsertID*			public
>
 getLastInsertID($sequenceName='''')
<
return (string) The row ID of the last row inserted, or the last value retrieved from
the sequence object

    [$sequenceName] (string) Name of the sequence object (required by some
    DBMS)


*yii/db/oci/Schema::supportsSavepoint*			public

 See |yii/db/Schema::supportsSavepoint|


*yii/db/oci/Schema::createSavepoint*			public

 See |yii/db/Schema::createSavepoint|


*yii/db/oci/Schema::releaseSavepoint*			public
>
 releaseSavepoint($name)
<
return (void)







    [$name] (string) The savepoint name


*yii/db/oci/Schema::rollBackSavepoint*			public

 See |yii/db/Schema::rollBackSavepoint|


*yii/db/oci/Schema::setTransactionIsolationLevel*		public

 See |yii/db/Schema::setTransactionIsolationLevel|


*yii/db/oci/Schema::insert*				public
>
 insert($table, $columns)
<
return (array|false) Primary key values or false if the command fails







    [$table] (string) The table that new rows will be inserted into.
    [$columns] (array) The column data (name => value) to be inserted into the
    table.


*yii/db/oci/Schema::quoteValue*				public

 See |yii/db/Schema::quoteValue|


*yii/db/oci/Schema::quoteTableName*			public

 See |yii/db/Schema::quoteTableName|


*yii/db/oci/Schema::quoteColumnName*			public

 See |yii/db/Schema::quoteColumnName|


*yii/db/oci/Schema::quoteSimpleTableName*			public
>
 quoteSimpleTableName($name)
<
return (string) The properly quoted table name



 A simple table name should contain the table name only without any schema
 prefix. If the table name is already quoted, this method will do nothing.



    [$name] (string) Table name


*yii/db/oci/Schema::quoteSimpleColumnName*		public

 See |yii/db/Schema::quoteSimpleColumnName|


*yii/db/oci/Schema::getRawTableName*			public

 See |yii/db/Schema::getRawTableName|


*yii/db/oci/Schema::getColumnPhpType*			protected

 See |yii/db/Schema::getColumnPhpType|


*yii/db/oci/Schema::convertException*			public

 See |yii/db/Schema::convertException|


*yii/db/oci/Schema::isReadQuery*				public

 See |yii/db/Schema::isReadQuery|


*yii/db/oci/Schema::resolveTableNames*			protected
>
 resolveTableNames($table, $name)
<
return (void)

    [$table] (\yii\db\TableSchema) The table metadata object
    [$name] (string) The table name


*yii/db/oci/Schema::findColumns*				protected
>
 findColumns($table)
<
return (boolean) Whether the table exists

    [$table] (\yii\db\TableSchema) The table schema


*yii/db/oci/Schema::getTableSequenceName*			protected
>
 getTableSequenceName($tableName)
<
return (string|null) Whether the sequence exists

    [$tableName] (string) 


*yii/db/oci/Schema::createColumn*				protected
>
 createColumn($column)
<
return (\yii\db\ColumnSchema) 

    [$column] (array) 


*yii/db/oci/Schema::findConstraints*			protected
>
 findConstraints($table)
<
return (void)

    [$table] (\yii\db\TableSchema) 


*yii/db/oci/Schema::extractColumnType*			protected
>
 extractColumnType($column, $dbType, $precision, $scale, $length)
<
return (void)

    [$column] (\yii\db\ColumnSchema) 
    [$dbType] (string) DB type
    [$precision] (string) Total number of digits. This parameter is available
    since version 2.0.4.
    [$scale] (string) Number of digits on the right of the decimal separator.
    This parameter is available since version 2.0.4.
    [$length] (string) Length for character types. This parameter is available
    since version 2.0.4.


*yii/db/oci/Schema::extractColumnSize*			protected
>
 extractColumnSize($column, $dbType, $precision, $scale, $length)
<
return (void)

    [$column] (\yii\db\ColumnSchema) 
    [$dbType] (string) The column's DB type
    [$precision] (string) Total number of digits. This parameter is available
    since version 2.0.4.
    [$scale] (string) Number of digits on the right of the decimal separator.
    This parameter is available since version 2.0.4.
    [$length] (string) Length for character types. This parameter is available
    since version 2.0.4.



 vim:tw=78:ts=8:ft=help:norl:
