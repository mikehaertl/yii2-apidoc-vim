
*yii/db/oci/Schema*   >> |yii/db/Schema|
===================


PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/oci/Schema::$db*
 See |yii/db/Schema::$db|

$defaultSchema				*yii/db/oci/Schema::$defaultSchema*
 See |yii/db/Schema::$defaultSchema|

$exceptionMap				*yii/db/oci/Schema::$exceptionMap*
 See |yii/db/Schema::$exceptionMap|

$tableSchemas				*yii/db/oci/Schema::$tableSchemas*
 (\yii\db\TableSchema[]) The metadata for all tables in the database. Each
 array element is an instance of 'TableSchema' or its child class.

$tableNames				*yii/db/oci/Schema::$tableNames*
 (string[]) All table names in the database.

$queryBuilder				*yii/db/oci/Schema::$queryBuilder*
 (\yii\db\QueryBuilder) The query builder for this connection.

$lastInsertID				*yii/db/oci/Schema::$lastInsertID*
 (string) The row ID of the last row inserted, or the last value retrieved
 from the sequence object

$transactionIsolationLevel		*yii/db/oci/Schema::$transactionIsolationLevel*
 (string) The transaction isolation level to use for this transaction. This
 can be one of 'Transaction::READ_UNCOMMITTED', 'Transaction::READ_COMMITTED',
 'Transaction::REPEATABLE_READ' and 'Transaction::SERIALIZABLE' but also a
 string containing DBMS specific syntax to be used after 'SET TRANSACTION
 ISOLATION LEVEL'.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/db/oci/Schema::className*				public
 See |yii/base/Object::className|


*yii/db/oci/Schema::__construct*				public
 See |yii/base/Object::__construct|


*yii/db/oci/Schema::init*					public
>
 init()
<
(void)

 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.


*yii/db/oci/Schema::__get*				public
 See |yii/base/Object::__get|


*yii/db/oci/Schema::__set*				public
 See |yii/base/Object::__set|


*yii/db/oci/Schema::__isset*				public
 See |yii/base/Object::__isset|


*yii/db/oci/Schema::__unset*				public
 See |yii/base/Object::__unset|


*yii/db/oci/Schema::__call*				public
 See |yii/base/Object::__call|


*yii/db/oci/Schema::hasProperty*				public
 See |yii/base/Object::hasProperty|


*yii/db/oci/Schema::canGetProperty*			public
 See |yii/base/Object::canGetProperty|


*yii/db/oci/Schema::canSetProperty*			public
 See |yii/base/Object::canSetProperty|


*yii/db/oci/Schema::hasMethod*				public
 See |yii/base/Object::hasMethod|


*yii/db/oci/Schema::loadTableSchema*			public
>
 loadTableSchema($name)
<
(\yii\db\TableSchema) DBMS-dependent table metadata, null if the table does
not exist.

    [$name] (string) Table name


*yii/db/oci/Schema::getTableSchema*			public
 See |yii/db/Schema::getTableSchema|


*yii/db/oci/Schema::getCacheKey*				protected
 See |yii/db/Schema::getCacheKey|


*yii/db/oci/Schema::getCacheTag*				protected
 See |yii/db/Schema::getCacheTag|


*yii/db/oci/Schema::getTableSchemas*			public
 See |yii/db/Schema::getTableSchemas|


*yii/db/oci/Schema::getTableNames*			public
 See |yii/db/Schema::getTableNames|


*yii/db/oci/Schema::getQueryBuilder*			public
 See |yii/db/Schema::getQueryBuilder|


*yii/db/oci/Schema::getPdoType*				public
 See |yii/db/Schema::getPdoType|


*yii/db/oci/Schema::refresh*				public
 See |yii/db/Schema::refresh|


*yii/db/oci/Schema::createQueryBuilder*			public
>
 createQueryBuilder()
<
(\yii\db\QueryBuilder) Query builder instance

 This method may be overridden by child classes to create a DBMS-specific
 query builder.


*yii/db/oci/Schema::findTableNames*			protected
>
 findTableNames($schema='''')
<
(array) All table names in the database. The names have NO schema name prefix.

 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.
    [$schema] (string) The schema of the tables. Defaults to empty string,
    meaning the current or default schema.


*yii/db/oci/Schema::findUniqueIndexes*			public
 See |yii/db/Schema::findUniqueIndexes|


*yii/db/oci/Schema::getLastInsertID*			public
>
 getLastInsertID($sequenceName='''')
<
(string) The row ID of the last row inserted, or the last value retrieved from
the sequence object

    [$sequenceName] (string) Name of the sequence object (required by some
    DBMS)


*yii/db/oci/Schema::supportsSavepoint*			public
 See |yii/db/Schema::supportsSavepoint|


*yii/db/oci/Schema::createSavepoint*			public
 See |yii/db/Schema::createSavepoint|


*yii/db/oci/Schema::releaseSavepoint*			public
>
 releaseSavepoint($name)
<
(void)

    [$name] (string) The savepoint name


*yii/db/oci/Schema::rollBackSavepoint*			public
 See |yii/db/Schema::rollBackSavepoint|


*yii/db/oci/Schema::setTransactionIsolationLevel*		public
 See |yii/db/Schema::setTransactionIsolationLevel|


*yii/db/oci/Schema::quoteValue*				public
 See |yii/db/Schema::quoteValue|


*yii/db/oci/Schema::quoteTableName*			public
 See |yii/db/Schema::quoteTableName|


*yii/db/oci/Schema::quoteColumnName*			public
 See |yii/db/Schema::quoteColumnName|


*yii/db/oci/Schema::quoteSimpleTableName*			public
>
 quoteSimpleTableName($name)
<
(string) The properly quoted table name

 A simple table name should contain the table name only without any schema
 prefix. If the table name is already quoted, this method will do nothing.
    [$name] (string) Table name


*yii/db/oci/Schema::quoteSimpleColumnName*		public
 See |yii/db/Schema::quoteSimpleColumnName|


*yii/db/oci/Schema::getRawTableName*			public
 See |yii/db/Schema::getRawTableName|


*yii/db/oci/Schema::getColumnPhpType*			protected
 See |yii/db/Schema::getColumnPhpType|


*yii/db/oci/Schema::convertException*			public
 See |yii/db/Schema::convertException|


*yii/db/oci/Schema::isReadQuery*				public
 See |yii/db/Schema::isReadQuery|


*yii/db/oci/Schema::resolveTableNames*			protected
>
 resolveTableNames($table, $name)
<
(void)

    [$table] (\yii\db\TableSchema) The table metadata object
    [$name] (string) The table name


*yii/db/oci/Schema::findColumns*				protected
>
 findColumns($table)
<
(boolean) Whether the table exists

    [$table] (\yii\db\TableSchema) The table schema


*yii/db/oci/Schema::getTableSequenceName*			protected
>
 getTableSequenceName($tablename)
<
(string) Whether the sequence exists

    [$tablename] () 


*yii/db/oci/Schema::createColumn*				protected
>
 createColumn($column)
<
(\yii\db\ColumnSchema) 

    [$column] (array) 


*yii/db/oci/Schema::findConstraints*			protected
>
 findConstraints($table)
<
(void)

    [$table] (\yii\db\TableSchema) 


*yii/db/oci/Schema::extractColumnType*			protected
>
 extractColumnType($column, $dbType)
<
(void)

    [$column] (\yii\db\ColumnSchema) 
    [$dbType] (string) DB type


*yii/db/oci/Schema::extractColumnSize*			protected
>
 extractColumnSize($column, $dbType)
<
(void)

    [$column] (\yii\db\ColumnSchema) 
    [$dbType] (string) The column's DB type



 vim:tw=78:ts=8:ft=help:norl:
