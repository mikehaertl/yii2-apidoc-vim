
*yii/apidoc/templates/html/ApiRenderer*   >> |yii/apidoc/renderers/ApiRenderer|
=======================================

SUBCLASSES
------------------------------------------------------------------------------

|yii/apidoc/templates/bootstrap/ApiRenderer|
|yii/apidoc/templates/online/ApiRenderer|


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/apidoc/renderers/BaseRenderer::$guidePrefix|
 |yii/apidoc/renderers/BaseRenderer::$apiUrl|
 |yii/apidoc/renderers/BaseRenderer::$pageTitle|
 |yii/apidoc/renderers/BaseRenderer::$apiContext|
 |yii/apidoc/renderers/BaseRenderer::$controller|
 |yii/apidoc/renderers/BaseRenderer::$guideUrl|


$layout					*yii/apidoc/templates/html/ApiRenderer::$layout*

 (string) Path or alias of the layout file to use.

$typeView				*yii/apidoc/templates/html/ApiRenderer::$typeView*

 (string) Path or alias of the view file to use for rendering types (classes,
 interfaces, traits).

$indexView				*yii/apidoc/templates/html/ApiRenderer::$indexView*

 (string) Path or alias of the view file to use for rendering the index page.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/apidoc/renderers/BaseRenderer::createTypeLink|
 |yii/apidoc/renderers/BaseRenderer::createSubjectLink|
 |yii/apidoc/renderers/BaseRenderer::generateGuideUrl|


*yii/apidoc/templates/html/ApiRenderer::init*		public
>
 init()
<
return (void)








*yii/apidoc/templates/html/ApiRenderer::generateLink*	protected
>
 generateLink($text, $href, $options='[]')
<
return (mixed) 

 Generate link markup







    [$text] () 
    [$href] () 
    [$options] (array) Additional HTML attributes for the link.


*yii/apidoc/templates/html/ApiRenderer::generateApiUrl*	public
>
 generateApiUrl($typeName)
<
return (mixed) 

 Generate an url to a type in apidocs







    [$typeName] () 


*yii/apidoc/templates/html/ApiRenderer::render*		public
>
 render($context, $targetDir)
<
return (void)

 Renders a given 'Context'.

    [$context] (\yii\apidoc\models\Context) The api documentation context to
    render.
    [$targetDir] (string) 


*yii/apidoc/templates/html/ApiRenderer::getView*		public
>
 getView()
<
return (\yii\web\View) The view instance



*yii/apidoc/templates/html/ApiRenderer::renderWithLayout*	protected
>
 renderWithLayout($viewFile, $params)
<
return (string) 

 Renders file applying layout

    [$viewFile] (string) The view name
    [$params] (array) The parameters (name-value pairs) that will be extracted
    and made available in the view file.


*yii/apidoc/templates/html/ApiRenderer::renderInheritance*public
>
 renderInheritance($class)
<
return (string) 

    [$class] (\yii\apidoc\models\ClassDoc) 


*yii/apidoc/templates/html/ApiRenderer::renderInterfaces*	public
>
 renderInterfaces($names)
<
return (string) 

    [$names] (array) 


*yii/apidoc/templates/html/ApiRenderer::renderTraits*	public
>
 renderTraits($names)
<
return (string) 

    [$names] (array) 


*yii/apidoc/templates/html/ApiRenderer::renderClasses*	public
>
 renderClasses($names)
<
return (string) 

    [$names] (array) 


*yii/apidoc/templates/html/ApiRenderer::renderPropertySignature*public
>
 renderPropertySignature($property, $context='null')
<
return (string) 

    [$property] (\yii\apidoc\models\PropertyDoc) 
    [$context] (mixed) 


*yii/apidoc/templates/html/ApiRenderer::renderMethodSignature*public
>
 renderMethodSignature($method, $context='null')
<
return (string) 

    [$method] (\yii\apidoc\models\MethodDoc) 
    [$context] () 


*yii/apidoc/templates/html/ApiRenderer::renderDefaultValue*public
>
 renderDefaultValue($value)
<
return (string) 

 Renders the default value.

    [$value] (mixed) 


*yii/apidoc/templates/html/ApiRenderer::generateFileName*	protected
>
 generateFileName($typeName)
<
return (string) 

 Generates file name for API page for a given type

    [$typeName] (string) 


*yii/apidoc/templates/html/ApiRenderer::getViewPath*	public
>
 getViewPath()
<
return (void)



*yii/apidoc/templates/html/ApiRenderer::getSourceUrl*	public
>
 getSourceUrl($type, $line='null')
<
return (void)

    [$type] () 
    [$line] () 



 vim:tw=78:ts=8:ft=help:norl:
