
*yii/debug/models/timeline/DataProvider*   >> |yii/data/ArrayDataProvider|
========================================


PROPERTY DETAILS
------------------------------------------------------------------------------


$panel					*yii/debug/models/timeline/DataProvider::$panel*

 (\yii\debug\panels\TimelinePanel)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/debug/models/timeline/DataProvider::__construct*	public
>
 __construct($panel, $config='[]')
<
return (void)

 DataProvider constructor.

    [$panel] (\yii\debug\panels\TimelinePanel) 
    [$config] (array) 


*yii/debug/models/timeline/DataProvider::prepareModels*	protected
>
 prepareModels()
<
return (void)



*yii/debug/models/timeline/DataProvider::getColor*	public
>
 getColor($model)
<
return (string) 

 Getting HEX color based on model duration

    [$model] (array) 


*yii/debug/models/timeline/DataProvider::getLeft*		public
>
 getLeft($model)
<
return (float) 

 Returns the offset left item, percentage of the total width

    [$model] (array) 


*yii/debug/models/timeline/DataProvider::getTime*		public
>
 getTime($model)
<
return (float) 

 Returns item duration, milliseconds

    [$model] (array) 


*yii/debug/models/timeline/DataProvider::getWidth*	public
>
 getWidth($model)
<
return (float) 

 Returns item width percent of the total width

    [$model] (array) 


*yii/debug/models/timeline/DataProvider::getCssClass*	public
>
 getCssClass($model)
<
return (string) 

 Returns item, css class

    [$model] (array) 


*yii/debug/models/timeline/DataProvider::getRulers*	public
>
 getRulers($line=10)
<
return (array) 

 Ruler items, key milliseconds, value offset left

    [$line] (int) Number of columns


*yii/debug/models/timeline/DataProvider::getMemory*	public
>
 getMemory($model)
<
return (array|null) 

 '''php [   0 => string, memory usage (MB)   1 => float, Y position (percent)
 ]

    [$model] (array) 



 vim:tw=78:ts=8:ft=help:norl:
