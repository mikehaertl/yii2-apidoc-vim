
*yii/filters/auth/CompositeAuth*   >> |yii/filters/auth/AuthMethod|
================================

DESCRIPTION
------------------------------------------------------------------------------

 The authentication methods contained by CompositeAuth are configured via
 'authMethods', which is a list of supported authentication class
 configurations.

 The following example shows how to support three authentication methods:

   public function behaviors()
   {
       return [
           'corsFilter' => [
               'class' => \yii\filters\Cors::className(),
               // restrict access to
               'Origin' => ['http://www.myserver.com',
 'https://www.myserver.com'],
               'Access-Control-Request-Method' => ['POST', 'PUT'],
               // Allow only POST and PUT methods
               'Access-Control-Request-Headers' => ['X-Wsse'],
               // Allow only headers 'X-Wsse'
               'Access-Control-Allow-Credentials' => true,
               // Allow OPTIONS caching
               'Access-Control-Max-Age' => 3600,

           ],
       ];
   }




PROPERTY DETAILS
------------------------------------------------------------------------------

$owner					*yii/filters/auth/CompositeAuth::$owner*
 See |yii/base/Behavior::$owner|

$only					*yii/filters/auth/CompositeAuth::$only*
 See |yii/base/ActionFilter::$only|

$except					*yii/filters/auth/CompositeAuth::$except*
 See |yii/base/ActionFilter::$except|

$user					*yii/filters/auth/CompositeAuth::$user*
 See |yii/filters/auth/AuthMethod::$user|

$request				*yii/filters/auth/CompositeAuth::$request*
 See |yii/filters/auth/AuthMethod::$request|

$response				*yii/filters/auth/CompositeAuth::$response*
 See |yii/filters/auth/AuthMethod::$response|

$authMethods				*yii/filters/auth/CompositeAuth::$authMethods*
 (array) The supported authentication methods. This property should take a
 list of supported authentication methods, each represented by an
 authentication class or configuration.

 If this property is empty, no authentication will be performed.

 Note that an auth method class must implement the
 '\yii\filters\auth\AuthInterface' interface.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/filters/auth/CompositeAuth::className*		public
 See |yii/base/Object::className|


*yii/filters/auth/CompositeAuth::__construct*		public
 See |yii/base/Object::__construct|


*yii/filters/auth/CompositeAuth::init*			public
 See |yii/base/Object::init|


*yii/filters/auth/CompositeAuth::__get*			public
 See |yii/base/Object::__get|


*yii/filters/auth/CompositeAuth::__set*			public
 See |yii/base/Object::__set|


*yii/filters/auth/CompositeAuth::__isset*			public
 See |yii/base/Object::__isset|


*yii/filters/auth/CompositeAuth::__unset*			public
 See |yii/base/Object::__unset|


*yii/filters/auth/CompositeAuth::__call*			public
 See |yii/base/Object::__call|


*yii/filters/auth/CompositeAuth::hasProperty*		public
 See |yii/base/Object::hasProperty|


*yii/filters/auth/CompositeAuth::canGetProperty*		public
 See |yii/base/Object::canGetProperty|


*yii/filters/auth/CompositeAuth::canSetProperty*		public
 See |yii/base/Object::canSetProperty|


*yii/filters/auth/CompositeAuth::hasMethod*		public
 See |yii/base/Object::hasMethod|


*yii/filters/auth/CompositeAuth::events*			public
 See |yii/base/Behavior::events|


*yii/filters/auth/CompositeAuth::attach*			public
 See |yii/base/ActionFilter::attach|


*yii/filters/auth/CompositeAuth::detach*			public
 See |yii/base/ActionFilter::detach|


*yii/filters/auth/CompositeAuth::beforeFilter*		public
 See |yii/base/ActionFilter::beforeFilter|


*yii/filters/auth/CompositeAuth::afterFilter*		public
 See |yii/base/ActionFilter::afterFilter|


*yii/filters/auth/CompositeAuth::beforeAction*		public
>
 beforeAction($action)
<
(boolean) Whether the action should continue to be executed.

    [$action] (\yii\base\Action) The action to be executed.


*yii/filters/auth/CompositeAuth::afterAction*		public
 See |yii/base/ActionFilter::afterAction|


*yii/filters/auth/CompositeAuth::isActive*		protected
 See |yii/base/ActionFilter::isActive|


*yii/filters/auth/CompositeAuth::handleFailure*		public
 See |yii/filters/auth/AuthMethod::handleFailure|


*yii/filters/auth/CompositeAuth::authenticate*		public
>
 authenticate($user, $request, $response)
<
(\yii\web\IdentityInterface) The authenticated user identity. If
authentication information is not provided, null will be returned.

    [$user] (\yii\web\User) 
    [$request] (\yii\web\Request) 
    [$response] (\yii\web\Response) 



 vim:tw=78:ts=8:ft=help:norl:
