
*yii/helpers/BaseUrl*  
=====================

SUBCLASSES
------------------------------------------------------------------------------

|yii/helpers/Url|

DESCRIPTION
------------------------------------------------------------------------------

 Do not use BaseUrl. Use 'Url' instead.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/helpers/BaseUrl::toRoute*				public
>
 toRoute($route, $scheme='false')
<
(string) The generated URL

 This method will use '\yii\web\UrlManager' to create a URL.

 You may specify the route as a string, e.g., 'site/index'. You may also use
 an array if you want to specify additional query parameters for the URL being
 created. The array format must be:

   // generates: /index.php?r=site/index&param1=value1&param2=value2
   ['site/index', 'param1' => 'value1', 'param2' => 'value2']

 If you want to create a URL with an anchor, you can use the array format with
 a '#' parameter. For example,

   // generates: /index.php?r=site/index&param1=value1#name
   ['site/index', 'param1' => 'value1', '#' => 'name']

 A route may be either absolute or relative. An absolute route has a leading
 slash (e.g. '/site/index'), while a relative route has none (e.g.
 'site/index' or 'index'). A relative route will be converted into an absolute
 one by the following rules:


   - If the route is an empty string, the current
   '\yii\web\Controller::route|route' will be used; 
   - If the route contains no slashes at all (e.g. 'index'), it is
   considered to be an action ID   of the current controller and will be
 prepended with '\yii\web\Controller::uniqueId'; 
   - If the route has no leading slash (e.g. 'site/index'), it is
   considered to be a route relative   to the current module and will be
 prepended with the module's '\yii\base\Module::uniqueId|uniqueId'.

 Below are some examples of using this method:

   // /index?r=site/index
   echo Url::toRoute('site/index');

   // /index?r=site/index&src=ref1#name
   echo Url::toRoute(['site/index', 'src' => 'ref1', '#' => 'name']);

   // http://www.example.com/index.php?r=site/index
   echo Url::toRoute('site/index', true);

   // https://www.example.com/index.php?r=site/index
   echo Url::toRoute('site/index', 'https');


    [$route] (string|array) Use a string to represent a route (e.g. 'index',
    'site/index'), or an array to represent a route with query parameters
    (e.g. '['site/index', 'param1' => 'value1']').
    [$scheme] (boolean|string) The URI scheme to use in the generated URL:


      - 'false' (default): generating a relative URL. 
      - 'true': returning an absolute base URL whose scheme is the same as
      that in '\yii\web\UrlManager::hostInfo'. 
      - string: generating an absolute URL with the specified scheme
      (either 'http' or 'https').


*yii/helpers/BaseUrl::normalizeRoute*			protected
>
 normalizeRoute($route)
<
(string) Normalized route suitable for UrlManager

 A relative route is a route without a leading slash, such as "view",
 "post/view".


   - If the route is an empty string, the current
   '\yii\web\Controller::route|route' will be used; 
   - If the route contains no slashes at all, it is considered to be an
   action ID   of the current controller and will be prepended with
 '\yii\web\Controller::uniqueId'; 
   - If the route has no leading slash, it is considered to be a route
   relative   to the current module and will be prepended with the module's
 uniqueId.
    [$route] (string) The route. This can be either an absolute route or a
    relative route.


*yii/helpers/BaseUrl::to*					public
>
 to($url='\'\'', $scheme='false')
<
(string) The generated URL

 This method is very similar to 'toRoute()'. The only difference is that this
 method requires a route to be specified as an array only. If a string is
 given, it will be treated as a URL. In particular, if '$url' is


   - an array: 'toRoute()' will be called to generate the URL. For
   example:   '['site/index']', '['post/index', 'page' => 2]'. Please refer to
 'toRoute()' for more details   on how to specify a route. 
   - a string with a leading '@': it is treated as an alias, and the
   corresponding aliased string   will be returned. 
   - an empty string: the currently requested URL will be returned; 
   - a normal string: it will be returned as is.

 When '$scheme' is specified (either a string or true), an absolute URL with
 host info (obtained from '\yii\web\UrlManager::hostInfo') will be returned.
 If '$url' is already an absolute URL, its scheme will be replaced with the
 specified one.

 Below are some examples of using this method:

   // /index?r=site/index
   echo Url::to(['site/index']);

   // /index?r=site/index&src=ref1#name
   echo Url::to(['site/index', 'src' => 'ref1', '#' => 'name']);

   // the currently requested URL
   echo Url::to();

   // /images/logo.gif
   echo Url::to('@web/images/logo.gif');

   // images/logo.gif
   echo Url::to('images/logo.gif');

   // http://www.example.com/images/logo.gif
   echo Url::to('@web/images/logo.gif', true);

   // https://www.example.com/images/logo.gif
   echo Url::to('@web/images/logo.gif', 'https');


    [$url] (array|string) The parameter to be used to generate a valid URL
    [$scheme] (boolean|string) The URI scheme to use in the generated URL:


      - 'false' (default): generating a relative URL. 
      - 'true': returning an absolute base URL whose scheme is the same as
      that in '\yii\web\UrlManager::hostInfo'. 
      - string: generating an absolute URL with the specified scheme
      (either 'http' or 'https').


*yii/helpers/BaseUrl::base*				public
>
 base($scheme='false')
<
(string) 

    [$scheme] (boolean|string) The URI scheme to use in the returned base URL:


      - 'false' (default): returning the base URL without host info. 
      - 'true': returning an absolute base URL whose scheme is the same as
      that in '\yii\web\UrlManager::hostInfo'. 
      - string: returning an absolute base URL with the specified scheme
      (either 'http' or 'https').


*yii/helpers/BaseUrl::remember*				public
>
 remember($url='\'\'', $name='null')
<
(void)

    [$url] (string|array) The URL to remember. Please refer to 'to()' for
    acceptable formats. If this parameter is not specified, the currently
    requested URL will be used.
    [$name] (string) The name associated with the URL to be remembered. This
    can be used later by 'previous()'. If not set, it will use
    '\yii\web\User::returnUrlParam'.


*yii/helpers/BaseUrl::previous*				public
>
 previous($name='null')
<
(string) The URL previously remembered. Null is returned if no URL was
remembered with the given name.

    [$name] (string) The named associated with the URL that was remembered
    previously. If not set, it will use '\yii\web\User::returnUrlParam'.


*yii/helpers/BaseUrl::canonical*				public
>
 canonical()
<
(string) The canonical URL of the currently requested page

 The canonical URL is constructed using the current controller's
 '\yii\web\Controller::route' and '\yii\web\Controller::actionParams'. You may
 use the following code in the layout view to add a link tag about canonical
 URL:

   $this->registerLinkTag(['rel' => 'canonical', 'href' => Url::canonical()]);




*yii/helpers/BaseUrl::home*				public
>
 home($scheme='false')
<
(string) Home URL

    [$scheme] (boolean|string) The URI scheme to use for the returned URL:


      - 'false' (default): returning a relative URL. 
      - 'true': returning an absolute base URL whose scheme is the same as
      that in '\yii\web\UrlManager::hostInfo'. 
      - string: returning an absolute URL with the specified scheme
      (either 'http' or 'https').


*yii/helpers/BaseUrl::isRelative*				public
>
 isRelative($url)
<
(boolean) Whether the URL is relative

 A relative URL does not have host info part.
    [$url] (string) The URL to be checked



 vim:tw=78:ts=8:ft=help:norl:
