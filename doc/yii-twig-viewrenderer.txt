
*yii/twig/ViewRenderer*   >> |yii/base/ViewRenderer|
=======================


PROPERTY DETAILS
------------------------------------------------------------------------------


$cachePath				*yii/twig/ViewRenderer::$cachePath*

 (string) The directory or path alias pointing to where Twig cache will be
 stored. Set to false to disable templates cache.

$options				*yii/twig/ViewRenderer::$options*

 (array) Twig options.

$globals				*yii/twig/ViewRenderer::$globals*

 (array) Global variables. Keys of the array are names to call in template,
 values are scalar or objects or names of static classes. Example: '['html' =>
 ['class' => '\yii\helpers\Html'], 'debug' => YII_DEBUG]'. In the template you
 can use it like this: '{{ html.a('Login', 'site/login') | raw }}'.

$functions				*yii/twig/ViewRenderer::$functions*

 (array) Custom functions. Keys of the array are names to call in template,
 values are names of functions or static methods of some class. Example:
 '['rot13' => 'str_rot13', 'a' => '\yii\helpers\Html::a']'. In the template
 you can use it like this: '{{ rot13('test') }}' or '{{ a('Login',
 'site/login') | raw }}'.

$filters				*yii/twig/ViewRenderer::$filters*

 (array) Custom filters. Keys of the array are names to call in template,
 values are names of functions or static methods of some class. Example:
 '['rot13' => 'str_rot13', 'jsonEncode' => '\yii\helpers\Json::encode']'. In
 the template you can use it like this: '{{ 'test'|rot13 }}' or '{{
 model|jsonEncode }}'.

$extensions				*yii/twig/ViewRenderer::$extensions*

 (array) Custom extensions. Example: '['Twig_Extension_Sandbox', new
 \Twig_Extension_Text()]'

$lexerOptions				*yii/twig/ViewRenderer::$lexerOptions*

 (array) Twig lexer options.

 Example: Smarty-like syntax:

   [
       'tag_comment'  => ['{*', '*}'],
       'tag_block'    => ['{', '}'],
       'tag_variable' => ['{$', '}']
   ]



$uses					*yii/twig/ViewRenderer::$uses*

 (array) Namespaces and classes to import.

 Example:

   [
       'yii\bootstrap',
       'app\assets',
       \yii\bootstrap\NavBar::class,
   ]



$twig					*yii/twig/ViewRenderer::$twig*

 (\Twig_Environment) Twig environment object that renders twig templates

$twigViewsNamespace			*yii/twig/ViewRenderer::$twigViewsNamespace*

 (string) Twig namespace to use in templates

$twigModulesNamespace			*yii/twig/ViewRenderer::$twigModulesNamespace*

 (string) Twig namespace to use in modules templates

$twigWidgetsNamespace			*yii/twig/ViewRenderer::$twigWidgetsNamespace*

 (string) Twig namespace to use in widgets templates

$twigFallbackPaths			*yii/twig/ViewRenderer::$twigFallbackPaths*

 (array) Twig fallback paths



METHOD DETAILS
------------------------------------------------------------------------------


*yii/twig/ViewRenderer::init*				public
>
 init()
<
return (void)



*yii/twig/ViewRenderer::render*				public
>
 render($view, $file, $params)
<
return (string) The rendering result

 Renders a view file.

 This method is invoked by 'View' whenever it tries to render a view. Child
 classes must implement this method to render the given view file.

    [$view] (\yii\base\View) The view object used for rendering the file.
    [$file] (string) The view file.
    [$params] (array) The parameters to be passed to the view file.


*yii/twig/ViewRenderer::addAliases*			protected
>
 addAliases($loader, $aliases)
<
return (void)

 Adds aliases

    [$loader] (\Twig_Loader_Filesystem) 
    [$aliases] (array) 


*yii/twig/ViewRenderer::addFallbackPaths*			protected
>
 addFallbackPaths($loader, $theme)
<
return (void)

 Adds fallback paths to twig loader

    [$loader] (\Twig_Loader_Filesystem) 
    [$theme] (\yii\base\Theme|null) 


*yii/twig/ViewRenderer::addGlobals*			public
>
 addGlobals($globals)
<
return (void)

 Adds global objects or static classes

    [$globals] (array) @see self::$globals


*yii/twig/ViewRenderer::addFunctions*			public
>
 addFunctions($functions)
<
return (void)

 Adds custom functions

    [$functions] (array) @see self::$functions


*yii/twig/ViewRenderer::addFilters*			public
>
 addFilters($filters)
<
return (void)

 Adds custom filters

    [$filters] (array) @see self::$filters


*yii/twig/ViewRenderer::addExtensions*			public
>
 addExtensions($extensions)
<
return (void)

 Adds custom extensions

    [$extensions] (array) @see self::$extensions


*yii/twig/ViewRenderer::setLexerOptions*			public
>
 setLexerOptions($options)
<
return (void)

 Sets Twig lexer options to change templates syntax

    [$options] (array) @see self::$lexerOptions



 vim:tw=78:ts=8:ft=help:norl:
