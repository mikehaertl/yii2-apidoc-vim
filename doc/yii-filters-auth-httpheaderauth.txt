
*yii/filters/auth/HttpHeaderAuth*   >> |yii/filters/auth/AuthMethod|
=================================

SUBCLASSES
------------------------------------------------------------------------------

|yii/filters/auth/HttpBearerAuth|

DESCRIPTION
------------------------------------------------------------------------------

 You may use HttpHeaderAuth by attaching it as a behavior to a controller or
 module, like the following:

   public function behaviors()
   {
       return [
           'basicAuth' => [
               'class' => \yii\filters\auth\HttpHeaderAuth::className(),
           ],
       ];
   }

 The default implementation of HttpHeaderAuth uses the
 '\yii\web\User::loginByAccessToken()|loginByAccessToken()' method of the
 'user' application component and passes the value of the 'X-Api-Key' header.
 This implementation is used for authenticating API clients.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Behavior::$owner|
 |yii/base/ActionFilter::$only|
 |yii/base/ActionFilter::$except|
 |yii/filters/auth/AuthMethod::$user|
 |yii/filters/auth/AuthMethod::$request|
 |yii/filters/auth/AuthMethod::$response|
 |yii/filters/auth/AuthMethod::$optional|


$header					*yii/filters/auth/HttpHeaderAuth::$header*

 (string) The HTTP header name

$pattern				*yii/filters/auth/HttpHeaderAuth::$pattern*

 (string) A pattern to use to extract the HTTP authentication value



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Behavior::events|
 |yii/base/ActionFilter::attach|
 |yii/base/ActionFilter::detach|
 |yii/base/ActionFilter::beforeFilter|
 |yii/base/ActionFilter::afterFilter|
 |yii/filters/auth/AuthMethod::beforeAction|
 |yii/base/ActionFilter::afterAction|
 |yii/base/ActionFilter::getActionId|
 |yii/base/ActionFilter::isActive|
 |yii/filters/auth/AuthMethod::challenge|
 |yii/filters/auth/AuthMethod::handleFailure|
 |yii/filters/auth/AuthMethod::isOptional|


*yii/filters/auth/HttpHeaderAuth::authenticate*		public
>
 authenticate($user, $request, $response)
<
return (void)

 {@inheritdoc}

    [$user] () 
    [$request] () 
    [$response] () 



 vim:tw=78:ts=8:ft=help:norl:
