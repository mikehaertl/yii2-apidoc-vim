
*yii/validators/EmailValidator*   >> |yii/validators/Validator|
===============================


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/EmailValidator::$builtInValidators*

 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/EmailValidator::$attributes*

 See |yii/validators/Validator::$attributes|

$message				*yii/validators/EmailValidator::$message*

 See |yii/validators/Validator::$message|

$on					*yii/validators/EmailValidator::$on*

 See |yii/validators/Validator::$on|

$except					*yii/validators/EmailValidator::$except*

 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/EmailValidator::$skipOnError*

 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/EmailValidator::$skipOnEmpty*

 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/EmailValidator::$enableClientValidation*

 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/EmailValidator::$isEmpty*

 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/EmailValidator::$when*

 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/EmailValidator::$whenClient*

 See |yii/validators/Validator::$whenClient|

$pattern				*yii/validators/EmailValidator::$pattern*

 (string) The regular expression used to validate the attribute value.

$fullPattern				*yii/validators/EmailValidator::$fullPattern*

 (string) The regular expression used to validate email addresses with the
 name part. This property is used only when 'allowName' is true.

$allowName				*yii/validators/EmailValidator::$allowName*

 (bool) Whether to allow name in the email address (e.g. "John Smith
 <john.smith@example.com>"). Defaults to false.

$checkDNS				*yii/validators/EmailValidator::$checkDNS*

 (bool) Whether to check whether the email's domain exists and has either an A
 or MX record. Be aware that this check can fail due to temporary DNS problems
 even if the email address is valid and an email would be deliverable.
 Defaults to false.

$enableIDN				*yii/validators/EmailValidator::$enableIDN*

 (bool) Whether validation process should take into account IDN
 (internationalized domain names). Defaults to false meaning that validation
 of emails containing IDN will always fail. Note that in order to use IDN
 validation you have to install and enable 'intl' PHP extension, otherwise an
 exception would be thrown.

$behaviors				*yii/validators/EmailValidator::$behaviors*

 See |yii/base/Component::$behaviors|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/validators/EmailValidator::className*		public

 See |yii/base/Object::className|


*yii/validators/EmailValidator::__construct*		public

 See |yii/base/Object::__construct|


*yii/validators/EmailValidator::init*			public
>
 init()
<
return (void)



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/validators/EmailValidator::__get*			public

 See |yii/base/Component::__get|


*yii/validators/EmailValidator::__set*			public

 See |yii/base/Component::__set|


*yii/validators/EmailValidator::__isset*			public

 See |yii/base/Component::__isset|


*yii/validators/EmailValidator::__unset*			public

 See |yii/base/Component::__unset|


*yii/validators/EmailValidator::__call*			public

 See |yii/base/Component::__call|


*yii/validators/EmailValidator::hasProperty*		public

 See |yii/base/Component::hasProperty|


*yii/validators/EmailValidator::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/validators/EmailValidator::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/validators/EmailValidator::hasMethod*		public

 See |yii/base/Component::hasMethod|


*yii/validators/EmailValidator::__clone*			public

 See |yii/base/Component::__clone|


*yii/validators/EmailValidator::behaviors*		public

 See |yii/base/Component::behaviors|


*yii/validators/EmailValidator::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/validators/EmailValidator::on*			public

 See |yii/base/Component::on|


*yii/validators/EmailValidator::off*			public

 See |yii/base/Component::off|


*yii/validators/EmailValidator::trigger*			public

 See |yii/base/Component::trigger|


*yii/validators/EmailValidator::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/validators/EmailValidator::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/validators/EmailValidator::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/validators/EmailValidator::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/validators/EmailValidator::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/validators/EmailValidator::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/validators/EmailValidator::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/validators/EmailValidator::createValidator*		public

 See |yii/validators/Validator::createValidator|


*yii/validators/EmailValidator::validateAttributes*	public

 See |yii/validators/Validator::validateAttributes|


*yii/validators/EmailValidator::validateAttribute*	public

 See |yii/validators/Validator::validateAttribute|


*yii/validators/EmailValidator::validate*			public

 See |yii/validators/Validator::validate|


*yii/validators/EmailValidator::validateValue*		protected
>
 validateValue($value)
<
return (array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.



 A validator class can implement this method to support data validation out of
 the context of a data model.



    [$value] (mixed) The data value to be validated.


*yii/validators/EmailValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (string) The client-side validation script. Null if the validator does not
support client-side validation.



 Calls 'getClientOptions()' to generate options array for client-side
 validation.

 You may override this method to return the JavaScript validation code if the
 validator can support client-side validation.

 The following JavaScript variables are predefined and can be used in the
 validation code:


   - 'attribute': an object describing the the attribute being
   validated. 
   - 'value': the value being validated. 
   - 'messages': an array used to hold the validation error messages
   for the attribute. 
   - 'deferred': an array used to hold deferred objects for
   asynchronous validation 
   - '$form': a jQuery object containing the form element

 The 'attribute' object contains the following properties: 
   - 'id': a unique ID identifying the attribute (e.g.
   "loginform-username") in the form 
   - 'name': attribute name or expression (e.g. "[0]content" for
   tabular input) 
   - 'container': the jQuery selector of the container of the input
   field 
   - 'input': the jQuery selector of the input field under the context
   of the form 
   - 'error': the jQuery selector of the error tag under the context of
   the container 
   - 'status': status of the input field, 0: empty, not entered before,
   1: validated, 2: pending validation, 3: validating



    [$model] (\yii\base\Model) The data model being validated
    [$attribute] (string) The name of the attribute to be validated.
    [$view] (\yii\web\View) The view object that is going to be used to render
    views or view files containing a model form with this validator applied.


*yii/validators/EmailValidator::getClientOptions*		public
>
 getClientOptions($model, $attribute)
<
return (array) The client-side validation options



 This method is usually called from 'clientValidateAttribute()'. You may
 override this method to modify options that will be passed to the client-side
 validation.



    [$model] (\yii\base\Model) The model being validated
    [$attribute] (string) The attribute name being validated


*yii/validators/EmailValidator::isActive*			public

 See |yii/validators/Validator::isActive|


*yii/validators/EmailValidator::addError*			public

 See |yii/validators/Validator::addError|


*yii/validators/EmailValidator::isEmpty*			public

 See |yii/validators/Validator::isEmpty|



 vim:tw=78:ts=8:ft=help:norl:
