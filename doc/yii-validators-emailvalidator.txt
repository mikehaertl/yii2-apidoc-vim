
*yii/validators/EmailValidator*   >> |yii/validators/Validator|
===============================


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/EmailValidator::$builtInValidators*

 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/EmailValidator::$attributes*

 See |yii/validators/Validator::$attributes|

$message				*yii/validators/EmailValidator::$message*

 See |yii/validators/Validator::$message|

$on					*yii/validators/EmailValidator::$on*

 See |yii/validators/Validator::$on|

$except					*yii/validators/EmailValidator::$except*

 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/EmailValidator::$skipOnError*

 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/EmailValidator::$skipOnEmpty*

 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/EmailValidator::$enableClientValidation*

 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/EmailValidator::$isEmpty*

 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/EmailValidator::$when*

 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/EmailValidator::$whenClient*

 See |yii/validators/Validator::$whenClient|

$pattern				*yii/validators/EmailValidator::$pattern*

 (string) The regular expression used to validate the attribute value.

$fullPattern				*yii/validators/EmailValidator::$fullPattern*

 (string) The regular expression used to validate email addresses with the
 name part. This property is used only when 'allowName' is true.

$allowName				*yii/validators/EmailValidator::$allowName*

 (bool) Whether to allow name in the email address (e.g. "John Smith
 <john.smith@example.com>"). Defaults to false.

$checkDNS				*yii/validators/EmailValidator::$checkDNS*

 (bool) Whether to check whether the email's domain exists and has either an A
 or MX record. Be aware that this check can fail due to temporary DNS problems
 even if the email address is valid and an email would be deliverable.
 Defaults to false.

$enableIDN				*yii/validators/EmailValidator::$enableIDN*

 (bool) Whether validation process should take into account IDN
 (internationalized domain names). Defaults to false meaning that validation
 of emails containing IDN will always fail. Note that in order to use IDN
 validation you have to install and enable 'intl' PHP extension, otherwise an
 exception would be thrown.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/validators/EmailValidator::className*		public

 See |yii/base/BaseObject::className|


*yii/validators/EmailValidator::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/validators/EmailValidator::init*			public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/validators/EmailValidator::__get*			public

 See |yii/base/Component::__get|


*yii/validators/EmailValidator::__set*			public

 See |yii/base/Component::__set|


*yii/validators/EmailValidator::__isset*			public

 See |yii/base/Component::__isset|


*yii/validators/EmailValidator::__unset*			public

 See |yii/base/Component::__unset|


*yii/validators/EmailValidator::__call*			public

 See |yii/base/Component::__call|


*yii/validators/EmailValidator::hasProperty*		public

 See |yii/base/Component::hasProperty|


*yii/validators/EmailValidator::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/validators/EmailValidator::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/validators/EmailValidator::hasMethod*		public

 See |yii/base/Component::hasMethod|


*yii/validators/EmailValidator::__clone*			public

 See |yii/base/Component::__clone|


*yii/validators/EmailValidator::behaviors*		public

 See |yii/base/Component::behaviors|


*yii/validators/EmailValidator::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/validators/EmailValidator::on*			public

 See |yii/base/Component::on|


*yii/validators/EmailValidator::off*			public

 See |yii/base/Component::off|


*yii/validators/EmailValidator::trigger*			public

 See |yii/base/Component::trigger|


*yii/validators/EmailValidator::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/validators/EmailValidator::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/validators/EmailValidator::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/validators/EmailValidator::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/validators/EmailValidator::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/validators/EmailValidator::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/validators/EmailValidator::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/validators/EmailValidator::createValidator*		public

 See |yii/validators/Validator::createValidator|


*yii/validators/EmailValidator::validateAttributes*	public

 See |yii/validators/Validator::validateAttributes|


*yii/validators/EmailValidator::validateAttribute*	public

 See |yii/validators/Validator::validateAttribute|


*yii/validators/EmailValidator::validate*			public

 See |yii/validators/Validator::validate|


*yii/validators/EmailValidator::validateValue*		protected
>
 validateValue($value)
<
return (void)

 {@inheritdoc}

    [$value] () 


*yii/validators/EmailValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 
    [$view] () 


*yii/validators/EmailValidator::getClientOptions*		public
>
 getClientOptions($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 


*yii/validators/EmailValidator::isActive*			public

 See |yii/validators/Validator::isActive|


*yii/validators/EmailValidator::addError*			public

 See |yii/validators/Validator::addError|


*yii/validators/EmailValidator::isEmpty*			public

 See |yii/validators/Validator::isEmpty|


*yii/validators/EmailValidator::formatMessage*		protected

 See |yii/validators/Validator::formatMessage|


*yii/validators/EmailValidator::getAttributeNames*	public

 See |yii/validators/Validator::getAttributeNames|



 vim:tw=78:ts=8:ft=help:norl:
