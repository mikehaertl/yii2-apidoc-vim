
*yii/authclient/clients/Facebook*   >> |yii/authclient/OAuth2|
=================================

DESCRIPTION
------------------------------------------------------------------------------

 In order to use Facebook OAuth you must register your application at
 <https://developers.facebook.com/apps>.

 Example application configuration:

   'components' => [
       'authClientCollection' => [
           'class' => 'yii\authclient\Collection',
           'clients' => [
               'facebook' => [
                   'class' => 'yii\authclient\clients\Facebook',
                   'clientId' => 'facebook_client_id',
                   'clientSecret' => 'facebook_client_secret',
               ],
           ],
       ]
       // ...
   ]




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/authclient/BaseOAuth::$version|
 |yii/authclient/OAuth2::$clientId|
 |yii/authclient/OAuth2::$clientSecret|
 |yii/authclient/OAuth2::$validateAuthState|


$apiBaseUrl				*yii/authclient/clients/Facebook::$apiBaseUrl*

 ()

$authUrl				*yii/authclient/clients/Facebook::$authUrl*

 ()

$scope					*yii/authclient/clients/Facebook::$scope*

 ()

$autoRefreshAccessToken			*yii/authclient/clients/Facebook::$autoRefreshAccessToken*

 ()

$tokenUrl				*yii/authclient/clients/Facebook::$tokenUrl*

 ()

$attributeNames				*yii/authclient/clients/Facebook::$attributeNames*

 (array) List of attribute names, which should be requested from API to
 initialize user attributes.

$autoExchangeAccessToken		*yii/authclient/clients/Facebook::$autoExchangeAccessToken*

 (bool) Whether to automatically upgrade short-live (2 hours) access token to
 long-live (60 days) one, after fetching it.

$clientAuthCodeUrl			*yii/authclient/clients/Facebook::$clientAuthCodeUrl*

 (string) URL endpoint for the client auth code generation.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/authclient/ClientInterface::setId|
 |yii/authclient/ClientInterface::getId|
 |yii/authclient/ClientInterface::setName|
 |yii/authclient/ClientInterface::getName|
 |yii/authclient/ClientInterface::setTitle|
 |yii/authclient/ClientInterface::getTitle|
 |yii/authclient/BaseClient::setUserAttributes|
 |yii/authclient/ClientInterface::getUserAttributes|
 |yii/authclient/BaseClient::setNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::getNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::setViewOptions|
 |yii/authclient/ClientInterface::getViewOptions|
 |yii/authclient/BaseClient::getHttpClient|
 |yii/authclient/BaseOAuth::setHttpClient|
 |yii/authclient/BaseClient::setRequestOptions|
 |yii/authclient/BaseClient::getRequestOptions|
 |yii/authclient/BaseClient::getStateStorage|
 |yii/authclient/BaseClient::setStateStorage|
 |yii/authclient/BaseClient::defaultNormalizeUserAttributeMap|
 |yii/authclient/BaseOAuth::createHttpClient|
 |yii/authclient/BaseClient::normalizeUserAttributes|
 |yii/authclient/BaseClient::createRequest|
 |yii/authclient/BaseOAuth::defaultRequestOptions|
 |yii/authclient/BaseClient::setState|
 |yii/authclient/BaseClient::getState|
 |yii/authclient/BaseClient::removeState|
 |yii/authclient/BaseClient::getStateKeyPrefix|
 |yii/authclient/BaseOAuth::setReturnUrl|
 |yii/authclient/BaseOAuth::getReturnUrl|
 |yii/authclient/BaseOAuth::setAccessToken|
 |yii/authclient/BaseOAuth::getAccessToken|
 |yii/authclient/BaseOAuth::setSignatureMethod|
 |yii/authclient/BaseOAuth::getSignatureMethod|
 |yii/authclient/BaseOAuth::defaultReturnUrl|
 |yii/authclient/BaseOAuth::createSignatureMethod|
 |yii/authclient/BaseOAuth::createToken|
 |yii/authclient/BaseOAuth::sendRequest|
 |yii/authclient/BaseOAuth::composeUrl|
 |yii/authclient/BaseOAuth::saveAccessToken|
 |yii/authclient/BaseOAuth::restoreAccessToken|
 |yii/authclient/BaseOAuth::createApiRequest|
 |yii/authclient/BaseOAuth::beforeApiRequestSend|
 |yii/authclient/BaseOAuth::api|
 |yii/authclient/BaseOAuth::refreshAccessToken|
 |yii/authclient/OAuth2::buildAuthUrl|
 |yii/authclient/OAuth2::applyClientCredentialsToRequest|
 |yii/authclient/OAuth2::generateAuthState|
 |yii/authclient/OAuth2::authenticateClient|
 |yii/authclient/OAuth2::authenticateUser|
 |yii/authclient/OAuth2::authenticateUserJwt|


*yii/authclient/clients/Facebook::defaultName*		protected
>
 defaultName()
<
return (void)

 {@inheritdoc}


*yii/authclient/clients/Facebook::defaultTitle*		protected
>
 defaultTitle()
<
return (void)

 {@inheritdoc}


*yii/authclient/clients/Facebook::initUserAttributes*	protected
>
 initUserAttributes()
<
return (void)

 {@inheritdoc}


*yii/authclient/clients/Facebook::defaultViewOptions*	protected
>
 defaultViewOptions()
<
return (void)

 {@inheritdoc}


*yii/authclient/clients/Facebook::applyAccessTokenToRequest*public
>
 applyAccessTokenToRequest($request, $accessToken)
<
return (void)

 {@inheritdoc}

    [$request] () 
    [$accessToken] () 


*yii/authclient/clients/Facebook::fetchAccessToken*	public
>
 fetchAccessToken($authCode, $params='[]')
<
return (void)

 {@inheritdoc}

    [$authCode] () 
    [$params] () 


*yii/authclient/clients/Facebook::exchangeAccessToken*	public
>
 exchangeAccessToken($token)
<
return (\yii\authclient\OAuthToken) Long-live access token.

 Exchanges short-live (2 hours) access token to long-live (60 days) one.

 Note that this method will success for already long-live token, but will not
 actually prolong it any further. Pay attention, that this method will fail on
 already expired access token.

    [$token] (\yii\authclient\OAuthToken) Short-live access token.


*yii/authclient/clients/Facebook::fetchClientAuthCode*	public
>
 fetchClientAuthCode($token='null', $params='[]')
<
return (string) Client auth code.

 Requests the authorization code for the client-specific access token.

 This make sense for the distributed applications, which provides several Auth
 clients (web and mobile) to avoid triggering Facebook's automated spam
 systems.

    [$token] (\yii\authclient\OAuthToken|null) Access token, if not set
    'accessToken' will be used.
    [$params] (array) Additional request params.


*yii/authclient/clients/Facebook::fetchClientAccessToken*	public
>
 fetchClientAccessToken($authCode, $params='[]')
<
return (\yii\authclient\OAuthToken) Long-live client-specific access token.

 Fetches access token from client-specific authorization code.

 This make sense for the distributed applications, which provides several Auth
 clients (web and mobile) to avoid triggering Facebook's automated spam
 systems.

    [$authCode] (string) Client auth code.
    [$params] (array) 



 vim:tw=78:ts=8:ft=help:norl:
