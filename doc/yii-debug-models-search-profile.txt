
*yii/debug/models/search/Profile*   >> |yii/debug/models/search/Base|
=================================


PROPERTY DETAILS
------------------------------------------------------------------------------

$category				*yii/debug/models/search/Profile::$category*
 (string) Method attribute input search value

$info					*yii/debug/models/search/Profile::$info*
 (integer) Info attribute input search value

$behaviors				*yii/debug/models/search/Profile::$behaviors*
 See |yii/base/Component::$behaviors|

$validators				*yii/debug/models/search/Profile::$validators*
 See |yii/base/Model::$validators|

$activeValidators			*yii/debug/models/search/Profile::$activeValidators*
 See |yii/base/Model::$activeValidators|

$errors					*yii/debug/models/search/Profile::$errors*
 See |yii/base/Model::$errors|

$firstErrors				*yii/debug/models/search/Profile::$firstErrors*
 See |yii/base/Model::$firstErrors|

$attributes				*yii/debug/models/search/Profile::$attributes*
 See |yii/base/Model::$attributes|

$scenario				*yii/debug/models/search/Profile::$scenario*
 See |yii/base/Model::$scenario|

$iterator				*yii/debug/models/search/Profile::$iterator*
 See |yii/base/Model::$iterator|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/debug/models/search/Profile::className*		public
 See |yii/base/Object::className|


*yii/debug/models/search/Profile::__construct*		public
 See |yii/base/Object::__construct|


*yii/debug/models/search/Profile::init*			public
 See |yii/base/Object::init|


*yii/debug/models/search/Profile::__get*			public
 See |yii/base/Component::__get|


*yii/debug/models/search/Profile::__set*			public
 See |yii/base/Component::__set|


*yii/debug/models/search/Profile::__isset*		public
 See |yii/base/Component::__isset|


*yii/debug/models/search/Profile::__unset*		public
 See |yii/base/Component::__unset|


*yii/debug/models/search/Profile::__call*			public
 See |yii/base/Component::__call|


*yii/debug/models/search/Profile::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/debug/models/search/Profile::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/debug/models/search/Profile::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/debug/models/search/Profile::hasMethod*		public
 See |yii/base/Component::hasMethod|


*yii/debug/models/search/Profile::__clone*		public
 See |yii/base/Component::__clone|


*yii/debug/models/search/Profile::behaviors*		public
 See |yii/base/Component::behaviors|


*yii/debug/models/search/Profile::hasEventHandlers*	public
 See |yii/base/Component::hasEventHandlers|


*yii/debug/models/search/Profile::on*			public
 See |yii/base/Component::on|


*yii/debug/models/search/Profile::off*			public
 See |yii/base/Component::off|


*yii/debug/models/search/Profile::trigger*		public
 See |yii/base/Component::trigger|


*yii/debug/models/search/Profile::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/debug/models/search/Profile::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/debug/models/search/Profile::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/debug/models/search/Profile::attachBehaviors*	public
 See |yii/base/Component::attachBehaviors|


*yii/debug/models/search/Profile::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/debug/models/search/Profile::detachBehaviors*	public
 See |yii/base/Component::detachBehaviors|


*yii/debug/models/search/Profile::ensureBehaviors*	public
 See |yii/base/Component::ensureBehaviors|


*yii/debug/models/search/Profile::fields*			public
 See |yii/base/ArrayableTrait::fields|


*yii/debug/models/search/Profile::extraFields*		public
 See |yii/base/ArrayableTrait::extraFields|


*yii/debug/models/search/Profile::toArray*		public
 See |yii/base/ArrayableTrait::toArray|


*yii/debug/models/search/Profile::resolveFields*		protected
 See |yii/base/ArrayableTrait::resolveFields|


*yii/debug/models/search/Profile::rules*			public
>
 rules()
<
(array) Validation rules

 Validation rules are used by 'validate()' to check if attribute values are
 valid. Child classes may override this method to declare different validation
 rules.

 Each rule is an array with the following structure:

   [
       ['attribute1', 'attribute2'],
       'validator type',
       'on' => ['scenario1', 'scenario2'],
       //...other parameters...
   ]

 where

  
   - attribute list: required, specifies the attributes array to be
   validated, for single attribute you can pass a string;  
   - validator type: required, specifies the validator to be used. It
   can be a built-in validator name,    a method name of the model class, an
 anonymous function, or a validator class name.  
   - on: optional, specifies the 'scenario|scenarios' array in which
   the validation    rule can be applied. If this option is not set, the rule
 will apply to all scenarios.  
   - additional name-value pairs can be specified to initialize the
   corresponding validator properties.    Please refer to individual validator
 class API for possible properties.

 A validator can be either an object of a class extending 'Validator', or a
 model class method (called *inline validator*) that has the following
 signature:

   // $params refers to validation parameters given in the rule
   function validatorName($attribute, $params)

 In the above '$attribute' refers to the attribute currently being validated
 while '$params' contains an array of validator configuration options such as
 'max' in case of 'string' validator. The value of the attribute currently
 being validated can be accessed as '$this->$attribute'. Note the '$' before
 'attribute'; this is taking the value of the variable '$attribute' and using
 it as the name of the property to access.

 Yii also provides a set of 'Validator::builtInValidators|built-in
 validators'. Each one has an alias name which can be used when specifying a
 validation rule.

 Below are some examples:

   [
       // built-in "required" validator
       [['username', 'password'], 'required'],
       // built-in "string" validator customized with "min" and "max"
 properties
       ['username', 'string', 'min' => 3, 'max' => 12],
       // built-in "compare" validator that is used in "register" scenario
 only
       ['password', 'compare', 'compareAttribute' => 'password2', 'on' =>
 'register'],
       // an inline validator defined via the "authenticate()" method in the
 model class
       ['password', 'authenticate', 'on' => 'login'],
       // a validator of class "DateRangeValidator"
       ['dateRange', 'DateRangeValidator'],
   ];

 Note, in order to inherit rules defined in the parent class, a child class
 needs to merge the parent rules with child rules using functions such as
 'array_merge()'.


*yii/debug/models/search/Profile::scenarios*		public
 See |yii/base/Model::scenarios|


*yii/debug/models/search/Profile::formName*		public
 See |yii/base/Model::formName|


*yii/debug/models/search/Profile::attributes*		public
 See |yii/base/Model::attributes|


*yii/debug/models/search/Profile::attributeLabels*	public
>
 attributeLabels()
<
(array) Attribute labels (name => label)

 Attribute labels are mainly used for display purpose. For example, given an
 attribute 'firstName', we can declare a label 'First Name' which is more
 user-friendly and can be displayed to end users.

 By default an attribute label is generated using 'generateAttributeLabel()'.
 This method allows you to explicitly specify attribute labels.

 Note, in order to inherit labels defined in the parent class, a child class
 needs to merge the parent labels with child labels using functions such as
 'array_merge()'.


*yii/debug/models/search/Profile::attributeHints*		public
 See |yii/base/Model::attributeHints|


*yii/debug/models/search/Profile::validate*		public
 See |yii/base/Model::validate|


*yii/debug/models/search/Profile::beforeValidate*		public
 See |yii/base/Model::beforeValidate|


*yii/debug/models/search/Profile::afterValidate*		public
 See |yii/base/Model::afterValidate|


*yii/debug/models/search/Profile::getValidators*		public
 See |yii/base/Model::getValidators|


*yii/debug/models/search/Profile::getActiveValidators*	public
 See |yii/base/Model::getActiveValidators|


*yii/debug/models/search/Profile::createValidators*	public
 See |yii/base/Model::createValidators|


*yii/debug/models/search/Profile::isAttributeRequired*	public
 See |yii/base/Model::isAttributeRequired|


*yii/debug/models/search/Profile::isAttributeSafe*	public
 See |yii/base/Model::isAttributeSafe|


*yii/debug/models/search/Profile::isAttributeActive*	public
 See |yii/base/Model::isAttributeActive|


*yii/debug/models/search/Profile::getAttributeLabel*	public
 See |yii/base/Model::getAttributeLabel|


*yii/debug/models/search/Profile::getAttributeHint*	public
 See |yii/base/Model::getAttributeHint|


*yii/debug/models/search/Profile::hasErrors*		public
 See |yii/base/Model::hasErrors|


*yii/debug/models/search/Profile::getErrors*		public
 See |yii/base/Model::getErrors|


*yii/debug/models/search/Profile::getFirstErrors*		public
 See |yii/base/Model::getFirstErrors|


*yii/debug/models/search/Profile::getFirstError*		public
 See |yii/base/Model::getFirstError|


*yii/debug/models/search/Profile::addError*		public
 See |yii/base/Model::addError|


*yii/debug/models/search/Profile::addErrors*		public
 See |yii/base/Model::addErrors|


*yii/debug/models/search/Profile::clearErrors*		public
 See |yii/base/Model::clearErrors|


*yii/debug/models/search/Profile::generateAttributeLabel*	public
 See |yii/base/Model::generateAttributeLabel|


*yii/debug/models/search/Profile::getAttributes*		public
 See |yii/base/Model::getAttributes|


*yii/debug/models/search/Profile::setAttributes*		public
 See |yii/base/Model::setAttributes|


*yii/debug/models/search/Profile::onUnsafeAttribute*	public
 See |yii/base/Model::onUnsafeAttribute|


*yii/debug/models/search/Profile::getScenario*		public
 See |yii/base/Model::getScenario|


*yii/debug/models/search/Profile::setScenario*		public
 See |yii/base/Model::setScenario|


*yii/debug/models/search/Profile::safeAttributes*		public
 See |yii/base/Model::safeAttributes|


*yii/debug/models/search/Profile::activeAttributes*	public
 See |yii/base/Model::activeAttributes|


*yii/debug/models/search/Profile::load*			public
 See |yii/base/Model::load|


*yii/debug/models/search/Profile::loadMultiple*		public
 See |yii/base/Model::loadMultiple|


*yii/debug/models/search/Profile::validateMultiple*	public
 See |yii/base/Model::validateMultiple|


*yii/debug/models/search/Profile::getIterator*		public
 See |yii/base/Model::getIterator|


*yii/debug/models/search/Profile::offsetExists*		public
 See |yii/base/Model::offsetExists|


*yii/debug/models/search/Profile::offsetGet*		public
 See |yii/base/Model::offsetGet|


*yii/debug/models/search/Profile::offsetSet*		public
 See |yii/base/Model::offsetSet|


*yii/debug/models/search/Profile::offsetUnset*		public
 See |yii/base/Model::offsetUnset|


*yii/debug/models/search/Profile::addCondition*		public
 See |yii/debug/models/search/Base::addCondition|


*yii/debug/models/search/Profile::search*			public
>
 search($params, $models)
<
(\yii\data\ArrayDataProvider) 

    [$params] (array) An array of parameter values indexed by parameter names
    [$models] (array) Data to return provider for



 vim:tw=78:ts=8:ft=help:norl:
