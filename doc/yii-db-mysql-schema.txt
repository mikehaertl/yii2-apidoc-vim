
*yii/db/mysql/Schema*   >> |yii/db/Schema|
=====================


PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/mysql/Schema::$db*

 See |yii/db/Schema::$db|

$defaultSchema				*yii/db/mysql/Schema::$defaultSchema*

 See |yii/db/Schema::$defaultSchema|

$exceptionMap				*yii/db/mysql/Schema::$exceptionMap*

 See |yii/db/Schema::$exceptionMap|

$columnSchemaClass			*yii/db/mysql/Schema::$columnSchemaClass*

 See |yii/db/Schema::$columnSchemaClass|

$typeMap				*yii/db/mysql/Schema::$typeMap*

 (array) Mapping from physical column types (keys) to abstract column types
 (values)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/db/mysql/Schema::className*				public

 See |yii/base/BaseObject::className|


*yii/db/mysql/Schema::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/db/mysql/Schema::init*				public

 See |yii/base/BaseObject::init|


*yii/db/mysql/Schema::__get*				public

 See |yii/base/BaseObject::__get|


*yii/db/mysql/Schema::__set*				public

 See |yii/base/BaseObject::__set|


*yii/db/mysql/Schema::__isset*				public

 See |yii/base/BaseObject::__isset|


*yii/db/mysql/Schema::__unset*				public

 See |yii/base/BaseObject::__unset|


*yii/db/mysql/Schema::__call*				public

 See |yii/base/BaseObject::__call|


*yii/db/mysql/Schema::hasProperty*			public

 See |yii/base/BaseObject::hasProperty|


*yii/db/mysql/Schema::canGetProperty*			public

 See |yii/base/BaseObject::canGetProperty|


*yii/db/mysql/Schema::canSetProperty*			public

 See |yii/base/BaseObject::canSetProperty|


*yii/db/mysql/Schema::hasMethod*				public

 See |yii/base/BaseObject::hasMethod|


*yii/db/mysql/Schema::resolveTableName*			protected
>
 resolveTableName($name)
<
return (\yii\db\TableSchema) 'TableSchema' with resolved table, schema, etc. names.







    [$name] (string) The table name


*yii/db/mysql/Schema::findSchemaNames*			protected

 See |yii/db/Schema::findSchemaNames|


*yii/db/mysql/Schema::findTableNames*			protected
>
 findTableNames($schema='''')
<
return (array) All table names in the database. The names have NO schema name prefix.



 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.



    [$schema] (string) The schema of the tables. Defaults to empty string,
    meaning the current or default schema.


*yii/db/mysql/Schema::loadTableSchema*			protected
>
 loadTableSchema($name)
<
return (\yii\db\TableSchema|null) DBMS-dependent table metadata, 'null' if the table
does not exist.







    [$name] (string) Table name


*yii/db/mysql/Schema::createColumnSchema*			protected

 See |yii/db/Schema::createColumnSchema|


*yii/db/mysql/Schema::getTableSchema*			public

 See |yii/db/Schema::getTableSchema|


*yii/db/mysql/Schema::getTableSchemas*			public

 See |yii/db/Schema::getTableSchemas|


*yii/db/mysql/Schema::getSchemaNames*			public

 See |yii/db/Schema::getSchemaNames|


*yii/db/mysql/Schema::getTableNames*			public

 See |yii/db/Schema::getTableNames|


*yii/db/mysql/Schema::getQueryBuilder*			public

 See |yii/db/Schema::getQueryBuilder|


*yii/db/mysql/Schema::getPdoType*				public

 See |yii/db/Schema::getPdoType|


*yii/db/mysql/Schema::refresh*				public

 See |yii/db/Schema::refresh|


*yii/db/mysql/Schema::refreshTableSchema*			public

 See |yii/db/Schema::refreshTableSchema|


*yii/db/mysql/Schema::createQueryBuilder*			public
>
 createQueryBuilder()
<
return (\yii\db\mysql\QueryBuilder) Query builder instance



*yii/db/mysql/Schema::createColumnSchemaBuilder*		public
>
 createColumnSchemaBuilder($type, $length='null')
<
return (\yii\db\ColumnSchemaBuilder) Column schema builder instance



 This method may be overridden by child classes to create a DBMS-specific
 column schema builder.



    [$type] (string) Type of the column. See 'ColumnSchemaBuilder::$type'.
    [$length] (int|string|array) Length or precision of the column. See
    'ColumnSchemaBuilder::$length'.


*yii/db/mysql/Schema::findUniqueIndexes*			public
>
 findUniqueIndexes($table)
<
return (array) All unique indexes for the given table.

 Each array element is of the following structure:

   [
       'IndexName1' => ['col1' [, ...]],
       'IndexName2' => ['col2' [, ...]],
   ]



    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/mysql/Schema::getLastInsertID*			public

 See |yii/db/Schema::getLastInsertID|


*yii/db/mysql/Schema::supportsSavepoint*			public

 See |yii/db/Schema::supportsSavepoint|


*yii/db/mysql/Schema::createSavepoint*			public

 See |yii/db/Schema::createSavepoint|


*yii/db/mysql/Schema::releaseSavepoint*			public

 See |yii/db/Schema::releaseSavepoint|


*yii/db/mysql/Schema::rollBackSavepoint*			public

 See |yii/db/Schema::rollBackSavepoint|


*yii/db/mysql/Schema::setTransactionIsolationLevel*	public

 See |yii/db/Schema::setTransactionIsolationLevel|


*yii/db/mysql/Schema::insert*				public

 See |yii/db/Schema::insert|


*yii/db/mysql/Schema::quoteValue*				public

 See |yii/db/Schema::quoteValue|


*yii/db/mysql/Schema::quoteTableName*			public

 See |yii/db/Schema::quoteTableName|


*yii/db/mysql/Schema::quoteColumnName*			public

 See |yii/db/Schema::quoteColumnName|


*yii/db/mysql/Schema::quoteSimpleTableName*		public
>
 quoteSimpleTableName($name)
<
return (string) The properly quoted table name

 A simple table name has no schema prefix.

    [$name] (string) Table name


*yii/db/mysql/Schema::quoteSimpleColumnName*		public
>
 quoteSimpleColumnName($name)
<
return (string) The properly quoted column name

 A simple column name has no prefix.

    [$name] (string) Column name


*yii/db/mysql/Schema::getRawTableName*			public

 See |yii/db/Schema::getRawTableName|


*yii/db/mysql/Schema::getColumnPhpType*			protected

 See |yii/db/Schema::getColumnPhpType|


*yii/db/mysql/Schema::convertException*			public

 See |yii/db/Schema::convertException|


*yii/db/mysql/Schema::isReadQuery*			public

 See |yii/db/Schema::isReadQuery|


*yii/db/mysql/Schema::getCacheKey*			protected

 See |yii/db/Schema::getCacheKey|


*yii/db/mysql/Schema::getCacheTag*			protected

 See |yii/db/Schema::getCacheTag|


*yii/db/mysql/Schema::getTableMetadata*			protected

 See |yii/db/ConstraintFinderTrait::getTableMetadata|


*yii/db/mysql/Schema::getSchemaMetadata*			protected

 See |yii/db/ConstraintFinderTrait::getSchemaMetadata|


*yii/db/mysql/Schema::setTableMetadata*			protected

 See |yii/db/Schema::setTableMetadata|


*yii/db/mysql/Schema::normalizePdoRowKeyCase*		protected

 See |yii/db/Schema::normalizePdoRowKeyCase|


*yii/db/mysql/Schema::loadTablePrimaryKey*		protected
>
 loadTablePrimaryKey($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mysql/Schema::loadTableForeignKeys*		protected
>
 loadTableForeignKeys($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mysql/Schema::loadTableIndexes*			protected
>
 loadTableIndexes($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mysql/Schema::loadTableUniques*			protected
>
 loadTableUniques($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mysql/Schema::loadTableChecks*			protected
>
 loadTableChecks($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mysql/Schema::loadTableDefaultValues*		protected
>
 loadTableDefaultValues($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mysql/Schema::getTablePrimaryKey*			public

 See |yii/db/ConstraintFinderTrait::getTablePrimaryKey|


*yii/db/mysql/Schema::getSchemaPrimaryKeys*		public

 See |yii/db/ConstraintFinderTrait::getSchemaPrimaryKeys|


*yii/db/mysql/Schema::getTableForeignKeys*		public

 See |yii/db/ConstraintFinderTrait::getTableForeignKeys|


*yii/db/mysql/Schema::getSchemaForeignKeys*		public

 See |yii/db/ConstraintFinderTrait::getSchemaForeignKeys|


*yii/db/mysql/Schema::getTableIndexes*			public

 See |yii/db/ConstraintFinderTrait::getTableIndexes|


*yii/db/mysql/Schema::getSchemaIndexes*			public

 See |yii/db/ConstraintFinderTrait::getSchemaIndexes|


*yii/db/mysql/Schema::getTableUniques*			public

 See |yii/db/ConstraintFinderTrait::getTableUniques|


*yii/db/mysql/Schema::getSchemaUniques*			public

 See |yii/db/ConstraintFinderTrait::getSchemaUniques|


*yii/db/mysql/Schema::getTableChecks*			public

 See |yii/db/ConstraintFinderTrait::getTableChecks|


*yii/db/mysql/Schema::getSchemaChecks*			public

 See |yii/db/ConstraintFinderTrait::getSchemaChecks|


*yii/db/mysql/Schema::getTableDefaultValues*		public

 See |yii/db/ConstraintFinderTrait::getTableDefaultValues|


*yii/db/mysql/Schema::getSchemaDefaultValues*		public

 See |yii/db/ConstraintFinderTrait::getSchemaDefaultValues|


*yii/db/mysql/Schema::resolveTableNames*			protected
>
 resolveTableNames($table, $name)
<
return (void)

    [$table] (\yii\db\TableSchema) The table metadata object
    [$name] (string) The table name


*yii/db/mysql/Schema::loadColumnSchema*			protected
>
 loadColumnSchema($info)
<
return (\yii\db\ColumnSchema) The column schema object

    [$info] (array) Column information


*yii/db/mysql/Schema::findColumns*			protected
>
 findColumns($table)
<
return (bool) Whether the table exists in the database

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/mysql/Schema::getCreateTableSql*			protected
>
 getCreateTableSql($table)
<
return (string) $sql the result of 'SHOW CREATE TABLE'

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/mysql/Schema::findConstraints*			protected
>
 findConstraints($table)
<
return (void)

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/mysql/Schema::isOldMysql*				protected
>
 isOldMysql()
<
return (bool) Whether the version of the MySQL being used is older than 5.1.




 vim:tw=78:ts=8:ft=help:norl:
