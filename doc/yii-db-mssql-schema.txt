
*yii/db/mssql/Schema*   >> |yii/db/Schema|
=====================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/db/Schema::$db|
 |yii/db/Schema::$exceptionMap|
 |yii/db/Schema::$tableSchemas|
 |yii/db/Schema::$schemaNames|
 |yii/db/Schema::$tableNames|
 |yii/db/Schema::$queryBuilder|
 |yii/db/Schema::$lastInsertID|
 |yii/db/Schema::$transactionIsolationLevel|
 |yii/db/Schema::$serverVersion|
 |yii/db/ConstraintFinderTrait::$schemaPrimaryKeys|
 |yii/db/ConstraintFinderTrait::$schemaForeignKeys|
 |yii/db/ConstraintFinderTrait::$schemaIndexes|
 |yii/db/ConstraintFinderTrait::$schemaUniques|
 |yii/db/ConstraintFinderTrait::$schemaChecks|
 |yii/db/ConstraintFinderTrait::$schemaDefaultValues|
 |yii/db/ViewFinderTrait::$viewNames|


$defaultSchema				*yii/db/mssql/Schema::$defaultSchema*

 (string) The default schema used for the current session.

$columnSchemaClass			*yii/db/mssql/Schema::$columnSchemaClass*

 (string|array) 

 Column schema class or class config



$tableQuoteCharacter			*yii/db/mssql/Schema::$tableQuoteCharacter*

 (string|string[]) 

 Character used to quote schema, table, etc. names. An array of 2 characters
 can be used in case starting and ending characters are different.



$columnQuoteCharacter			*yii/db/mssql/Schema::$columnQuoteCharacter*

 (string|string[]) 

 Character used to quote column names. An array of 2 characters can be used in
 case starting and ending characters are different.



$typeMap				*yii/db/mssql/Schema::$typeMap*

 (array) Mapping from physical column types (keys) to abstract column types
 (values)



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/db/Schema::createColumnSchema|
 |yii/db/Schema::getTableSchema|
 |yii/db/Schema::getTableSchemas|
 |yii/db/Schema::getSchemaNames|
 |yii/db/Schema::getTableNames|
 |yii/db/Schema::getQueryBuilder|
 |yii/db/Schema::getPdoType|
 |yii/db/Schema::refresh|
 |yii/db/Schema::refreshTableSchema|
 |yii/db/Schema::createColumnSchemaBuilder|
 |yii/db/Schema::getLastInsertID|
 |yii/db/Schema::supportsSavepoint|
 |yii/db/Schema::setTransactionIsolationLevel|
 |yii/db/Schema::insert|
 |yii/db/Schema::quoteValue|
 |yii/db/Schema::quoteTableName|
 |yii/db/Schema::quoteSimpleTableName|
 |yii/db/Schema::quoteSimpleColumnName|
 |yii/db/Schema::unquoteSimpleTableName|
 |yii/db/Schema::unquoteSimpleColumnName|
 |yii/db/Schema::getRawTableName|
 |yii/db/Schema::getColumnPhpType|
 |yii/db/Schema::convertException|
 |yii/db/Schema::isReadQuery|
 |yii/db/Schema::getServerVersion|
 |yii/db/Schema::getCacheKey|
 |yii/db/Schema::getCacheTag|
 |yii/db/ConstraintFinderTrait::getTableMetadata|
 |yii/db/ConstraintFinderTrait::getSchemaMetadata|
 |yii/db/Schema::setTableMetadata|
 |yii/db/Schema::normalizePdoRowKeyCase|
 |yii/db/ConstraintFinderTrait::getTablePrimaryKey|
 |yii/db/ConstraintFinderTrait::getSchemaPrimaryKeys|
 |yii/db/ConstraintFinderTrait::getTableForeignKeys|
 |yii/db/ConstraintFinderTrait::getSchemaForeignKeys|
 |yii/db/ConstraintFinderTrait::getTableIndexes|
 |yii/db/ConstraintFinderTrait::getSchemaIndexes|
 |yii/db/ConstraintFinderTrait::getTableUniques|
 |yii/db/ConstraintFinderTrait::getSchemaUniques|
 |yii/db/ConstraintFinderTrait::getTableChecks|
 |yii/db/ConstraintFinderTrait::getSchemaChecks|
 |yii/db/ConstraintFinderTrait::getTableDefaultValues|
 |yii/db/ConstraintFinderTrait::getSchemaDefaultValues|
 |yii/db/ViewFinderTrait::getViewNames|


*yii/db/mssql/Schema::resolveTableName*			protected
>
 resolveTableName($name)
<
return (\yii\db\mssql\TableSchema) Resolved table, schema, etc. names.

 Resolves the table name and schema name (if any).

    [$name] (string) The table name


*yii/db/mssql/Schema::findSchemaNames*			protected
>
 findSchemaNames()
<
return (array) All schema names in the database, except system schemas.

 Returns all schema names in the database, including the default one but not
 system schemas.



 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.




*yii/db/mssql/Schema::findTableNames*			protected
>
 findTableNames($schema='''')
<
return (array) All table names in the database. The names have NO schema name prefix.

 Returns all table names in the database.



 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.



    [$schema] (string) The schema of the tables. Defaults to empty string,
    meaning the current or default schema.


*yii/db/mssql/Schema::loadTableSchema*			protected
>
 loadTableSchema($name)
<
return (\yii\db\TableSchema|null) DBMS-dependent table metadata, 'null' if the table
does not exist.

 Loads the metadata for the specified table.







    [$name] (string) Table name


*yii/db/mssql/Schema::createQueryBuilder*			public
>
 createQueryBuilder()
<
return (\yii\db\mssql\QueryBuilder) Query builder interface.

 Creates a query builder for the MSSQL database.


*yii/db/mssql/Schema::findUniqueIndexes*			public
>
 findUniqueIndexes($table)
<
return (array) All unique indexes for the given table.

 Returns all unique indexes for the given table.

 Each array element is of the following structure:

   [
       'IndexName1' => ['col1' [, ...]],
       'IndexName2' => ['col2' [, ...]],
   ]



    [$table] (\yii\db\mssql\TableSchema) The table metadata


*yii/db/mssql/Schema::createSavepoint*			public
>
 createSavepoint($name)
<
return (void)

 Creates a new savepoint.







    [$name] (string) The savepoint name


*yii/db/mssql/Schema::releaseSavepoint*			public
>
 releaseSavepoint($name)
<
return (void)

 Releases an existing savepoint.







    [$name] (string) The savepoint name


*yii/db/mssql/Schema::rollBackSavepoint*			public
>
 rollBackSavepoint($name)
<
return (void)

 Rolls back to a previously created savepoint.







    [$name] (string) The savepoint name


*yii/db/mssql/Schema::getTableNameParts*			protected
>
 getTableNameParts($name)
<
return (array) 

 {@inheritDoc}

    [$name] (string) 


*yii/db/mssql/Schema::quoteColumnName*			public
>
 quoteColumnName($name)
<
return (string) The properly quoted column name

 Quotes a column name for use in a query.



 If the column name contains prefix, the prefix will also be properly quoted.
 If the column name is already quoted or contains '(', ''' or '{{', then this
 method will do nothing.



    [$name] (string) Column name


*yii/db/mssql/Schema::loadTablePrimaryKey*		protected
>
 loadTablePrimaryKey($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mssql/Schema::loadTableForeignKeys*		protected
>
 loadTableForeignKeys($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mssql/Schema::loadTableIndexes*			protected
>
 loadTableIndexes($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mssql/Schema::loadTableUniques*			protected
>
 loadTableUniques($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mssql/Schema::loadTableChecks*			protected
>
 loadTableChecks($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mssql/Schema::loadTableDefaultValues*		protected
>
 loadTableDefaultValues($tableName)
<
return (void)

    [$tableName] () 


*yii/db/mssql/Schema::findViewNames*			protected
>
 findViewNames($schema='\'\'')
<
return (void)

    [$schema] () 


*yii/db/mssql/Schema::resolveTableNames*			protected
>
 resolveTableNames($table, $name)
<
return (void)

 Resolves the table name and schema name (if any).

    [$table] (\yii\db\mssql\TableSchema) The table metadata object
    [$name] (string) The table name


*yii/db/mssql/Schema::loadColumnSchema*			protected
>
 loadColumnSchema($info)
<
return (\yii\db\mssql\ColumnSchema) The column schema object

 Loads the column information into a 'ColumnSchema' object.

    [$info] (array) Column information


*yii/db/mssql/Schema::findColumns*			protected
>
 findColumns($table)
<
return (bool) Whether the table exists in the database

 Collects the metadata of table columns.

    [$table] (\yii\db\mssql\TableSchema) The table metadata


*yii/db/mssql/Schema::findTableConstraints*		protected
>
 findTableConstraints($table, $type)
<
return (array) Each entry contains index_name and field_name

 Collects the constraint details for the given table and constraint type.

    [$table] (\yii\db\mssql\TableSchema) 
    [$type] (string) Either PRIMARY KEY or UNIQUE


*yii/db/mssql/Schema::findPrimaryKeys*			protected
>
 findPrimaryKeys($table)
<
return (void)

 Collects the primary key column details for the given table.

    [$table] (\yii\db\mssql\TableSchema) The table metadata


*yii/db/mssql/Schema::findForeignKeys*			protected
>
 findForeignKeys($table)
<
return (void)

 Collects the foreign key column details for the given table.

    [$table] (\yii\db\mssql\TableSchema) The table metadata



 vim:tw=78:ts=8:ft=help:norl:
