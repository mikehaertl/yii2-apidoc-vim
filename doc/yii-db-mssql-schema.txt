
*yii/db/mssql/Schema*   >> |yii/db/Schema|
=====================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/db/Schema::$db|
 |yii/db/Schema::$exceptionMap|
 |yii/db/Schema::$columnSchemaClass|


$defaultSchema				*yii/db/mssql/Schema::$defaultSchema*

 (string) The default schema used for the current session.

$tableQuoteCharacter			*yii/db/mssql/Schema::$tableQuoteCharacter*

 ()

$columnQuoteCharacter			*yii/db/mssql/Schema::$columnQuoteCharacter*

 ()

$typeMap				*yii/db/mssql/Schema::$typeMap*

 (array) Mapping from physical column types (keys) to abstract column types
 (values)



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/db/Schema::createColumnSchema|
 |yii/db/Schema::getTableSchema|
 |yii/db/Schema::getTableSchemas|
 |yii/db/Schema::getSchemaNames|
 |yii/db/Schema::getTableNames|
 |yii/db/Schema::getQueryBuilder|
 |yii/db/Schema::getPdoType|
 |yii/db/Schema::refresh|
 |yii/db/Schema::refreshTableSchema|
 |yii/db/Schema::createColumnSchemaBuilder|
 |yii/db/Schema::getLastInsertID|
 |yii/db/Schema::supportsSavepoint|
 |yii/db/Schema::setTransactionIsolationLevel|
 |yii/db/Schema::insert|
 |yii/db/Schema::quoteValue|
 |yii/db/Schema::quoteTableName|
 |yii/db/Schema::quoteColumnName|
 |yii/db/Schema::quoteSimpleTableName|
 |yii/db/Schema::quoteSimpleColumnName|
 |yii/db/Schema::unquoteSimpleTableName|
 |yii/db/Schema::unquoteSimpleColumnName|
 |yii/db/Schema::getRawTableName|
 |yii/db/Schema::getColumnPhpType|
 |yii/db/Schema::convertException|
 |yii/db/Schema::isReadQuery|
 |yii/db/Schema::getServerVersion|
 |yii/db/Schema::getCacheKey|
 |yii/db/Schema::getCacheTag|
 |yii/db/ConstraintFinderTrait::getTableMetadata|
 |yii/db/ConstraintFinderTrait::getSchemaMetadata|
 |yii/db/Schema::setTableMetadata|
 |yii/db/Schema::normalizePdoRowKeyCase|
 |yii/db/ConstraintFinderTrait::getTablePrimaryKey|
 |yii/db/ConstraintFinderTrait::getSchemaPrimaryKeys|
 |yii/db/ConstraintFinderTrait::getTableForeignKeys|
 |yii/db/ConstraintFinderTrait::getSchemaForeignKeys|
 |yii/db/ConstraintFinderTrait::getTableIndexes|
 |yii/db/ConstraintFinderTrait::getSchemaIndexes|
 |yii/db/ConstraintFinderTrait::getTableUniques|
 |yii/db/ConstraintFinderTrait::getSchemaUniques|
 |yii/db/ConstraintFinderTrait::getTableChecks|
 |yii/db/ConstraintFinderTrait::getSchemaChecks|
 |yii/db/ConstraintFinderTrait::getTableDefaultValues|
 |yii/db/ConstraintFinderTrait::getSchemaDefaultValues|
 |yii/db/ViewFinderTrait::getViewNames|


*yii/db/mssql/Schema::resolveTableName*			protected
>
 resolveTableName($name)
<
return (\yii\db\mssql\TableSchema) Resolved table, schema, etc. names.

 Resolves the table name and schema name (if any).

    [$name] (string) The table name


*yii/db/mssql/Schema::findSchemaNames*			protected
>
 findSchemaNames()
<
return (void)

 {@inheritdoc}


*yii/db/mssql/Schema::findTableNames*			protected
>
 findTableNames($schema='\'\'')
<
return (void)

 {@inheritdoc}

    [$schema] () 


*yii/db/mssql/Schema::loadTableSchema*			protected
>
 loadTableSchema($name)
<
return (void)

 {@inheritdoc}

    [$name] () 


*yii/db/mssql/Schema::createQueryBuilder*			public
>
 createQueryBuilder()
<
return (\yii\db\mssql\QueryBuilder) Query builder interface.

 Creates a query builder for the MSSQL database.


*yii/db/mssql/Schema::findUniqueIndexes*			public
>
 findUniqueIndexes($table)
<
return (array) All unique indexes for the given table.

 Returns all unique indexes for the given table.

 Each array element is of the following structure:

   [
       'IndexName1' => ['col1' [, ...]],
       'IndexName2' => ['col2' [, ...]],
   ]



    [$table] (\yii\db\mssql\TableSchema) The table metadata


*yii/db/mssql/Schema::createSavepoint*			public
>
 createSavepoint($name)
<
return (void)

 {@inheritdoc}

    [$name] () 


*yii/db/mssql/Schema::releaseSavepoint*			public
>
 releaseSavepoint($name)
<
return (void)

 {@inheritdoc}

    [$name] () 


*yii/db/mssql/Schema::rollBackSavepoint*			public
>
 rollBackSavepoint($name)
<
return (void)

 {@inheritdoc}

    [$name] () 


*yii/db/mssql/Schema::loadTablePrimaryKey*		protected
>
 loadTablePrimaryKey($tableName)
<
return (void)

 {@inheritdoc}

    [$tableName] () 


*yii/db/mssql/Schema::loadTableForeignKeys*		protected
>
 loadTableForeignKeys($tableName)
<
return (void)

 {@inheritdoc}

    [$tableName] () 


*yii/db/mssql/Schema::loadTableIndexes*			protected
>
 loadTableIndexes($tableName)
<
return (void)

 {@inheritdoc}

    [$tableName] () 


*yii/db/mssql/Schema::loadTableUniques*			protected
>
 loadTableUniques($tableName)
<
return (void)

 {@inheritdoc}

    [$tableName] () 


*yii/db/mssql/Schema::loadTableChecks*			protected
>
 loadTableChecks($tableName)
<
return (void)

 {@inheritdoc}

    [$tableName] () 


*yii/db/mssql/Schema::loadTableDefaultValues*		protected
>
 loadTableDefaultValues($tableName)
<
return (void)

 {@inheritdoc}

    [$tableName] () 


*yii/db/mssql/Schema::findViewNames*			protected
>
 findViewNames($schema='\'\'')
<
return (void)

 {@inheritdoc}

    [$schema] () 


*yii/db/mssql/Schema::resolveTableNames*			protected
>
 resolveTableNames($table, $name)
<
return (void)

 Resolves the table name and schema name (if any).

    [$table] (\yii\db\mssql\TableSchema) The table metadata object
    [$name] (string) The table name


*yii/db/mssql/Schema::loadColumnSchema*			protected
>
 loadColumnSchema($info)
<
return (\yii\db\ColumnSchema) The column schema object

 Loads the column information into a 'ColumnSchema' object.

    [$info] (array) Column information


*yii/db/mssql/Schema::findColumns*			protected
>
 findColumns($table)
<
return (bool) Whether the table exists in the database

 Collects the metadata of table columns.

    [$table] (\yii\db\mssql\TableSchema) The table metadata


*yii/db/mssql/Schema::findTableConstraints*		protected
>
 findTableConstraints($table, $type)
<
return (array) Each entry contains index_name and field_name

 Collects the constraint details for the given table and constraint type.

    [$table] (\yii\db\mssql\TableSchema) 
    [$type] (string) Either PRIMARY KEY or UNIQUE


*yii/db/mssql/Schema::findPrimaryKeys*			protected
>
 findPrimaryKeys($table)
<
return (void)

 Collects the primary key column details for the given table.

    [$table] (\yii\db\mssql\TableSchema) The table metadata


*yii/db/mssql/Schema::findForeignKeys*			protected
>
 findForeignKeys($table)
<
return (void)

 Collects the foreign key column details for the given table.

    [$table] (\yii\db\mssql\TableSchema) The table metadata



 vim:tw=78:ts=8:ft=help:norl:
