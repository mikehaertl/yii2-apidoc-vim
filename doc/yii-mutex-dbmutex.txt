
*yii/mutex/DbMutex*   >> |yii/mutex/Mutex|
===================

SUBCLASSES
------------------------------------------------------------------------------

|yii/mutex/PgsqlMutex|
|yii/mutex/OracleMutex|
|yii/mutex/MysqlMutex|


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/mutex/Mutex::$autoRelease|


$db					*yii/mutex/DbMutex::$db*

 (\yii\db\Connection|array|string) The DB connection object or the application
 component ID of the DB connection. After the Mutex object is created, if you
 want to change this property, you should only assign it with a DB connection
 object. Starting from version 2.0.2, this can also be a configuration array
 for creating the object.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/mutex/Mutex::acquire|
 |yii/mutex/Mutex::release|
 |yii/mutex/Mutex::acquireLock|
 |yii/mutex/Mutex::releaseLock|


*yii/mutex/DbMutex::init*					public
>
 init()
<
return (void)

 Initializes generic database table based mutex implementation.



 vim:tw=78:ts=8:ft=help:norl:
