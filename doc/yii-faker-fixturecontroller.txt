
*yii/faker/FixtureController*   >> |yii/console/controllers/FixtureController|
=============================

DESCRIPTION
------------------------------------------------------------------------------

 Fixtures are one of the important paths in unit testing. To speed up
 developers work these fixtures can be generated automatically, based on
 prepared template. This command is a simple wrapper for the
 [Faker](https://github.com/fzaninotto/Faker) library.

 You should configure your application as follows (you can use any alias, not
 only "fixture"):

   'controllerMap' => [
       'fixture' => [
           'class' => 'yii\faker\FixtureController',
       ],
   ],

 To start using the command you need to be familiar (read guide) with the
 Faker library and generate fixtures template files, according to the given
 format:

   // users.php file under template path (by default
 @tests/unit/templates/fixtures)
   return [
       'name' => $faker->firstName,
       'phone' => $faker->phoneNumber,
       'city' => $faker->city,
       'password' =>
 Yii::$app->getSecurity()->generatePasswordHash('password_' . $index),
       'auth_key' => Yii::$app->getSecurity()->generateRandomString(),
       'intro' => $faker->sentence(7, true),  // generate a sentence with 7
 words
   ];

 If you use callback as an attribute value it will be called with the
 following three parameters:


   - '$faker': the Faker generator instance 
   - '$index': the current fixture index. For example if user need to
   generate 3 fixtures for user table, it will be 0..2.

 After you set all needed fields in callback, you need to return $fixture
 array back from the callback.

 After you prepared needed templates for tables you can simply generate your
 fixtures via command

   yii fixture/generate user

   //generate fixtures from several templates, for example:
   yii fixture/generate user profile team

 In the code above "users" is template name, after this command run, new file
 named same as template will be created under the '$fixtureDataPath' folder.
 You can generate fixtures for all templates, for example:

   yii fixture/generate-all

 This command will generate fixtures for all template files that are stored
 under $templatePath and store fixtures under '$fixtureDataPath' with file
 names same as templates names.

 You can specify how many fixtures per file you need by the second parameter.
 In the code below we generate all fixtures and in each file there will be 3
 rows (fixtures).

   yii fixture/generate-all --count=3

 You can specify different options of this command:

   //generate fixtures in russian language
   yii fixture/generate user --count=5 --language=ru_RU

   //read templates from the other path
   yii fixture/generate-all --templatePath=@app/path/to/my/custom/templates

   //generate fixtures into other folders
   yii fixture/generate-all
 --fixtureDataPath=@tests/unit/fixtures/subfolder1/subfolder2/subfolder3

 You can see all available templates by running command:

   //list all templates under default template path (i.e.
 '@tests/unit/templates/fixtures')
   yii fixture/templates

   //list all templates under specified template path
   yii fixture/templates --templatePath='@app/path/to/my/custom/templates'

 You also can create your own data providers for custom tables fields, see
 Faker library guide for more info (https://github.com/fzaninotto/Faker);
 After you created custom provider, for example:

   class Book extends \Faker\Provider\Base
   {

       public function title($nbWords = 5)
       {
           $sentence = $this->generator->sentence($nbWords);
           return mb_substr($sentence, 0, mb_strlen($sentence) - 1);
       }

   }

 you can use it by adding it to the $providers property of the current
 command. In your console.php config:

      'controllerMap' => [
          'fixture' => [
              'class' => 'yii\faker\FixtureController',
              'providers' => [
                  'app\tests\unit\faker\providers\Book',
              ],
          ],
      ],




PROPERTY DETAILS
------------------------------------------------------------------------------

$id					*yii/faker/FixtureController::$id*

 See |yii/base/Controller::$id|

$module					*yii/faker/FixtureController::$module*

 See |yii/base/Controller::$module|

$defaultAction				*yii/faker/FixtureController::$defaultAction*

 See |yii/console/controllers/FixtureController::$defaultAction|

$layout					*yii/faker/FixtureController::$layout*

 See |yii/base/Controller::$layout|

$action					*yii/faker/FixtureController::$action*

 See |yii/base/Controller::$action|

$interactive				*yii/faker/FixtureController::$interactive*

 See |yii/console/Controller::$interactive|

$color					*yii/faker/FixtureController::$color*

 See |yii/console/Controller::$color|

$help					*yii/faker/FixtureController::$help*

 See |yii/console/Controller::$help|

$namespace				*yii/faker/FixtureController::$namespace*

 See |yii/console/controllers/FixtureController::$namespace|

$globalFixtures				*yii/faker/FixtureController::$globalFixtures*

 See |yii/console/controllers/FixtureController::$globalFixtures|

$templatePath				*yii/faker/FixtureController::$templatePath*

 (string) Alias to the template path, where all tables templates are stored.

$fixtureDataPath			*yii/faker/FixtureController::$fixtureDataPath*

 (string) Alias to the fixture data path, where data files should be written.

$language				*yii/faker/FixtureController::$language*

 (string) Language to use when generating fixtures data.

$count					*yii/faker/FixtureController::$count*

 (integer) Total count of data per fixture. Defaults to 2.

$providers				*yii/faker/FixtureController::$providers*

 (array) Additional data providers that can be created by user and will be
 added to the Faker generator. More info in
 [Faker](https://github.com/fzaninotto/Faker.) library docs.

$behaviors				*yii/faker/FixtureController::$behaviors*

 See |yii/base/Component::$behaviors|

$modules				*yii/faker/FixtureController::$modules*

 See |yii/base/Controller::$modules|

$uniqueId				*yii/faker/FixtureController::$uniqueId*

 See |yii/base/Controller::$uniqueId|

$route					*yii/faker/FixtureController::$route*

 See |yii/base/Controller::$route|

$view					*yii/faker/FixtureController::$view*

 See |yii/base/Controller::$view|

$viewPath				*yii/faker/FixtureController::$viewPath*

 See |yii/base/Controller::$viewPath|

$passedOptions				*yii/faker/FixtureController::$passedOptions*

 See |yii/console/Controller::$passedOptions|

$passedOptionValues			*yii/faker/FixtureController::$passedOptionValues*

 See |yii/console/Controller::$passedOptionValues|

$helpSummary				*yii/faker/FixtureController::$helpSummary*

 See |yii/console/Controller::$helpSummary|

$fixtures				*yii/faker/FixtureController::$fixtures*

 See |yii/test/FixtureTrait::$fixtures|

$generator				*yii/faker/FixtureController::$generator*

 (\Faker\Generator)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/faker/FixtureController::className*			public

 See |yii/base/Object::className|


*yii/faker/FixtureController::__construct*		public

 See |yii/base/Controller::__construct|


*yii/faker/FixtureController::init*			public

 See |yii/base/Object::init|


*yii/faker/FixtureController::__get*			public

 See |yii/base/Object::__get|


*yii/faker/FixtureController::__set*			public

 See |yii/base/Object::__set|


*yii/faker/FixtureController::__isset*			public

 See |yii/base/Object::__isset|


*yii/faker/FixtureController::__unset*			public

 See |yii/base/Object::__unset|


*yii/faker/FixtureController::__call*			public

 See |yii/base/Object::__call|


*yii/faker/FixtureController::hasProperty*		public

 See |yii/base/Object::hasProperty|


*yii/faker/FixtureController::canGetProperty*		public

 See |yii/base/Object::canGetProperty|


*yii/faker/FixtureController::canSetProperty*		public

 See |yii/base/Object::canSetProperty|


*yii/faker/FixtureController::hasMethod*			public

 See |yii/base/Object::hasMethod|


*yii/faker/FixtureController::__clone*			public

 See |yii/base/Component::__clone|


*yii/faker/FixtureController::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/faker/FixtureController::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/faker/FixtureController::on*				public

 See |yii/base/Component::on|


*yii/faker/FixtureController::off*			public

 See |yii/base/Component::off|


*yii/faker/FixtureController::trigger*			public

 See |yii/base/Component::trigger|


*yii/faker/FixtureController::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/faker/FixtureController::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/faker/FixtureController::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/faker/FixtureController::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/faker/FixtureController::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/faker/FixtureController::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/faker/FixtureController::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/faker/FixtureController::actions*			public

 See |yii/base/Controller::actions|


*yii/faker/FixtureController::runAction*			public

 See |yii/console/Controller::runAction|


*yii/faker/FixtureController::run*			public

 See |yii/base/Controller::run|


*yii/faker/FixtureController::bindActionParams*		public

 See |yii/console/Controller::bindActionParams|


*yii/faker/FixtureController::createAction*		public

 See |yii/base/Controller::createAction|


*yii/faker/FixtureController::beforeAction*		public
>
 beforeAction($action)
<
return (void)

    [$action] () 


*yii/faker/FixtureController::afterAction*		public

 See |yii/base/Controller::afterAction|


*yii/faker/FixtureController::getModules*			public

 See |yii/base/Controller::getModules|


*yii/faker/FixtureController::getUniqueId*		public

 See |yii/base/Controller::getUniqueId|


*yii/faker/FixtureController::getRoute*			public

 See |yii/base/Controller::getRoute|


*yii/faker/FixtureController::render*			public

 See |yii/base/Controller::render|


*yii/faker/FixtureController::renderContent*		public

 See |yii/base/Controller::renderContent|


*yii/faker/FixtureController::renderPartial*		public

 See |yii/base/Controller::renderPartial|


*yii/faker/FixtureController::renderFile*			public

 See |yii/base/Controller::renderFile|


*yii/faker/FixtureController::getView*			public

 See |yii/base/Controller::getView|


*yii/faker/FixtureController::setView*			public

 See |yii/base/Controller::setView|


*yii/faker/FixtureController::getViewPath*		public

 See |yii/base/Controller::getViewPath|


*yii/faker/FixtureController::setViewPath*		public

 See |yii/base/Controller::setViewPath|


*yii/faker/FixtureController::findLayoutFile*		public

 See |yii/base/Controller::findLayoutFile|


*yii/faker/FixtureController::isColorEnabled*		public

 See |yii/console/Controller::isColorEnabled|


*yii/faker/FixtureController::ansiFormat*			public

 See |yii/console/Controller::ansiFormat|


*yii/faker/FixtureController::stdout*			public

 See |yii/console/Controller::stdout|


*yii/faker/FixtureController::stderr*			public

 See |yii/console/Controller::stderr|


*yii/faker/FixtureController::prompt*			public

 See |yii/console/Controller::prompt|


*yii/faker/FixtureController::confirm*			public

 See |yii/console/Controller::confirm|


*yii/faker/FixtureController::select*			public

 See |yii/console/Controller::select|


*yii/faker/FixtureController::options*			public
>
 options($actionID)
<
return (string[]) The names of the options valid for the action



 Child classes may override this method to specify possible options.

 Note that the values setting via options are not available until
 'beforeAction()' is being called.



    [$actionID] (string) The action id of the current request


*yii/faker/FixtureController::optionAliases*		public

 See |yii/console/controllers/FixtureController::optionAliases|


*yii/faker/FixtureController::getOptionValues*		public

 See |yii/console/Controller::getOptionValues|


*yii/faker/FixtureController::getPassedOptions*		public

 See |yii/console/Controller::getPassedOptions|


*yii/faker/FixtureController::getPassedOptionValues*	public

 See |yii/console/Controller::getPassedOptionValues|


*yii/faker/FixtureController::getHelpSummary*		public

 See |yii/console/Controller::getHelpSummary|


*yii/faker/FixtureController::getHelp*			public

 See |yii/console/Controller::getHelp|


*yii/faker/FixtureController::getActionHelpSummary*	public

 See |yii/console/Controller::getActionHelpSummary|


*yii/faker/FixtureController::getActionHelp*		public

 See |yii/console/Controller::getActionHelp|


*yii/faker/FixtureController::getActionArgsHelp*		public

 See |yii/console/Controller::getActionArgsHelp|


*yii/faker/FixtureController::getActionOptionsHelp*	public

 See |yii/console/Controller::getActionOptionsHelp|


*yii/faker/FixtureController::getActionMethodReflection*	protected

 See |yii/console/Controller::getActionMethodReflection|


*yii/faker/FixtureController::parseDocCommentTags*	protected

 See |yii/console/Controller::parseDocCommentTags|


*yii/faker/FixtureController::parseDocCommentSummary*	protected

 See |yii/console/Controller::parseDocCommentSummary|


*yii/faker/FixtureController::parseDocCommentDetail*	protected

 See |yii/console/Controller::parseDocCommentDetail|


*yii/faker/FixtureController::fixtures*			public

 See |yii/test/FixtureTrait::fixtures|


*yii/faker/FixtureController::globalFixtures*		public

 See |yii/test/FixtureTrait::globalFixtures|


*yii/faker/FixtureController::loadFixtures*		public

 See |yii/test/FixtureTrait::loadFixtures|


*yii/faker/FixtureController::unloadFixtures*		public

 See |yii/test/FixtureTrait::unloadFixtures|


*yii/faker/FixtureController::getFixtures*		public

 See |yii/test/FixtureTrait::getFixtures|


*yii/faker/FixtureController::getFixture*			public

 See |yii/test/FixtureTrait::getFixture|


*yii/faker/FixtureController::createFixtures*		protected

 See |yii/test/FixtureTrait::createFixtures|


*yii/faker/FixtureController::actionLoad*			public

 See |yii/console/controllers/FixtureController::actionLoad|


*yii/faker/FixtureController::actionUnload*		public

 See |yii/console/controllers/FixtureController::actionUnload|


*yii/faker/FixtureController::notifyNothingToLoad*	public

 See |yii/console/controllers/FixtureController::notifyNothingToLoad|


*yii/faker/FixtureController::notifyNothingToUnload*	public

 See |yii/console/controllers/FixtureController::notifyNothingToUnload|


*yii/faker/FixtureController::needToApplyAll*		public

 See |yii/console/controllers/FixtureController::needToApplyAll|


*yii/faker/FixtureController::actionTemplates*		public
>
 actionTemplates()
<
return (void)



*yii/faker/FixtureController::actionGenerate*		public
>
 actionGenerate()
<
return (void)

 For example,

   //generate fixtures in russian language
   yii fixture/generate user --count=5 --language=ru_RU

   //generate several fixtures
   yii fixture/generate user profile team




*yii/faker/FixtureController::actionGenerateAll*		public
>
 actionGenerateAll()
<
return (void)



*yii/faker/FixtureController::getGenerator*		public
>
 getGenerator()
<
return (\Faker\Generator) 



*yii/faker/FixtureController::checkPaths*			public
>
 checkPaths()
<
return (void)



*yii/faker/FixtureController::addProviders*		public
>
 addProviders()
<
return (void)



*yii/faker/FixtureController::exportFixtures*		public
>
 exportFixtures($fixtures)
<
return (string) Exported fixtures format

    [$fixtures] (array) 


*yii/faker/FixtureController::generateFixture*		public
>
 generateFixture($_template_, $index)
<
return (array) Fixture

    [$_template_] (string) The fixture template file
    [$index] (integer) The current fixture index


*yii/faker/FixtureController::generateFixtureFile*	public
>
 generateFixtureFile($templateName, $templatePath, $fixtureDataPath)
<
return (void)

    [$templateName] (string) Template file name
    [$templatePath] (string) Path where templates are stored
    [$fixtureDataPath] (string) Fixture data path where generated file should
    be written


*yii/faker/FixtureController::confirmGeneration*		public
>
 confirmGeneration($files)
<
return (boolean) 

    [$files] (array) 



 vim:tw=78:ts=8:ft=help:norl:
