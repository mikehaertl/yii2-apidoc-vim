
*yii/widgets/LinkPager*   >> |yii/base/Widget|
=======================

DESCRIPTION
------------------------------------------------------------------------------

 LinkPager works with a 'Pagination' object which specifies the total number
 of pages and the current page number.

 Note that LinkPager only generates the necessary HTML markups. In order for
 it to look like a real pager, you should provide some CSS styles for it. With
 the default configuration, LinkPager should look good using Twitter Bootstrap
 CSS framework.

 For more details and usage information on LinkPager, see the [guide article
 on pagination](guide:output-pagination).


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Widget::$counter|
 |yii/base/Widget::$autoIdPrefix|
 |yii/base/Widget::$stack|


$pagination				*yii/widgets/LinkPager::$pagination*

 (\yii\data\Pagination) The pagination object that this pager is associated
 with. You must set this property in order to make LinkPager work.

$options				*yii/widgets/LinkPager::$options*

 (array) HTML attributes for the pager container tag.

$linkContainerOptions			*yii/widgets/LinkPager::$linkContainerOptions*

 (array) HTML attributes which will be applied to all link containers

$linkOptions				*yii/widgets/LinkPager::$linkOptions*

 (array) HTML attributes for the link in a pager container tag.

$pageCssClass				*yii/widgets/LinkPager::$pageCssClass*

 (string) The CSS class for the each page button.

$firstPageCssClass			*yii/widgets/LinkPager::$firstPageCssClass*

 (string) The CSS class for the "first" page button.

$lastPageCssClass			*yii/widgets/LinkPager::$lastPageCssClass*

 (string) The CSS class for the "last" page button.

$prevPageCssClass			*yii/widgets/LinkPager::$prevPageCssClass*

 (string) The CSS class for the "previous" page button.

$nextPageCssClass			*yii/widgets/LinkPager::$nextPageCssClass*

 (string) The CSS class for the "next" page button.

$activePageCssClass			*yii/widgets/LinkPager::$activePageCssClass*

 (string) The CSS class for the active (currently selected) page button.

$disabledPageCssClass			*yii/widgets/LinkPager::$disabledPageCssClass*

 (string) The CSS class for the disabled page buttons.

$disabledListItemSubTagOptions		*yii/widgets/LinkPager::$disabledListItemSubTagOptions*

 (array) The options for the disabled tag to be generated inside the disabled
 list element. In order to customize the html tag, please use the tag key.

   $disabledListItemSubTagOptions = ['tag' => 'div', 'class' =>
 'disabled-div'];



$maxButtonCount				*yii/widgets/LinkPager::$maxButtonCount*

 (int) Maximum number of page buttons that can be displayed. Defaults to 10.

$nextPageLabel				*yii/widgets/LinkPager::$nextPageLabel*

 (string|bool) The label for the "next" page button. Note that this will NOT
 be HTML-encoded. If this property is false, the "next" page button will not
 be displayed.

$prevPageLabel				*yii/widgets/LinkPager::$prevPageLabel*

 (string|bool) The text label for the previous page button. Note that this
 will NOT be HTML-encoded. If this property is false, the "previous" page
 button will not be displayed.

$firstPageLabel				*yii/widgets/LinkPager::$firstPageLabel*

 (string|bool) The text label for the "first" page button. Note that this will
 NOT be HTML-encoded. If it's specified as true, page number will be used as
 label. Default is false that means the "first" page button will not be
 displayed.

$lastPageLabel				*yii/widgets/LinkPager::$lastPageLabel*

 (string|bool) The text label for the "last" page button. Note that this will
 NOT be HTML-encoded. If it's specified as true, page number will be used as
 label. Default is false that means the "last" page button will not be
 displayed.

$registerLinkTags			*yii/widgets/LinkPager::$registerLinkTags*

 (bool) Whether to register link tags in the HTML header for prev, next, first
 and last page. Defaults to 'false' to avoid conflicts when multiple pagers
 are used on one page.

$hideOnSinglePage			*yii/widgets/LinkPager::$hideOnSinglePage*

 (bool) Hide widget when only one page exist.

$disableCurrentPageButton		*yii/widgets/LinkPager::$disableCurrentPageButton*

 (bool) Whether to render current page button as disabled.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Widget::begin|
 |yii/base/Widget::end|
 |yii/base/Widget::widget|
 |yii/base/Widget::getId|
 |yii/base/Widget::setId|
 |yii/base/Widget::getView|
 |yii/base/Widget::setView|
 |yii/base/Widget::render|
 |yii/base/Widget::renderFile|
 |yii/base/Widget::getViewPath|
 |yii/base/Widget::beforeRun|
 |yii/base/Widget::afterRun|


*yii/widgets/LinkPager::init*				public
>
 init()
<
return (void)

 Initializes the pager.


*yii/widgets/LinkPager::run*				public
>
 run()
<
return (void)

 Executes the widget.

 This overrides the parent implementation by displaying the generated page
 buttons.


*yii/widgets/LinkPager::registerLinkTags*			protected
>
 registerLinkTags()
<
return (void)

 Registers relational link tags in the html header for prev, next, first and
 last page.

 These links are generated using '\yii\data\Pagination::getLinks()'.


*yii/widgets/LinkPager::renderPageButtons*		protected
>
 renderPageButtons()
<
return (string) The rendering result

 Renders the page buttons.


*yii/widgets/LinkPager::renderPageButton*			protected
>
 renderPageButton($label, $page, $class, $disabled, $active)
<
return (string) The rendering result

 Renders a page button.

 You may override this method to customize the generation of page buttons.

    [$label] (string) The text label for the button
    [$page] (int) The page number
    [$class] (string) The CSS class for the page button.
    [$disabled] (bool) Whether this page button is disabled
    [$active] (bool) Whether this page button is active


*yii/widgets/LinkPager::getPageRange*			protected
>
 getPageRange()
<
return (array) The begin and end pages that need to be displayed.




 vim:tw=78:ts=8:ft=help:norl:
