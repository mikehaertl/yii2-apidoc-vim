
*yii\widgets\InputWidget*   >> yii\base\Widget
=========================

 An input widget can be associated with a data model and an attribute, or a
 name and a value. If the former, the name and the value will be generated
 automatically.


PROPERTY DETAILS
------------------------------------------------------------------------------

<$counter>				*yii.widgets.InputWidget::$counter*
 See |yii.base.Widget::$counter|

<$autoIdPrefix> 			*yii.widgets.InputWidget::$autoIdPrefix*
 See |yii.base.Widget::$autoIdPrefix|

<$stack>				*yii.widgets.InputWidget::$stack*
 See |yii.base.Widget::$stack|

<$model>				*yii.widgets.InputWidget::$model*
 (\yii\base\Model) The data model that this widget is associated with.

<$attribute>				*yii.widgets.InputWidget::$attribute*
 (string) The model attribute that this widget is associated with.

<$name> 				*yii.widgets.InputWidget::$name*
 (string) The input name. This must be set if [[model]] and [[attribute]] are
 not set.

<$value>				*yii.widgets.InputWidget::$value*
 (string) The input value.

<$options>				*yii.widgets.InputWidget::$options*
 (array) The HTML attributes for the input tag.

<$behaviors>				*yii.widgets.InputWidget::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

<$id>					*yii.widgets.InputWidget::$id*
 (string) ID of the widget.

<$view> 				*yii.widgets.InputWidget::$view*
 (\yii\web\View) The view object that can be used to render views or view
 files.

<$viewPath>				*yii.widgets.InputWidget::$viewPath*
 (string) The directory containing the view files for this widget.



METHOD DETAILS
------------------------------------------------------------------------------

*yii.widgets.InputWidget::className*				 public
 See |yii.base.Object::className|


*yii.widgets.InputWidget::__construct*				 public
 See |yii.base.Object::__construct|


*yii.widgets.InputWidget::init* 				 public
>
 init()
<
(void)

 If you override this method, make sure you call the parent implementation
 first.


*yii.widgets.InputWidget::__get*				 public
 See |yii.base.Component::__get|


*yii.widgets.InputWidget::__set*				 public
 See |yii.base.Component::__set|


*yii.widgets.InputWidget::__isset*				 public
 See |yii.base.Component::__isset|


*yii.widgets.InputWidget::__unset*				 public
 See |yii.base.Component::__unset|


*yii.widgets.InputWidget::__call*				 public
 See |yii.base.Component::__call|


*yii.widgets.InputWidget::hasProperty*				 public
 See |yii.base.Component::hasProperty|


*yii.widgets.InputWidget::canGetProperty*			 public
 See |yii.base.Component::canGetProperty|


*yii.widgets.InputWidget::canSetProperty*			 public
 See |yii.base.Component::canSetProperty|


*yii.widgets.InputWidget::hasMethod*				 public
 See |yii.base.Component::hasMethod|


*yii.widgets.InputWidget::__clone*				 public
 See |yii.base.Component::__clone|


*yii.widgets.InputWidget::behaviors*				 public
 See |yii.base.Component::behaviors|


*yii.widgets.InputWidget::hasEventHandlers*			 public
 See |yii.base.Component::hasEventHandlers|


*yii.widgets.InputWidget::on*					 public
 See |yii.base.Component::on|


*yii.widgets.InputWidget::off*					 public
 See |yii.base.Component::off|


*yii.widgets.InputWidget::trigger*				 public
 See |yii.base.Component::trigger|


*yii.widgets.InputWidget::getBehavior*				 public
 See |yii.base.Component::getBehavior|


*yii.widgets.InputWidget::getBehaviors* 			 public
 See |yii.base.Component::getBehaviors|


*yii.widgets.InputWidget::attachBehavior*			 public
 See |yii.base.Component::attachBehavior|


*yii.widgets.InputWidget::attachBehaviors*			 public
 See |yii.base.Component::attachBehaviors|


*yii.widgets.InputWidget::detachBehavior*			 public
 See |yii.base.Component::detachBehavior|


*yii.widgets.InputWidget::detachBehaviors*			 public
 See |yii.base.Component::detachBehaviors|


*yii.widgets.InputWidget::ensureBehaviors*			 public
 See |yii.base.Component::ensureBehaviors|


*yii.widgets.InputWidget::begin*				 public
 See |yii.base.Widget::begin|


*yii.widgets.InputWidget::end*					 public
 See |yii.base.Widget::end|


*yii.widgets.InputWidget::widget*				 public
 See |yii.base.Widget::widget|


*yii.widgets.InputWidget::getId*				 public
 See |yii.base.Widget::getId|


*yii.widgets.InputWidget::setId*				 public
 See |yii.base.Widget::setId|


*yii.widgets.InputWidget::getView*				 public
 See |yii.base.Widget::getView|


*yii.widgets.InputWidget::setView*				 public
 See |yii.base.Widget::setView|


*yii.widgets.InputWidget::run*					 public
 See |yii.base.Widget::run|


*yii.widgets.InputWidget::render*				 public
 See |yii.base.Widget::render|


*yii.widgets.InputWidget::renderFile*				 public
 See |yii.base.Widget::renderFile|


*yii.widgets.InputWidget::getViewPath*				 public
 See |yii.base.Widget::getViewPath|


*yii.widgets.InputWidget::hasModel*				 protected
>
 hasModel()
<
(boolean) Whether this widget is associated with a data model.





 vim:tw=78:ts=8:ft=help:norl:
