
*yii/db/cubrid/QueryBuilder*   >> |yii/db/QueryBuilder|
============================


PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/cubrid/QueryBuilder::$db*

 See |yii/db/QueryBuilder::$db|

$separator				*yii/db/cubrid/QueryBuilder::$separator*

 See |yii/db/QueryBuilder::$separator|

$typeMap				*yii/db/cubrid/QueryBuilder::$typeMap*

 (array) Mapping from abstract column types (keys) to physical column types
 (values).

$conditionBuilders			*yii/db/cubrid/QueryBuilder::$conditionBuilders*

 See |yii/db/QueryBuilder::$conditionBuilders|

$conditionClasses			*yii/db/cubrid/QueryBuilder::$conditionClasses*

 See |yii/db/QueryBuilder::$conditionClasses|

$expressionBuilders			*yii/db/cubrid/QueryBuilder::$expressionBuilders*

 See |yii/db/QueryBuilder::$expressionBuilders|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/db/cubrid/QueryBuilder::className*			public

 See |yii/base/BaseObject::className|


*yii/db/cubrid/QueryBuilder::__construct*			public

 See |yii/db/QueryBuilder::__construct|


*yii/db/cubrid/QueryBuilder::init*			public

 See |yii/db/QueryBuilder::init|


*yii/db/cubrid/QueryBuilder::__get*			public

 See |yii/base/BaseObject::__get|


*yii/db/cubrid/QueryBuilder::__set*			public

 See |yii/base/BaseObject::__set|


*yii/db/cubrid/QueryBuilder::__isset*			public

 See |yii/base/BaseObject::__isset|


*yii/db/cubrid/QueryBuilder::__unset*			public

 See |yii/base/BaseObject::__unset|


*yii/db/cubrid/QueryBuilder::__call*			public

 See |yii/base/BaseObject::__call|


*yii/db/cubrid/QueryBuilder::hasProperty*			public

 See |yii/base/BaseObject::hasProperty|


*yii/db/cubrid/QueryBuilder::canGetProperty*		public

 See |yii/base/BaseObject::canGetProperty|


*yii/db/cubrid/QueryBuilder::canSetProperty*		public

 See |yii/base/BaseObject::canSetProperty|


*yii/db/cubrid/QueryBuilder::hasMethod*			public

 See |yii/base/BaseObject::hasMethod|


*yii/db/cubrid/QueryBuilder::defaultConditionClasses*	protected

 See |yii/db/QueryBuilder::defaultConditionClasses|


*yii/db/cubrid/QueryBuilder::defaultExpressionBuilders*	protected
>
 defaultExpressionBuilders()
<
return (void)

 {@inheritdoc}


*yii/db/cubrid/QueryBuilder::setExpressionBuilders*	public

 See |yii/db/QueryBuilder::setExpressionBuilders|


*yii/db/cubrid/QueryBuilder::setConditionClasses*		public

 See |yii/db/QueryBuilder::setConditionClasses|


*yii/db/cubrid/QueryBuilder::build*			public

 See |yii/db/QueryBuilder::build|


*yii/db/cubrid/QueryBuilder::buildExpression*		public

 See |yii/db/QueryBuilder::buildExpression|


*yii/db/cubrid/QueryBuilder::getExpressionBuilder*	public

 See |yii/db/QueryBuilder::getExpressionBuilder|


*yii/db/cubrid/QueryBuilder::insert*			public

 See |yii/db/QueryBuilder::insert|


*yii/db/cubrid/QueryBuilder::prepareInsertValues*		protected

 See |yii/db/QueryBuilder::prepareInsertValues|


*yii/db/cubrid/QueryBuilder::prepareInsertSelectSubQuery*	protected

 See |yii/db/QueryBuilder::prepareInsertSelectSubQuery|


*yii/db/cubrid/QueryBuilder::batchInsert*			public

 See |yii/db/QueryBuilder::batchInsert|


*yii/db/cubrid/QueryBuilder::upsert*			public
>
 upsert($table, $insertColumns, $updateColumns, $params)
<
return (void)

 {@inheritdoc}

    [$table] () 
    [$insertColumns] () 
    [$updateColumns] () 
    [$params] () 


*yii/db/cubrid/QueryBuilder::prepareUpsertColumns*	protected

 See |yii/db/QueryBuilder::prepareUpsertColumns|


*yii/db/cubrid/QueryBuilder::update*			public

 See |yii/db/QueryBuilder::update|


*yii/db/cubrid/QueryBuilder::prepareUpdateSets*		protected

 See |yii/db/QueryBuilder::prepareUpdateSets|


*yii/db/cubrid/QueryBuilder::delete*			public

 See |yii/db/QueryBuilder::delete|


*yii/db/cubrid/QueryBuilder::createTable*			public

 See |yii/db/QueryBuilder::createTable|


*yii/db/cubrid/QueryBuilder::renameTable*			public

 See |yii/db/QueryBuilder::renameTable|


*yii/db/cubrid/QueryBuilder::dropTable*			public

 See |yii/db/QueryBuilder::dropTable|


*yii/db/cubrid/QueryBuilder::addPrimaryKey*		public

 See |yii/db/QueryBuilder::addPrimaryKey|


*yii/db/cubrid/QueryBuilder::dropPrimaryKey*		public

 See |yii/db/QueryBuilder::dropPrimaryKey|


*yii/db/cubrid/QueryBuilder::truncateTable*		public

 See |yii/db/QueryBuilder::truncateTable|


*yii/db/cubrid/QueryBuilder::addColumn*			public

 See |yii/db/QueryBuilder::addColumn|


*yii/db/cubrid/QueryBuilder::dropColumn*			public

 See |yii/db/QueryBuilder::dropColumn|


*yii/db/cubrid/QueryBuilder::renameColumn*		public

 See |yii/db/QueryBuilder::renameColumn|


*yii/db/cubrid/QueryBuilder::alterColumn*			public

 See |yii/db/QueryBuilder::alterColumn|


*yii/db/cubrid/QueryBuilder::addForeignKey*		public

 See |yii/db/QueryBuilder::addForeignKey|


*yii/db/cubrid/QueryBuilder::dropForeignKey*		public

 See |yii/db/QueryBuilder::dropForeignKey|


*yii/db/cubrid/QueryBuilder::createIndex*			public

 See |yii/db/QueryBuilder::createIndex|


*yii/db/cubrid/QueryBuilder::dropIndex*			public
>
 dropIndex($name, $table)
<
return (void)

 {@inheritdoc}

    [$name] () 
    [$table] () 


*yii/db/cubrid/QueryBuilder::addUnique*			public

 See |yii/db/QueryBuilder::addUnique|


*yii/db/cubrid/QueryBuilder::dropUnique*			public

 See |yii/db/QueryBuilder::dropUnique|


*yii/db/cubrid/QueryBuilder::addCheck*			public
>
 addCheck($name, $table, $expression)
<
return (void)

 {@inheritdoc}

    [$name] () 
    [$table] () 
    [$expression] () 


*yii/db/cubrid/QueryBuilder::dropCheck*			public
>
 dropCheck($name, $table)
<
return (void)

 {@inheritdoc}

    [$name] () 
    [$table] () 


*yii/db/cubrid/QueryBuilder::addDefaultValue*		public

 See |yii/db/QueryBuilder::addDefaultValue|


*yii/db/cubrid/QueryBuilder::dropDefaultValue*		public

 See |yii/db/QueryBuilder::dropDefaultValue|


*yii/db/cubrid/QueryBuilder::resetSequence*		public
>
 resetSequence($tableName, $value='null')
<
return (string) The SQL statement for resetting sequence

 Creates a SQL statement for resetting the sequence value of a table's primary
 key.

 The sequence will be reset such that the primary key of the next new row
 inserted will have the specified value or 1.

    [$tableName] (string) The name of the table whose primary key sequence
    will be reset
    [$value] (mixed) The value for the primary key of the next new row
    inserted. If this is not set, the next new row's primary key will have a
    value 1.


*yii/db/cubrid/QueryBuilder::checkIntegrity*		public

 See |yii/db/QueryBuilder::checkIntegrity|


*yii/db/cubrid/QueryBuilder::addCommentOnColumn*		public
>
 addCommentOnColumn($table, $column, $comment)
<
return (void)

 {@inheritdoc}

    [$table] () 
    [$column] () 
    [$comment] () 


*yii/db/cubrid/QueryBuilder::addCommentOnTable*		public
>
 addCommentOnTable($table, $comment)
<
return (void)

 {@inheritdoc}

    [$table] () 
    [$comment] () 


*yii/db/cubrid/QueryBuilder::dropCommentFromColumn*	public
>
 dropCommentFromColumn($table, $column)
<
return (void)

 {@inheritdoc}

    [$table] () 
    [$column] () 


*yii/db/cubrid/QueryBuilder::dropCommentFromTable*	public
>
 dropCommentFromTable($table)
<
return (void)

 {@inheritdoc}

    [$table] () 


*yii/db/cubrid/QueryBuilder::createView*			public

 See |yii/db/QueryBuilder::createView|


*yii/db/cubrid/QueryBuilder::dropView*			public

 See |yii/db/QueryBuilder::dropView|


*yii/db/cubrid/QueryBuilder::getColumnType*		public

 See |yii/db/QueryBuilder::getColumnType|


*yii/db/cubrid/QueryBuilder::buildSelect*			public

 See |yii/db/QueryBuilder::buildSelect|


*yii/db/cubrid/QueryBuilder::buildFrom*			public

 See |yii/db/QueryBuilder::buildFrom|


*yii/db/cubrid/QueryBuilder::buildJoin*			public

 See |yii/db/QueryBuilder::buildJoin|


*yii/db/cubrid/QueryBuilder::buildWhere*			public

 See |yii/db/QueryBuilder::buildWhere|


*yii/db/cubrid/QueryBuilder::buildGroupBy*		public

 See |yii/db/QueryBuilder::buildGroupBy|


*yii/db/cubrid/QueryBuilder::buildHaving*			public

 See |yii/db/QueryBuilder::buildHaving|


*yii/db/cubrid/QueryBuilder::buildOrderByAndLimit*	public

 See |yii/db/QueryBuilder::buildOrderByAndLimit|


*yii/db/cubrid/QueryBuilder::buildOrderBy*		public

 See |yii/db/QueryBuilder::buildOrderBy|


*yii/db/cubrid/QueryBuilder::buildLimit*			public
>
 buildLimit($limit, $offset)
<
return (void)

 {@inheritdoc}

    [$limit] () 
    [$offset] () 


*yii/db/cubrid/QueryBuilder::hasLimit*			protected

 See |yii/db/QueryBuilder::hasLimit|


*yii/db/cubrid/QueryBuilder::hasOffset*			protected

 See |yii/db/QueryBuilder::hasOffset|


*yii/db/cubrid/QueryBuilder::buildUnion*			public

 See |yii/db/QueryBuilder::buildUnion|


*yii/db/cubrid/QueryBuilder::buildColumns*		public

 See |yii/db/QueryBuilder::buildColumns|


*yii/db/cubrid/QueryBuilder::buildCondition*		public

 See |yii/db/QueryBuilder::buildCondition|


*yii/db/cubrid/QueryBuilder::createConditionFromArray*	public

 See |yii/db/QueryBuilder::createConditionFromArray|


*yii/db/cubrid/QueryBuilder::buildHashCondition*		public

 See |yii/db/QueryBuilder::buildHashCondition|


*yii/db/cubrid/QueryBuilder::buildAndCondition*		public

 See |yii/db/QueryBuilder::buildAndCondition|


*yii/db/cubrid/QueryBuilder::buildNotCondition*		public

 See |yii/db/QueryBuilder::buildNotCondition|


*yii/db/cubrid/QueryBuilder::buildBetweenCondition*	public

 See |yii/db/QueryBuilder::buildBetweenCondition|


*yii/db/cubrid/QueryBuilder::buildInCondition*		public

 See |yii/db/QueryBuilder::buildInCondition|


*yii/db/cubrid/QueryBuilder::buildLikeCondition*		public

 See |yii/db/QueryBuilder::buildLikeCondition|


*yii/db/cubrid/QueryBuilder::buildExistsCondition*	public

 See |yii/db/QueryBuilder::buildExistsCondition|


*yii/db/cubrid/QueryBuilder::buildSimpleCondition*	public

 See |yii/db/QueryBuilder::buildSimpleCondition|


*yii/db/cubrid/QueryBuilder::selectExists*		public
>
 selectExists($rawSql)
<
return (void)

 {@inheritdoc}

    [$rawSql] () 


*yii/db/cubrid/QueryBuilder::bindParam*			public

 See |yii/db/QueryBuilder::bindParam|



 vim:tw=78:ts=8:ft=help:norl:
