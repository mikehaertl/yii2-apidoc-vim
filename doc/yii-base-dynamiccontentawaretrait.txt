
*yii/base/DynamicContentAwareTrait*  
===================================



METHOD DETAILS
------------------------------------------------------------------------------


*yii/base/DynamicContentAwareTrait::getView*		protected
>
 getView()
<
return (\yii\base\View) The view object that can be used to render views or view
files.

 Returns the view object that can be used to render views or view files using
 dynamic contents.


*yii/base/DynamicContentAwareTrait::getDynamicPlaceholders*public
>
 getDynamicPlaceholders()
<
return (array) A list of placeholders.

 Returns a list of placeholders for dynamic content. This method is used
 internally to implement the content caching feature.








*yii/base/DynamicContentAwareTrait::setDynamicPlaceholders*public
>
 setDynamicPlaceholders($placeholders)
<
return (void)

 Sets a list of placeholders for dynamic content. This method is used
 internally to implement the content caching feature.







    [$placeholders] (array) A list of placeholders.


*yii/base/DynamicContentAwareTrait::addDynamicPlaceholder*public
>
 addDynamicPlaceholder($name, $statements)
<
return (void)

 Adds a placeholder for dynamic content.



 This method is used internally to implement the content caching feature.



    [$name] (string) The placeholder name.
    [$statements] (string) The PHP statements for generating the dynamic
    content.


*yii/base/DynamicContentAwareTrait::updateDynamicContent*	protected
>
 updateDynamicContent($content, $placeholders, $isRestoredFromCache='false')
<
return (string) Final content.

 Replaces placeholders in $content with results of evaluated dynamic
 statements.

    [$content] (string) Content to be parsed.
    [$placeholders] (string[]) Placeholders and their values.
    [$isRestoredFromCache] (bool) Whether content is going to be restored from
    cache.



 vim:tw=78:ts=8:ft=help:norl:
