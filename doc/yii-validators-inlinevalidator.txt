
*yii/validators/InlineValidator*   >> |yii/validators/Validator|
================================

DESCRIPTION
------------------------------------------------------------------------------

 The validation method must have the following signature:

   function foo($attribute, $params, $validator)

 where '$attribute' refers to the name of the attribute being validated, while
 '$params' is an array representing the additional parameters supplied in the
 validation rule. Parameter '$validator' refers to the related
 'InlineValidator' object and is available since version 2.0.11.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/validators/Validator::$builtInValidators|
 |yii/validators/Validator::$attributes|
 |yii/validators/Validator::$message|
 |yii/validators/Validator::$on|
 |yii/validators/Validator::$except|
 |yii/validators/Validator::$skipOnError|
 |yii/validators/Validator::$skipOnEmpty|
 |yii/validators/Validator::$enableClientValidation|
 |yii/validators/Validator::$isEmpty|
 |yii/validators/Validator::$when|
 |yii/validators/Validator::$whenClient|


$method					*yii/validators/InlineValidator::$method*

 (string|\Closure) An anonymous function or the name of a model class method
 that will be called to perform the actual validation. The signature of the
 method should be like the following:

   function foo($attribute, $params, $validator)


   - '$attribute' is the name of the attribute to be validated; 
   - '$params' contains the value of 'params' that you specify when
   declaring the inline validation rule; 
   - '$validator' is a reference to related 'InlineValidator' object.
   This parameter is available since version 2.0.11.

$params					*yii/validators/InlineValidator::$params*

 (mixed) Additional parameters that are passed to the validation method

$clientValidate				*yii/validators/InlineValidator::$clientValidate*

 (string|\Closure) An anonymous function or the name of a model class method
 that returns the client validation code. The signature of the method should
 be like the following:

   function foo($attribute, $params, $validator)
   {
       return "javascript";
   }

 where '$attribute' refers to the attribute name to be validated.

 Please refer to 'clientValidateAttribute()' for details on how to return
 client validation code.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/validators/Validator::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/validators/Validator::createValidator|
 |yii/validators/Validator::validateAttributes|
 |yii/validators/Validator::validate|
 |yii/validators/Validator::validateValue|
 |yii/validators/Validator::getClientOptions|
 |yii/validators/Validator::isActive|
 |yii/validators/Validator::addError|
 |yii/validators/Validator::isEmpty|
 |yii/validators/Validator::formatMessage|
 |yii/validators/Validator::getAttributeNames|


*yii/validators/InlineValidator::validateAttribute*	public
>
 validateAttribute($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 


*yii/validators/InlineValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 
    [$view] () 



 vim:tw=78:ts=8:ft=help:norl:
