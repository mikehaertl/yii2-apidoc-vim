
*yii/validators/InlineValidator*   >> |yii/validators/Validator|
================================

DESCRIPTION
------------------------------------------------------------------------------

 The validation method must have the following signature:

   function foo($attribute, $params)

 where '$attribute' refers to the name of the attribute being validated, while
 '$params' is an array representing the additional parameters supplied in the
 validation rule.


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/InlineValidator::$builtInValidators*
 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/InlineValidator::$attributes*
 See |yii/validators/Validator::$attributes|

$message				*yii/validators/InlineValidator::$message*
 See |yii/validators/Validator::$message|

$on					*yii/validators/InlineValidator::$on*
 See |yii/validators/Validator::$on|

$except					*yii/validators/InlineValidator::$except*
 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/InlineValidator::$skipOnError*
 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/InlineValidator::$skipOnEmpty*
 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/InlineValidator::$enableClientValidation*
 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/InlineValidator::$isEmpty*
 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/InlineValidator::$when*
 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/InlineValidator::$whenClient*
 See |yii/validators/Validator::$whenClient|

$method					*yii/validators/InlineValidator::$method*
 (string|\Closure) An anonymous function or the name of a model class method
 that will be called to perform the actual validation. The signature of the
 method should be like the following:

   function foo($attribute, $params)



$params					*yii/validators/InlineValidator::$params*
 (array) Additional parameters that are passed to the validation method

$clientValidate				*yii/validators/InlineValidator::$clientValidate*
 (string|\Closure) An anonymous function or the name of a model class method
 that returns the client validation code. The signature of the method should
 be like the following:

   function foo($attribute, $params)
   {
       return "javascript";
   }

 where '$attribute' refers to the attribute name to be validated.

 Please refer to 'clientValidateAttribute()' for details on how to return
 client validation code.

$behaviors				*yii/validators/InlineValidator::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii/validators/InlineValidator::className*		public
 See |yii/base/Object::className|


*yii/validators/InlineValidator::__construct*		public
 See |yii/base/Object::__construct|


*yii/validators/InlineValidator::init*			public
 See |yii/validators/Validator::init|


*yii/validators/InlineValidator::__get*			public
 See |yii/base/Component::__get|


*yii/validators/InlineValidator::__set*			public
 See |yii/base/Component::__set|


*yii/validators/InlineValidator::__isset*			public
 See |yii/base/Component::__isset|


*yii/validators/InlineValidator::__unset*			public
 See |yii/base/Component::__unset|


*yii/validators/InlineValidator::__call*			public
 See |yii/base/Component::__call|


*yii/validators/InlineValidator::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/validators/InlineValidator::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/validators/InlineValidator::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/validators/InlineValidator::hasMethod*		public
 See |yii/base/Component::hasMethod|


*yii/validators/InlineValidator::__clone*			public
 See |yii/base/Component::__clone|


*yii/validators/InlineValidator::behaviors*		public
 See |yii/base/Component::behaviors|


*yii/validators/InlineValidator::hasEventHandlers*	public
 See |yii/base/Component::hasEventHandlers|


*yii/validators/InlineValidator::on*			public
 See |yii/base/Component::on|


*yii/validators/InlineValidator::off*			public
 See |yii/base/Component::off|


*yii/validators/InlineValidator::trigger*			public
 See |yii/base/Component::trigger|


*yii/validators/InlineValidator::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/validators/InlineValidator::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/validators/InlineValidator::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/validators/InlineValidator::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/validators/InlineValidator::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/validators/InlineValidator::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/validators/InlineValidator::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/validators/InlineValidator::createValidator*		public
 See |yii/validators/Validator::createValidator|


*yii/validators/InlineValidator::validateAttributes*	public
 See |yii/validators/Validator::validateAttributes|


*yii/validators/InlineValidator::validateAttribute*	public
>
 validateAttribute($object, $attribute)
<
(void)

 Child classes must implement this method to provide the actual validation
 logic.
    [$object] (\yii\base\Model) The data object to be validated
    [$attribute] (string) The name of the attribute to be validated.


*yii/validators/InlineValidator::validate*		public
 See |yii/validators/Validator::validate|


*yii/validators/InlineValidator::validateValue*		protected
 See |yii/validators/Validator::validateValue|


*yii/validators/InlineValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($object, $attribute, $view)
<
(string) The client-side validation script. Null if the validator does not
support client-side validation.

 You may override this method to return the JavaScript validation code if the
 validator can support client-side validation.

 The following JavaScript variables are predefined and can be used in the
 validation code:


   - 'attribute': the name of the attribute being validated. 
   - 'value': the value being validated. 
   - 'messages': an array used to hold the validation error messages
   for the attribute. 
   - 'deferred': an array used to hold deferred objects for
   asynchronous validation
    [$object] (\yii\base\Model) The data object being validated
    [$attribute] (string) The name of the attribute to be validated.
    [$view] (\yii\web\View) The view object that is going to be used to render
    views or view files containing a model form with this validator applied.


*yii/validators/InlineValidator::isActive*		public
 See |yii/validators/Validator::isActive|


*yii/validators/InlineValidator::addError*		public
 See |yii/validators/Validator::addError|


*yii/validators/InlineValidator::isEmpty*			public
 See |yii/validators/Validator::isEmpty|



 vim:tw=78:ts=8:ft=help:norl:
