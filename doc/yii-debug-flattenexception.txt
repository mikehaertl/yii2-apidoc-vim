
*yii/debug/FlattenException*  
============================

DESCRIPTION
------------------------------------------------------------------------------

 Implements the Throwable interface Basically, this class removes all objects
 from the trace. Ported from Symfony components @link
 https://github.com/symfony/symfony/blob/master/src/Symfony/Component/Debug/Exception/FlattenException.php


PROPERTY DETAILS
------------------------------------------------------------------------------


$message				*yii/debug/FlattenException::$message*

 (string)

$code					*yii/debug/FlattenException::$code*

 (mixed|int)

$file					*yii/debug/FlattenException::$file*

 (string)

$line					*yii/debug/FlattenException::$line*

 (int)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/debug/FlattenException::__construct*			public
>
 __construct($exception)
<
return (void)

 FlattenException constructor.

    [$exception] (\Exception) 


*yii/debug/FlattenException::getMessage*			public
>
 getMessage()
<
return (string) The Exception message as a string.

 Gets the Exception message


*yii/debug/FlattenException::getCode*			public
>
 getCode()
<
return (mixed|int) The exception code as integer.

 Gets the Exception code


*yii/debug/FlattenException::getFile*			public
>
 getFile()
<
return (string) The filename in which the exception was created.

 Gets the file in which the exception occurred


*yii/debug/FlattenException::getLine*			public
>
 getLine()
<
return (int) The line number where the exception was created.

 Gets the line in which the exception occurred


*yii/debug/FlattenException::getTrace*			public
>
 getTrace()
<
return (array) The Exception stack trace as an array.

 Gets the stack trace


*yii/debug/FlattenException::getPrevious*			public
>
 getPrevious()
<
return (\yii\debug\FlattenException) The previous 'FlattenException' if available or
null otherwise.

 Returns previous Exception


*yii/debug/FlattenException::getTraceAsString*		public
>
 getTraceAsString()
<
return (string) The Exception stack trace as a string.

 Gets the stack trace as a string


*yii/debug/FlattenException::__toString*			public
>
 __toString()
<
return (string) The string representation of the exception.

 String representation of the exception


*yii/debug/FlattenException::getClass*			public
>
 getClass()
<
return (string) The name of the class in which the exception was created.



*yii/debug/FlattenException::setMessage*			protected
>
 setMessage($message)
<
return (void)

    [$message] (string) The Exception message as a string.


*yii/debug/FlattenException::setCode*			protected
>
 setCode($code)
<
return (void)

    [$code] (mixed|int) The exception code as integer.


*yii/debug/FlattenException::setFile*			protected
>
 setFile($file)
<
return (void)

    [$file] (string) The filename in which the exception was created.


*yii/debug/FlattenException::setLine*			protected
>
 setLine($line)
<
return (void)

    [$line] (int) The line number where the exception was created.


*yii/debug/FlattenException::setTrace*			protected
>
 setTrace($trace)
<
return (void)

    [$trace] (array) The Exception stack trace as an array.


*yii/debug/FlattenException::setToString*			protected
>
 setToString($string)
<
return (void)

    [$string] (string) The string representation of the thrown object.


*yii/debug/FlattenException::setPrevious*			protected
>
 setPrevious($previous)
<
return (void)

    [$previous] (\yii\debug\FlattenException) Previous Exception.


*yii/debug/FlattenException::setClass*			protected
>
 setClass($class)
<
return (void)

    [$class] (string) The name of the class in which the exception was
    created.



 vim:tw=78:ts=8:ft=help:norl:
