
*yii/filters/auth/HttpBearerAuth*   >> |yii/filters/auth/HttpHeaderAuth|
=================================

DESCRIPTION
------------------------------------------------------------------------------

 You may use HttpBearerAuth by attaching it as a behavior to a controller or
 module, like the following:

   public function behaviors()
   {
       return [
           'bearerAuth' => [
               'class' => \yii\filters\auth\HttpBearerAuth::className(),
           ],
       ];
   }




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Behavior::$owner|
 |yii/base/ActionFilter::$only|
 |yii/base/ActionFilter::$except|
 |yii/filters/auth/AuthMethod::$user|
 |yii/filters/auth/AuthMethod::$request|
 |yii/filters/auth/AuthMethod::$response|
 |yii/filters/auth/AuthMethod::$optional|


$header					*yii/filters/auth/HttpBearerAuth::$header*

 ()

$pattern				*yii/filters/auth/HttpBearerAuth::$pattern*

 ()

$realm					*yii/filters/auth/HttpBearerAuth::$realm*

 (string) The HTTP authentication realm



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Behavior::events|
 |yii/base/ActionFilter::attach|
 |yii/base/ActionFilter::detach|
 |yii/base/ActionFilter::beforeFilter|
 |yii/base/ActionFilter::afterFilter|
 |yii/filters/auth/AuthMethod::beforeAction|
 |yii/base/ActionFilter::afterAction|
 |yii/base/ActionFilter::getActionId|
 |yii/base/ActionFilter::isActive|
 |yii/filters/auth/AuthMethod::handleFailure|
 |yii/filters/auth/AuthMethod::isOptional|
 |yii/filters/auth/HttpHeaderAuth::authenticate|


*yii/filters/auth/HttpBearerAuth::challenge*		public
>
 challenge($response)
<
return (void)

 {@inheritdoc}

    [$response] () 



 vim:tw=78:ts=8:ft=help:norl:
