
*yii/test/ActiveFixture*   >> |yii/test/BaseActiveFixture|
========================

DESCRIPTION
------------------------------------------------------------------------------

 Either 'modelClass' or 'tableName' must be set. You should also provide
 fixture data in the file specified by 'dataFile' or overriding 'getData()' if
 you want to use code to generate the fixture data.

 When the fixture is being loaded, it will first call 'resetTable()' to remove
 any existing data in the table. It will then populate the table with the data
 returned by 'getData()'.

 After the fixture is loaded, you can access the loaded data via the 'data'
 property. If you set 'modelClass', you will also be able to retrieve an
 instance of 'modelClass' with the populated data via 'getModel()'.

 For more details and usage information on ActiveFixture, see the [guide
 article on fixtures](guide:test-fixtures).


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/test/Fixture::$depends|
 |yii/test/DbFixture::$db|
 |yii/test/FileFixtureTrait::$dataDirectory|
 |yii/test/BaseActiveFixture::$modelClass|
 |yii/test/BaseActiveFixture::$data|
 |yii/base/Component::$behaviors|
 |yii/base/ArrayAccessTrait::$iterator|


$dataFile				*yii/test/ActiveFixture::$dataFile*

 (string|bool) The file path or [path alias](guide:concept-aliases) of the
 data file that contains the fixture data to be returned by 'getData()'. If
 this is not set, it will default to 'FixturePath/data/TableName.php', where
 'FixturePath' stands for the directory containing this fixture class, and
 'TableName' stands for the name of the table associated with this fixture.
 You can set this property to be false to prevent loading any data.

$tableName				*yii/test/ActiveFixture::$tableName*

 (string) The name of the database table that this fixture is about. If this
 property is not set, the table name will be determined via 'modelClass'.

$tableSchema				*yii/test/ActiveFixture::$tableSchema*

 (\yii\db\TableSchema) The schema information of the database table associated
 with this fixture.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/test/Fixture::beforeLoad|
 |yii/test/Fixture::afterLoad|
 |yii/test/Fixture::beforeUnload|
 |yii/test/Fixture::afterUnload|
 |yii/test/FileFixtureTrait::loadData|
 |yii/base/ArrayAccessTrait::getIterator|
 |yii/base/ArrayAccessTrait::count|
 |yii/base/ArrayAccessTrait::offsetExists|
 |yii/base/ArrayAccessTrait::offsetGet|
 |yii/base/ArrayAccessTrait::offsetSet|
 |yii/base/ArrayAccessTrait::offsetUnset|
 |yii/test/BaseActiveFixture::getModel|


*yii/test/ActiveFixture::init*				public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/test/ActiveFixture::load*				public
>
 load()
<
return (void)

 Loads the fixture.

 It populate the table with the data returned by 'getData()'.

 If you override this method, you should consider calling the parent
 implementation so that the data returned by 'getData()' can be populated into
 the table.


*yii/test/ActiveFixture::unload*				public
>
 unload()
<
return (void)

 Unloads the fixture.



 This method is called after every test method finishes. You may override this
 method to perform necessary cleanup work for the fixture.




*yii/test/ActiveFixture::getData*				protected
>
 getData()
<
return (array) The data rows to be inserted into the database table.

 Returns the fixture data.

 The default implementation will try to return the fixture data by including
 the external file specified by 'dataFile'. The file should return an array of
 data rows (column name => column value), each corresponding to a row in the
 table.

 If the data file does not exist, an empty array will be returned.


*yii/test/ActiveFixture::resetTable*			protected
>
 resetTable()
<
return (void)

 Removes all existing data from the specified table and resets sequence number
 to 1 (if any).

 This method is called before populating fixture data into the table
 associated with this fixture.


*yii/test/ActiveFixture::getTableSchema*			public
>
 getTableSchema()
<
return (\yii\db\TableSchema) The schema information of the database table associated
with this fixture.




 vim:tw=78:ts=8:ft=help:norl:
