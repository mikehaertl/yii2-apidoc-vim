
*yii/web/ViewAction*   >> |yii/base/Action|
====================

DESCRIPTION
------------------------------------------------------------------------------

 By default, the view being displayed is specified via the 'view' GET
 parameter. The name of the GET parameter can be customized via 'viewParam'.

 Users specify a view in the format of 'path/to/view', which translates to the
 view name 'ViewPrefix/path/to/view' where 'ViewPrefix' is given by
 'viewPrefix'. The view will then be rendered by the
 '\yii\base\Controller::render()|render()' method of the currently active
 controller.

 Note that the user-specified view name must start with a word character and
 can only contain word characters, forward slashes, dots and dashes.


PROPERTY DETAILS
------------------------------------------------------------------------------

$id					*yii/web/ViewAction::$id*
 See |yii/base/Action::$id|

$controller				*yii/web/ViewAction::$controller*
 See |yii/base/Action::$controller|

$viewParam				*yii/web/ViewAction::$viewParam*
 (string) The name of the GET parameter that contains the requested view name.

$defaultView				*yii/web/ViewAction::$defaultView*
 (string) The name of the default view when '\yii\web\ViewAction::$viewParam'
 GET parameter is not provided by user. Defaults to 'index'. This should be in
 the format of 'path/to/view', similar to that given in the GET parameter.

$viewPrefix				*yii/web/ViewAction::$viewPrefix*
 (string) A string to be prefixed to the user-specified view name to form a
 complete view name. For example, if a user requests for 'tutorial/chap1', the
 corresponding view name will be 'pages/tutorial/chap1', assuming the prefix
 is 'pages'. The actual view file is determined by
 '\yii\base\View::findViewFile()'.

$layout					*yii/web/ViewAction::$layout*
 (mixed) The name of the layout to be applied to the requested view. This will
 be assigned to '\yii\base\Controller::$layout' before the view is rendered.
 Defaults to null, meaning the controller's layout will be used. If false, no
 layout will be applied.

$behaviors				*yii/web/ViewAction::$behaviors*
 See |yii/base/Component::$behaviors|

$uniqueId				*yii/web/ViewAction::$uniqueId*
 See |yii/base/Action::$uniqueId|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/web/ViewAction::className*				public
 See |yii/base/Object::className|


*yii/web/ViewAction::__construct*				public
 See |yii/base/Action::__construct|


*yii/web/ViewAction::init*				public
 See |yii/base/Object::init|


*yii/web/ViewAction::__get*				public
 See |yii/base/Component::__get|


*yii/web/ViewAction::__set*				public
 See |yii/base/Component::__set|


*yii/web/ViewAction::__isset*				public
 See |yii/base/Component::__isset|


*yii/web/ViewAction::__unset*				public
 See |yii/base/Component::__unset|


*yii/web/ViewAction::__call*				public
 See |yii/base/Component::__call|


*yii/web/ViewAction::hasProperty*				public
 See |yii/base/Component::hasProperty|


*yii/web/ViewAction::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/web/ViewAction::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/web/ViewAction::hasMethod*				public
 See |yii/base/Component::hasMethod|


*yii/web/ViewAction::__clone*				public
 See |yii/base/Component::__clone|


*yii/web/ViewAction::behaviors*				public
 See |yii/base/Component::behaviors|


*yii/web/ViewAction::hasEventHandlers*			public
 See |yii/base/Component::hasEventHandlers|


*yii/web/ViewAction::on*					public
 See |yii/base/Component::on|


*yii/web/ViewAction::off*					public
 See |yii/base/Component::off|


*yii/web/ViewAction::trigger*				public
 See |yii/base/Component::trigger|


*yii/web/ViewAction::getBehavior*				public
 See |yii/base/Component::getBehavior|


*yii/web/ViewAction::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/web/ViewAction::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/web/ViewAction::attachBehaviors*			public
 See |yii/base/Component::attachBehaviors|


*yii/web/ViewAction::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/web/ViewAction::detachBehaviors*			public
 See |yii/base/Component::detachBehaviors|


*yii/web/ViewAction::ensureBehaviors*			public
 See |yii/base/Component::ensureBehaviors|


*yii/web/ViewAction::getUniqueId*				public
 See |yii/base/Action::getUniqueId|


*yii/web/ViewAction::runWithParams*			public
 See |yii/base/Action::runWithParams|


*yii/web/ViewAction::beforeRun*				protected
 See |yii/base/Action::beforeRun|


*yii/web/ViewAction::afterRun*				protected
 See |yii/base/Action::afterRun|


*yii/web/ViewAction::run*					public
>
 run()
<
(void)

 This method displays the view requested by the user.


*yii/web/ViewAction::render*				protected
>
 render($viewName)
<
(string) Result of the rendering

    [$viewName] (string) View name


*yii/web/ViewAction::resolveViewName*			protected
>
 resolveViewName()
<
(string) The resolved view name




 vim:tw=78:ts=8:ft=help:norl:
