
*yii/elasticsearch/QueryBuilder*   >> |yii/base/BaseObject|
================================


PROPERTY DETAILS
------------------------------------------------------------------------------


$db					*yii/elasticsearch/QueryBuilder::$db*

 (\yii\elasticsearch\Connection) The database connection.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/elasticsearch/QueryBuilder::__construct*		public
>
 __construct($connection, $config='[]')
<
return (void)

 Constructor.

    [$connection] (\yii\elasticsearch\Connection) The database connection.
    [$config] (array) Name-value pairs that will be used to initialize the
    object properties


*yii/elasticsearch/QueryBuilder::build*			public
>
 build($query)
<
return (array) The generated SQL statement (the first array element) and the
corresponding parameters to be bound to the SQL statement (the second array
element).

 Generates query from a 'Query' object.

    [$query] (\yii\elasticsearch\Query) The 'Query' object from which the
    query will be generated


*yii/elasticsearch/QueryBuilder::buildOrderBy*		public
>
 buildOrderBy($columns)
<
return (void)

 Adds order by condition to the query

    [$columns] () 


*yii/elasticsearch/QueryBuilder::buildCondition*		public
>
 buildCondition($condition)
<
return (string) The generated SQL expression

 Parses the condition specification and generates the corresponding SQL
 expression.

    [$condition] (string|array) The condition specification. Please refer to
    'Query::where()' on how to specify a condition.


*yii/elasticsearch/QueryBuilder::buildCompositeInCondition*protected
>
 buildCompositeInCondition($operator, $columns, $values)
<
return (void)

    [$operator] () 
    [$columns] () 
    [$values] () 



 vim:tw=78:ts=8:ft=help:norl:
