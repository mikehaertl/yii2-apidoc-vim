
*yii/validators/RegularExpressionValidator*   >> |yii/validators/Validator|
===========================================

DESCRIPTION
------------------------------------------------------------------------------

 If the 'not' property is set true, the validator will ensure the attribute
 value do NOT match the 'pattern'.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/validators/Validator::$builtInValidators|
 |yii/validators/Validator::$attributes|
 |yii/validators/Validator::$message|
 |yii/validators/Validator::$on|
 |yii/validators/Validator::$except|
 |yii/validators/Validator::$skipOnError|
 |yii/validators/Validator::$skipOnEmpty|
 |yii/validators/Validator::$enableClientValidation|
 |yii/validators/Validator::$isEmpty|
 |yii/validators/Validator::$when|
 |yii/validators/Validator::$whenClient|


$pattern				*yii/validators/RegularExpressionValidator::$pattern*

 (string) The regular expression to be matched with

$not					*yii/validators/RegularExpressionValidator::$not*

 (bool) Whether to invert the validation logic. Defaults to false. If set to
 true, the regular expression defined via 'pattern' should NOT match the
 attribute value.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/validators/Validator::createValidator|
 |yii/validators/Validator::validateAttributes|
 |yii/validators/Validator::validateAttribute|
 |yii/validators/Validator::validate|
 |yii/validators/Validator::isActive|
 |yii/validators/Validator::addError|
 |yii/validators/Validator::isEmpty|
 |yii/validators/Validator::formatMessage|
 |yii/validators/Validator::getAttributeNames|


*yii/validators/RegularExpressionValidator::init*		public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/validators/RegularExpressionValidator::validateValue*protected
>
 validateValue($value)
<
return (void)

 {@inheritdoc}

    [$value] () 


*yii/validators/RegularExpressionValidator::clientValidateAttribute*public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 
    [$view] () 


*yii/validators/RegularExpressionValidator::getClientOptions*public
>
 getClientOptions($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 



 vim:tw=78:ts=8:ft=help:norl:
