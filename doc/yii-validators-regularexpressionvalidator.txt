
*yii\validators\RegularExpressionValidator*   >> yii\validators\Validator
===========================================

 If the [[not]] property is set true, the validator will ensure the attribute
 value do NOT match the [[pattern]].


PROPERTY DETAILS
------------------------------------------------------------------------------

<$builtInValidators>			*yii\validators\RegularExpressionValidator::$builtInValidators*
 See |yii\validators\Validator::$builtInValidators|

<$attributes>				*yii\validators\RegularExpressionValidator::$attributes*
 See |yii\validators\Validator::$attributes|

<$message>				*yii\validators\RegularExpressionValidator::$message*
 See |yii\validators\Validator::$message|

<$on>					*yii\validators\RegularExpressionValidator::$on*
 See |yii\validators\Validator::$on|

<$except>				*yii\validators\RegularExpressionValidator::$except*
 See |yii\validators\Validator::$except|

<$skipOnError>				*yii\validators\RegularExpressionValidator::$skipOnError*
 See |yii\validators\Validator::$skipOnError|

<$skipOnEmpty>				*yii\validators\RegularExpressionValidator::$skipOnEmpty*
 See |yii\validators\Validator::$skipOnEmpty|

<$enableClientValidation>		*yii\validators\RegularExpressionValidator::$enableClientValidation*
 See |yii\validators\Validator::$enableClientValidation|

<$isEmpty>				*yii\validators\RegularExpressionValidator::$isEmpty*
 See |yii\validators\Validator::$isEmpty|

<$when> 				*yii\validators\RegularExpressionValidator::$when*
 See |yii\validators\Validator::$when|

<$whenClient>				*yii\validators\RegularExpressionValidator::$whenClient*
 See |yii\validators\Validator::$whenClient|

<$pattern>				*yii\validators\RegularExpressionValidator::$pattern*
 (string) The regular expression to be matched with

<$not>					*yii\validators\RegularExpressionValidator::$not*
 (boolean) Whether to invert the validation logic. Defaults to false. If set
 to true, the regular expression defined via [[pattern]] should NOT match the
 attribute value.

<$behaviors>				*yii\validators\RegularExpressionValidator::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii\validators\RegularExpressionValidator::className*		 public
 See |yii\base\Object::className|


*yii\validators\RegularExpressionValidator::__construct*	 public
 See |yii\base\Object::__construct|


*yii\validators\RegularExpressionValidator::init*		 public
>
 init()
<
(void)




*yii\validators\RegularExpressionValidator::__get*		 public
 See |yii\base\Component::__get|


*yii\validators\RegularExpressionValidator::__set*		 public
 See |yii\base\Component::__set|


*yii\validators\RegularExpressionValidator::__isset*		 public
 See |yii\base\Component::__isset|


*yii\validators\RegularExpressionValidator::__unset*		 public
 See |yii\base\Component::__unset|


*yii\validators\RegularExpressionValidator::__call*		 public
 See |yii\base\Component::__call|


*yii\validators\RegularExpressionValidator::hasProperty*	 public
 See |yii\base\Component::hasProperty|


*yii\validators\RegularExpressionValidator::canGetProperty*	 public
 See |yii\base\Component::canGetProperty|


*yii\validators\RegularExpressionValidator::canSetProperty*	 public
 See |yii\base\Component::canSetProperty|


*yii\validators\RegularExpressionValidator::hasMethod*		 public
 See |yii\base\Component::hasMethod|


*yii\validators\RegularExpressionValidator::__clone*		 public
 See |yii\base\Component::__clone|


*yii\validators\RegularExpressionValidator::behaviors*		 public
 See |yii\base\Component::behaviors|


*yii\validators\RegularExpressionValidator::hasEventHandlers*	 public
 See |yii\base\Component::hasEventHandlers|


*yii\validators\RegularExpressionValidator::on* 		 public
 See |yii\base\Component::on|


*yii\validators\RegularExpressionValidator::off*		 public
 See |yii\base\Component::off|


*yii\validators\RegularExpressionValidator::trigger*		 public
 See |yii\base\Component::trigger|


*yii\validators\RegularExpressionValidator::getBehavior*	 public
 See |yii\base\Component::getBehavior|


*yii\validators\RegularExpressionValidator::getBehaviors*	 public
 See |yii\base\Component::getBehaviors|


*yii\validators\RegularExpressionValidator::attachBehavior*	 public
 See |yii\base\Component::attachBehavior|


*yii\validators\RegularExpressionValidator::attachBehaviors*	 public
 See |yii\base\Component::attachBehaviors|


*yii\validators\RegularExpressionValidator::detachBehavior*	 public
 See |yii\base\Component::detachBehavior|


*yii\validators\RegularExpressionValidator::detachBehaviors*	 public
 See |yii\base\Component::detachBehaviors|


*yii\validators\RegularExpressionValidator::ensureBehaviors*	 public
 See |yii\base\Component::ensureBehaviors|


*yii\validators\RegularExpressionValidator::createValidator*	 public
 See |yii\validators\Validator::createValidator|


*yii\validators\RegularExpressionValidator::validateAttributes*  public
 See |yii\validators\Validator::validateAttributes|


*yii\validators\RegularExpressionValidator::validateAttribute*	 public
 See |yii\validators\Validator::validateAttribute|


*yii\validators\RegularExpressionValidator::validate*		 public
 See |yii\validators\Validator::validate|


*yii\validators\RegularExpressionValidator::validateValue*	 protected
>
 validateValue($value)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.


    [$value] () 


*yii\validators\RegularExpressionValidator::clientValidateAttribute*public
>
 clientValidateAttribute($object, $attribute, $view)
<
(string) The client-side validation script. Null if the validator does not
support client-side validation.


    [$object] () 
    [$attribute] () 
    [$view] () 


*yii\validators\RegularExpressionValidator::isActive*		 public
 See |yii\validators\Validator::isActive|


*yii\validators\RegularExpressionValidator::addError*		 public
 See |yii\validators\Validator::addError|


*yii\validators\RegularExpressionValidator::isEmpty*		 public
 See |yii\validators\Validator::isEmpty|



 vim:tw=78:ts=8:ft=help:norl:
