
*yii/mongodb/file/Download*   >> |yii/base/BaseObject|
===========================

DESCRIPTION
------------------------------------------------------------------------------

 A 'Download' object is usually created by calling 'Collection::get()' or
 'Collection::createDownload()'.

 Usage example:

  
 Yii::$app->mongodb->getFileCollection()->createDownload($document['_id'])->toFile('/path/to/file.dat');

 You can use 'Download::substr()' to read a specific part of the file:

   $filePart =
 Yii::$app->mongodb->getFileCollection()->createDownload($document['_id'])->substr(256,
 1024);




PROPERTY DETAILS
------------------------------------------------------------------------------


$collection				*yii/mongodb/file/Download::$collection*

 (\yii\mongodb\file\Collection) File collection to be used.

$document				*yii/mongodb/file/Download::$document*

 (array) Document to be downloaded.

$size					*yii/mongodb/file/Download::$size*

 (int) File size.

$filename				*yii/mongodb/file/Download::$filename*

 (string|null) File name.

$chunkCursor				*yii/mongodb/file/Download::$chunkCursor*

 (\MongoDB\Driver\Cursor) Chuck list cursor.

$chunkIterator				*yii/mongodb/file/Download::$chunkIterator*

 (\Iterator) Chuck cursor iterator.

$bytes					*yii/mongodb/file/Download::$bytes*

 (string) File content.

$resource				*yii/mongodb/file/Download::$resource*

 (resource) File stream resource.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|


*yii/mongodb/file/Download::getDocument*			public
>
 getDocument()
<
return (array) Document to be downloaded.



*yii/mongodb/file/Download::setDocument*			public
>
 setDocument($document)
<
return (void)

 Sets data of the document to be downloaded.

 Document can be specified by its ID, in this case its data will be fetched
 automatically via extra query.

    [$document] (array|\MongoDB\BSON\ObjectID) Document raw data or document
    ID.


*yii/mongodb/file/Download::getSize*			public
>
 getSize()
<
return (int) File size.

 Returns the size of the associated file.


*yii/mongodb/file/Download::getFilename*			public
>
 getFilename()
<
return (string|null) File name.

 Returns associated file's filename.


*yii/mongodb/file/Download::getChunkCursor*		public
>
 getChunkCursor($refresh='false')
<
return (\MongoDB\Driver\Cursor) Chuck list cursor.

 Returns file chunks read cursor.

    [$refresh] (bool) Whether to recreate cursor, if it is already exist.


*yii/mongodb/file/Download::getChunkIterator*		public
>
 getChunkIterator($refresh='false')
<
return (\Iterator) Chuck cursor iterator.

 Returns iterator for the file chunks cursor.

    [$refresh] (bool) Whether to recreate iterator, if it is already exist.


*yii/mongodb/file/Download::toStream*			public
>
 toStream($stream)
<
return (int) Number of written bytes.

 Saves file into the given stream.

    [$stream] (resource) Stream, which file should be saved to.


*yii/mongodb/file/Download::toFile*			public
>
 toFile($filename)
<
return (int) Number of written bytes.

 Saves download to the physical file.

    [$filename] (string) Name of the physical file.


*yii/mongodb/file/Download::toString*			public
>
 toString()
<
return (string) File content.

 Returns a string of the bytes in the associated file.


*yii/mongodb/file/Download::toResource*			public
>
 toResource()
<
return (resource) Stream resource.

 Returns an opened stream resource, which can be used to read file.

 Note: each invocation of this method will create new file resource.


*yii/mongodb/file/Download::substr*			public
>
 substr($start, $length)
<
return (string|false) The extracted part of file or 'false' on failure

 Return part of a file.

    [$start] (int) Reading start position. If non-negative, the returned
    string will start at the start'th position in file, counting from zero. If
    negative, the returned string will start at the start'th character from
    the end of file.
    [$length] (int) Number of bytes to read. If given and is positive, the
    string returned will contain at most length characters beginning from
    start (depending on the length of file). If given and is negative, then
    that many characters will be omitted from the end of file (after the start
    position has been calculated when a start is negative).


*yii/mongodb/file/Download::getBytes*			public
>
 getBytes()
<
return (string) File content.

 Alias of 'toString()' method.


*yii/mongodb/file/Download::write*			public
>
 write($filename)
<
return (int) Number of written bytes.

 Alias of 'toFile()' method.

    [$filename] (string) Name of the physical file.


*yii/mongodb/file/Download::getResource*			public
>
 getResource()
<
return (resource) File stream resource.

 Returns persistent stream resource, which can be used to read file.



 vim:tw=78:ts=8:ft=help:norl:
