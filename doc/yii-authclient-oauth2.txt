
*yii/authclient/OAuth2*   >> |yii/authclient/BaseOAuth|
=======================

SUBCLASSES
------------------------------------------------------------------------------

|yii/authclient/clients/Facebook|
|yii/authclient/clients/TwitterOAuth2|
|yii/authclient/clients/Google|
|yii/authclient/clients/Yandex|
|yii/authclient/clients/LinkedIn|
|yii/authclient/clients/GitHub|
|yii/authclient/clients/Live|
|yii/authclient/clients/GoogleHybrid|
|yii/authclient/clients/VKontakte|
|yii/authclient/OpenIdConnect|

DESCRIPTION
------------------------------------------------------------------------------

 In oder to acquire access token perform following sequence:

   use yii\authclient\OAuth2;

   // assuming class MyAuthClient extends OAuth2
   $oauthClient = new MyAuthClient();
   $url = $oauthClient->buildAuthUrl(); // Build authorization URL
   Yii::$app->getResponse()->redirect($url); // Redirect to authorization URL.
   // After user returns at our site:
   $code = Yii::$app->getRequest()->get('code');
   $accessToken = $oauthClient->fetchAccessToken($code); // Get access token




PROPERTY DETAILS
------------------------------------------------------------------------------

$version				*yii/authclient/OAuth2::$version*

 (string) Protocol version.

$apiBaseUrl				*yii/authclient/OAuth2::$apiBaseUrl*

 See |yii/authclient/BaseOAuth::$apiBaseUrl|

$authUrl				*yii/authclient/OAuth2::$authUrl*

 See |yii/authclient/BaseOAuth::$authUrl|

$scope					*yii/authclient/OAuth2::$scope*

 See |yii/authclient/BaseOAuth::$scope|

$autoRefreshAccessToken			*yii/authclient/OAuth2::$autoRefreshAccessToken*

 See |yii/authclient/BaseOAuth::$autoRefreshAccessToken|

$clientId				*yii/authclient/OAuth2::$clientId*

 (string) OAuth client ID.

$clientSecret				*yii/authclient/OAuth2::$clientSecret*

 (string) OAuth client secret.

$tokenUrl				*yii/authclient/OAuth2::$tokenUrl*

 (string) Token request URL endpoint.

$validateAuthState			*yii/authclient/OAuth2::$validateAuthState*

 (bool) Whether to use and validate auth 'state' parameter in authentication
 flow. If enabled 
   - the opaque value will be generated and applied to auth URL to
   maintain state between the request and callback. The authorization server
 includes this value, when redirecting the user-agent back to the client. The
 option is used for preventing cross-site request forgery.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/authclient/OAuth2::className*			public

 See |yii/base/BaseObject::className|


*yii/authclient/OAuth2::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/authclient/OAuth2::init*				public

 See |yii/base/BaseObject::init|


*yii/authclient/OAuth2::__get*				public

 See |yii/base/Component::__get|


*yii/authclient/OAuth2::__set*				public

 See |yii/base/Component::__set|


*yii/authclient/OAuth2::__isset*				public

 See |yii/base/Component::__isset|


*yii/authclient/OAuth2::__unset*				public

 See |yii/base/Component::__unset|


*yii/authclient/OAuth2::__call*				public

 See |yii/base/Component::__call|


*yii/authclient/OAuth2::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/authclient/OAuth2::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/authclient/OAuth2::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/authclient/OAuth2::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/authclient/OAuth2::__clone*				public

 See |yii/base/Component::__clone|


*yii/authclient/OAuth2::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/authclient/OAuth2::hasEventHandlers*			public

 See |yii/base/Component::hasEventHandlers|


*yii/authclient/OAuth2::on*				public

 See |yii/base/Component::on|


*yii/authclient/OAuth2::off*				public

 See |yii/base/Component::off|


*yii/authclient/OAuth2::trigger*				public

 See |yii/base/Component::trigger|


*yii/authclient/OAuth2::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/authclient/OAuth2::getBehaviors*			public

 See |yii/base/Component::getBehaviors|


*yii/authclient/OAuth2::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/authclient/OAuth2::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/authclient/OAuth2::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/authclient/OAuth2::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/authclient/OAuth2::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/authclient/OAuth2::setId*				public

 See |yii/authclient/ClientInterface::setId|


*yii/authclient/OAuth2::getId*				public

 See |yii/authclient/ClientInterface::getId|


*yii/authclient/OAuth2::setName*				public

 See |yii/authclient/ClientInterface::setName|


*yii/authclient/OAuth2::getName*				public

 See |yii/authclient/ClientInterface::getName|


*yii/authclient/OAuth2::setTitle*				public

 See |yii/authclient/ClientInterface::setTitle|


*yii/authclient/OAuth2::getTitle*				public

 See |yii/authclient/ClientInterface::getTitle|


*yii/authclient/OAuth2::setUserAttributes*		public

 See |yii/authclient/BaseClient::setUserAttributes|


*yii/authclient/OAuth2::getUserAttributes*		public

 See |yii/authclient/ClientInterface::getUserAttributes|


*yii/authclient/OAuth2::setNormalizeUserAttributeMap*	public

 See |yii/authclient/BaseClient::setNormalizeUserAttributeMap|


*yii/authclient/OAuth2::getNormalizeUserAttributeMap*	public

 See |yii/authclient/BaseClient::getNormalizeUserAttributeMap|


*yii/authclient/OAuth2::setViewOptions*			public

 See |yii/authclient/BaseClient::setViewOptions|


*yii/authclient/OAuth2::getViewOptions*			public

 See |yii/authclient/ClientInterface::getViewOptions|


*yii/authclient/OAuth2::getHttpClient*			public

 See |yii/authclient/BaseClient::getHttpClient|


*yii/authclient/OAuth2::setHttpClient*			public

 See |yii/authclient/BaseOAuth::setHttpClient|


*yii/authclient/OAuth2::setRequestOptions*		public

 See |yii/authclient/BaseClient::setRequestOptions|


*yii/authclient/OAuth2::getRequestOptions*		public

 See |yii/authclient/BaseClient::getRequestOptions|


*yii/authclient/OAuth2::getStateStorage*			public

 See |yii/authclient/BaseClient::getStateStorage|


*yii/authclient/OAuth2::setStateStorage*			public

 See |yii/authclient/BaseClient::setStateStorage|


*yii/authclient/OAuth2::defaultName*			protected

 See |yii/authclient/BaseClient::defaultName|


*yii/authclient/OAuth2::defaultTitle*			protected

 See |yii/authclient/BaseClient::defaultTitle|


*yii/authclient/OAuth2::initUserAttributes*		protected

 See |yii/authclient/BaseClient::initUserAttributes|


*yii/authclient/OAuth2::defaultNormalizeUserAttributeMap*	protected

 See |yii/authclient/BaseClient::defaultNormalizeUserAttributeMap|


*yii/authclient/OAuth2::defaultViewOptions*		protected

 See |yii/authclient/BaseClient::defaultViewOptions|


*yii/authclient/OAuth2::createHttpClient*			protected

 See |yii/authclient/BaseOAuth::createHttpClient|


*yii/authclient/OAuth2::normalizeUserAttributes*		protected

 See |yii/authclient/BaseClient::normalizeUserAttributes|


*yii/authclient/OAuth2::createRequest*			public

 See |yii/authclient/BaseClient::createRequest|


*yii/authclient/OAuth2::defaultRequestOptions*		protected

 See |yii/authclient/BaseOAuth::defaultRequestOptions|


*yii/authclient/OAuth2::setState*				protected

 See |yii/authclient/BaseClient::setState|


*yii/authclient/OAuth2::getState*				protected

 See |yii/authclient/BaseClient::getState|


*yii/authclient/OAuth2::removeState*			protected

 See |yii/authclient/BaseClient::removeState|


*yii/authclient/OAuth2::getStateKeyPrefix*		protected

 See |yii/authclient/BaseClient::getStateKeyPrefix|


*yii/authclient/OAuth2::setReturnUrl*			public

 See |yii/authclient/BaseOAuth::setReturnUrl|


*yii/authclient/OAuth2::getReturnUrl*			public

 See |yii/authclient/BaseOAuth::getReturnUrl|


*yii/authclient/OAuth2::setAccessToken*			public

 See |yii/authclient/BaseOAuth::setAccessToken|


*yii/authclient/OAuth2::getAccessToken*			public

 See |yii/authclient/BaseOAuth::getAccessToken|


*yii/authclient/OAuth2::setSignatureMethod*		public

 See |yii/authclient/BaseOAuth::setSignatureMethod|


*yii/authclient/OAuth2::getSignatureMethod*		public

 See |yii/authclient/BaseOAuth::getSignatureMethod|


*yii/authclient/OAuth2::defaultReturnUrl*			protected
>
 defaultReturnUrl()
<
return (string) Return URL.

 Composes default 'returnUrl' value.


*yii/authclient/OAuth2::createSignatureMethod*		protected

 See |yii/authclient/BaseOAuth::createSignatureMethod|


*yii/authclient/OAuth2::createToken*			protected
>
 createToken($tokenConfig='[]')
<
return (\yii\authclient\OAuthToken) Token instance.

 Creates token from its configuration.

    [$tokenConfig] (array) Token configuration.


*yii/authclient/OAuth2::sendRequest*			protected

 See |yii/authclient/BaseOAuth::sendRequest|


*yii/authclient/OAuth2::composeUrl*			protected

 See |yii/authclient/BaseOAuth::composeUrl|


*yii/authclient/OAuth2::saveAccessToken*			protected

 See |yii/authclient/BaseOAuth::saveAccessToken|


*yii/authclient/OAuth2::restoreAccessToken*		protected

 See |yii/authclient/BaseOAuth::restoreAccessToken|


*yii/authclient/OAuth2::createApiRequest*			public

 See |yii/authclient/BaseOAuth::createApiRequest|


*yii/authclient/OAuth2::beforeApiRequestSend*		public

 See |yii/authclient/BaseOAuth::beforeApiRequestSend|


*yii/authclient/OAuth2::api*				public

 See |yii/authclient/BaseOAuth::api|


*yii/authclient/OAuth2::refreshAccessToken*		public
>
 refreshAccessToken($token)
<
return (\yii\authclient\OAuthToken) New auth token.

 Gets new auth token to replace expired one.

    [$token] (\yii\authclient\OAuthToken) Expired auth token.


*yii/authclient/OAuth2::applyAccessTokenToRequest*	public
>
 applyAccessTokenToRequest($request, $accessToken)
<
return (void)

 {@inheritdoc}

    [$request] () 
    [$accessToken] () 


*yii/authclient/OAuth2::buildAuthUrl*			public
>
 buildAuthUrl($params='[]')
<
return (string) Authorization URL.

 Composes user authorization URL.

    [$params] (array) Additional auth GET params.


*yii/authclient/OAuth2::fetchAccessToken*			public
>
 fetchAccessToken($authCode, $params='[]')
<
return (\yii\authclient\OAuthToken) Access token.

 Fetches access token from authorization code.

    [$authCode] (string) Authorization code, usually comes at GET parameter
    'code'.
    [$params] (array) Additional request params.


*yii/authclient/OAuth2::applyClientCredentialsToRequest*	protected
>
 applyClientCredentialsToRequest($request)
<
return (void)

 Applies client credentials (e.g. 'clientId' and 'clientSecret') to the HTTP
 request instance.

 This method should be invoked before sending any HTTP request, which requires
 client credentials.

    [$request] (\yii\httpclient\Request) HTTP request instance.


*yii/authclient/OAuth2::generateAuthState*		protected
>
 generateAuthState()
<
return (string) Auth state value.

 Generates the auth state value.


*yii/authclient/OAuth2::authenticateClient*		public
>
 authenticateClient($params='[]')
<
return (\yii\authclient\OAuthToken) Access token.

 Authenticate OAuth client directly at the provider without third party (user)
 involved, using 'client_credentials' grant type.

    [$params] (array) Additional request params.


*yii/authclient/OAuth2::authenticateUser*			public
>
 authenticateUser($username, $password, $params='[]')
<
return (\yii\authclient\OAuthToken) Access token.

 Authenticates user directly by 'username/password' pair, using 'password'
 grant type.

    [$username] (string) User name.
    [$password] (string) User password.
    [$params] (array) Additional request params.


*yii/authclient/OAuth2::authenticateUserJwt*		public
>
 authenticateUserJwt($username, $signature='null', $options='[]', $params='[]')
<
return (\yii\authclient\OAuthToken) Access token.

 Authenticates user directly using JSON Web Token (JWT).

    [$username] (string) 
    [$signature] (\yii\authclient\signature\BaseMethod|array) Signature method
    or its array configuration. If empty 
      - 'signatureMethod' will be used.
    [$options] (array) Additional options. Valid options are:


      - header: array, additional JWS header parameters. 
      - payload: array, additional JWS payload (message or claim-set)
      parameters. 
      - signatureKey: string, signature key to be used, if not set -
      'clientSecret' will be used.
    [$params] (array) Additional request params.



 vim:tw=78:ts=8:ft=help:norl:
