
*yii/validators/SafeValidator*   >> |yii/validators/Validator|
==============================

DESCRIPTION
------------------------------------------------------------------------------

 This class is required because of the way in which Yii determines whether a
 property is safe for massive assignment, that is, when a user submits form
 data to be loaded into a model directly from the POST data, is it ok for a
 property to be copied. In many cases, this is required but because sometimes
 properties are internal and you do not want the POST data to be able to
 override these internal values (especially things like database row ids), Yii
 assumes all values are unsafe for massive assignment unless a validation rule
 exists for the property, which in most cases it will. Sometimes, however, an
 item is safe for massive assigment but does not have a validation rule
 associated with it 
   - for instance, due to no validation being performed, in which case,
   you use this class as a validation rule for that property. Although it has
 no functionality, it allows Yii to determine that the property is safe to
 copy.

 > Note: 'when' property is not supported by SafeValidator.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/validators/SafeValidator::className*			public

 See |yii/base/BaseObject::className|


*yii/validators/SafeValidator::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/validators/SafeValidator::init*			public

 See |yii/validators/Validator::init|


*yii/validators/SafeValidator::__get*			public

 See |yii/base/Component::__get|


*yii/validators/SafeValidator::__set*			public

 See |yii/base/Component::__set|


*yii/validators/SafeValidator::__isset*			public

 See |yii/base/Component::__isset|


*yii/validators/SafeValidator::__unset*			public

 See |yii/base/Component::__unset|


*yii/validators/SafeValidator::__call*			public

 See |yii/base/Component::__call|


*yii/validators/SafeValidator::hasProperty*		public

 See |yii/base/Component::hasProperty|


*yii/validators/SafeValidator::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/validators/SafeValidator::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/validators/SafeValidator::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/validators/SafeValidator::__clone*			public

 See |yii/base/Component::__clone|


*yii/validators/SafeValidator::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/validators/SafeValidator::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/validators/SafeValidator::on*			public

 See |yii/base/Component::on|


*yii/validators/SafeValidator::off*			public

 See |yii/base/Component::off|


*yii/validators/SafeValidator::trigger*			public

 See |yii/base/Component::trigger|


*yii/validators/SafeValidator::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/validators/SafeValidator::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/validators/SafeValidator::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/validators/SafeValidator::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/validators/SafeValidator::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/validators/SafeValidator::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/validators/SafeValidator::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/validators/SafeValidator::createValidator*		public

 See |yii/validators/Validator::createValidator|


*yii/validators/SafeValidator::validateAttributes*	public
>
 validateAttributes($model, $attributes='null')
<
return (void)







    [$model] (\yii\base\Model) The data model being validated
    [$attributes] (array|null) The list of attributes to be validated. Note
    that if an attribute is not associated with the validator 
      - it will be ignored. If this parameter is null, every attribute listed
    in 'attributes' will be validated.


*yii/validators/SafeValidator::validateAttribute*		public
>
 validateAttribute($model, $attribute)
<
return (void)



 Child classes must implement this method to provide the actual validation
 logic.



    [$model] (\yii\base\Model) The data model to be validated
    [$attribute] (string) The name of the attribute to be validated.


*yii/validators/SafeValidator::validate*			public

 See |yii/validators/Validator::validate|


*yii/validators/SafeValidator::validateValue*		protected

 See |yii/validators/Validator::validateValue|


*yii/validators/SafeValidator::clientValidateAttribute*	public

 See |yii/validators/Validator::clientValidateAttribute|


*yii/validators/SafeValidator::getClientOptions*		public

 See |yii/validators/Validator::getClientOptions|


*yii/validators/SafeValidator::isActive*			public

 See |yii/validators/Validator::isActive|


*yii/validators/SafeValidator::addError*			public

 See |yii/validators/Validator::addError|


*yii/validators/SafeValidator::isEmpty*			public

 See |yii/validators/Validator::isEmpty|


*yii/validators/SafeValidator::formatMessage*		protected

 See |yii/validators/Validator::formatMessage|


*yii/validators/SafeValidator::getAttributeNames*		public

 See |yii/validators/Validator::getAttributeNames|



 vim:tw=78:ts=8:ft=help:norl:
