
*yii/jui/InputWidget*   >> |yii/jui/Widget|
=====================

SUBCLASSES
------------------------------------------------------------------------------

|yii/jui/DatePicker|
|yii/jui/AutoComplete|
|yii/jui/Spinner|
|yii/jui/SliderInput|

DESCRIPTION
------------------------------------------------------------------------------

 Classes extending from this widget can be used in an
 'yii\widgets\ActiveForm|ActiveForm' using the
 'yii\widgets\ActiveField::widget()|widget()' method, for example like this:

   <?= $form->field($model, 'from_date')->widget('WidgetClassName', [
       // configure additional widget properties here
   ]) ?>




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Widget::$counter|
 |yii/base/Widget::$autoIdPrefix|
 |yii/base/Widget::$stack|
 |yii/jui/Widget::$options|
 |yii/jui/Widget::$clientOptions|
 |yii/jui/Widget::$clientEvents|
 |yii/jui/Widget::$clientEventMap|


$model					*yii/jui/InputWidget::$model*

 (\yii\base\Model) The data model that this widget is associated with.

$attribute				*yii/jui/InputWidget::$attribute*

 (string) The model attribute that this widget is associated with.

$name					*yii/jui/InputWidget::$name*

 (string) The input name. This must be set if 'model' and 'attribute' are not
 set.

$value					*yii/jui/InputWidget::$value*

 (string) The input value.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Widget::begin|
 |yii/base/Widget::end|
 |yii/base/Widget::widget|
 |yii/base/Widget::getId|
 |yii/base/Widget::setId|
 |yii/base/Widget::getView|
 |yii/base/Widget::setView|
 |yii/base/Widget::run|
 |yii/base/Widget::render|
 |yii/base/Widget::renderFile|
 |yii/base/Widget::getViewPath|
 |yii/base/Widget::beforeRun|
 |yii/base/Widget::afterRun|
 |yii/jui/Widget::registerClientOptions|
 |yii/jui/Widget::registerClientEvents|
 |yii/jui/Widget::registerWidget|


*yii/jui/InputWidget::init*				public
>
 init()
<
return (void)

 Initializes the widget.

 If you override this method, make sure you call the parent implementation
 first.


*yii/jui/InputWidget::hasModel*				protected
>
 hasModel()
<
return (bool) Whether this widget is associated with a data model.




 vim:tw=78:ts=8:ft=help:norl:
