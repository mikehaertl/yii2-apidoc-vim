
*yii/gii/generators/module/Generator*   >> |yii/gii/Generator|
=====================================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/gii/Generator::$templates|
 |yii/gii/Generator::$template|
 |yii/gii/Generator::$enableI18N|
 |yii/gii/Generator::$messageCategory|


$moduleClass				*yii/gii/generators/module/Generator::$moduleClass*

 ()

$moduleID				*yii/gii/generators/module/Generator::$moduleID*

 ()



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/gii/Generator::init|
 |yii/gii/Generator::stickyAttributes|
 |yii/gii/Generator::autoCompleteData|
 |yii/gii/Generator::formView|
 |yii/gii/Generator::defaultTemplate|
 |yii/gii/Generator::loadStickyAttributes|
 |yii/gii/Generator::saveStickyAttributes|
 |yii/gii/Generator::getStickyDataFile|
 |yii/gii/Generator::save|
 |yii/gii/Generator::getTemplatePath|
 |yii/gii/Generator::render|
 |yii/gii/Generator::validateTemplate|
 |yii/gii/Generator::validateClass|
 |yii/gii/Generator::validateNewClass|
 |yii/gii/Generator::validateMessageCategory|
 |yii/gii/Generator::isReservedKeyword|
 |yii/gii/Generator::generateString|


*yii/gii/generators/module/Generator::getName*		public
>
 getName()
<
return (string) Name of the code generator








*yii/gii/generators/module/Generator::generate*		public
>
 generate()
<
return (\yii\gii\CodeFile[]) A list of code files to be created.

 Generates the code based on the current user input and the specified code
 template files.



 This is the main method that child classes should implement. Please refer to
 '\yii\gii\generators\controller\Generator::generate()' as an example on how
 to implement this method.




*yii/gii/generators/module/Generator::attributeLabels*	public
>
 attributeLabels()
<
return (void)








*yii/gii/generators/module/Generator::requiredTemplates*	public
>
 requiredTemplates()
<
return (array) List of code template files that are required. They should be file
paths relative to 'templatePath'.

 Returns a list of code template files that are required.



 Derived classes usually should override this method if they require the
 existence of certain template files.




*yii/gii/generators/module/Generator::hints*		public
>
 hints()
<
return (array) The list of hint messages

 Returns the list of hint messages.



 The array keys are the attribute names, and the array values are the
 corresponding hint messages. Hint messages will be displayed to end users
 when they are filling the form for the generator.




*yii/gii/generators/module/Generator::successMessage*	public
>
 successMessage()
<
return (string) The message to be displayed when the newly generated code is saved
successfully.

 Returns the message to be displayed when the newly generated code is saved
 successfully.



 Child classes may override this method to customize the message.




*yii/gii/generators/module/Generator::getDescription*	public
>
 getDescription()
<
return (string) The detailed description of the generator.








*yii/gii/generators/module/Generator::rules*		public
>
 rules()
<
return (void)



 Child classes should override this method like the following so that the
 parent rules are included:

   return array_merge(parent::rules(), [
       ...rules for the child class...
   ]);




*yii/gii/generators/module/Generator::validateModuleClass*public
>
 validateModuleClass()
<
return (void)

 Validates 'moduleClass' to make sure it is a fully qualified class name.


*yii/gii/generators/module/Generator::getModulePath*	public
>
 getModulePath()
<
return (bool) The directory that contains the module class



*yii/gii/generators/module/Generator::getControllerNamespace*public
>
 getControllerNamespace()
<
return (string) The controller namespace of the module.




 vim:tw=78:ts=8:ft=help:norl:
