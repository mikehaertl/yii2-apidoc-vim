
*yii/db/ActiveQueryTrait*  
=========================


PROPERTY DETAILS
------------------------------------------------------------------------------

$modelClass				*yii/db/ActiveQueryTrait::$modelClass*
 (string) The name of the ActiveRecord class.

$with					*yii/db/ActiveQueryTrait::$with*
 (array) A list of relations that this query should be performed with

$asArray				*yii/db/ActiveQueryTrait::$asArray*
 (boolean) Whether to return each record as an array. If false (default), an
 object of 'modelClass' will be created to represent each record.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/db/ActiveQueryTrait::asArray*			public
>
 asArray($value='true')
<
($this) The query object itself

    [$value] (boolean) Whether to return the query results in terms of arrays
    instead of Active Records.


*yii/db/ActiveQueryTrait::with*				public
>
 with()
<
($this) The query object itself

 The parameters to this method can be either one or multiple strings, or a
 single array of relation names and the optional callbacks to customize the
 relations.

 A relation name can refer to a relation defined in 'modelClass' or a
 sub-relation that stands for a relation of a related record. For example,
 'orders.address' means the 'address' relation defined in the model class
 corresponding to the 'orders' relation.

 The following are some usage examples:

   // find customers together with their orders and country
   Customer::find()->with('orders', 'country')->all();
   // find customers together with their orders and the orders' shipping
 address
   Customer::find()->with('orders.address')->all();
   // find customers together with their country and orders of status 1
   Customer::find()->with([
       'orders' => function ($query) {
           $query->andWhere('status = 1');
       },
       'country',
   ])->all();

 You can call 'with()' multiple times. Each call will add relations to the
 existing ones. For example, the following two statements are equivalent:

   Customer::find()->with('orders', 'country')->all();
   Customer::find()->with('orders')->with('country')->all();




*yii/db/ActiveQueryTrait::findWith*			public
>
 findWith($with, $models)
<
(void)

    [$with] (array) A list of relations that this query should be performed
    with. Please refer to 'with()' for details about specifying this
    parameter.
    [$models] (array|\yii\db\ActiveRecord[]) The primary models (can be either
    AR instances or arrays)



 vim:tw=78:ts=8:ft=help:norl:
