
*yii/web/CacheSession*   >> |yii/web/Session|
======================

DESCRIPTION
------------------------------------------------------------------------------

 The cache being used can be any cache application component. The ID of the
 cache application component is specified via 'cache', which defaults to
 'cache'.

 Beware, by definition cache storage are volatile, which means the data stored
 on them may be swapped out and get lost. Therefore, you must make sure the
 cache used by this component is NOT volatile. If you want to use database as
 storage medium, 'DbSession' is a better choice.

 The following example shows how you can configure the application to use
 CacheSession: Add the following to your application config under
 'components':

   'session' => [
       'class' => 'yii\web\CacheSession',
       // 'cache' => 'mycache',
   ]




PROPERTY DETAILS
------------------------------------------------------------------------------

$flashParam				*yii/web/CacheSession::$flashParam*
 See |yii/web/Session::$flashParam|

$handler				*yii/web/CacheSession::$handler*
 See |yii/web/Session::$handler|

$cache					*yii/web/CacheSession::$cache*
 (\yii\caching\Cache|array|string) The cache object or the application
 component ID of the cache object. The session data will be stored using this
 cache object.

 After the CacheSession object is created, if you want to change this
 property, you should only assign it with a cache object.

 Starting from version 2.0.2, this can also be a configuration array for
 creating the object.

$behaviors				*yii/web/CacheSession::$behaviors*
 See |yii/base/Component::$behaviors|

$useCustomStorage			*yii/web/CacheSession::$useCustomStorage*
 (boolean) Whether to use custom storage.

$isActive				*yii/web/CacheSession::$isActive*
 See |yii/web/Session::$isActive|

$hasSessionId				*yii/web/CacheSession::$hasSessionId*
 See |yii/web/Session::$hasSessionId|

$id					*yii/web/CacheSession::$id*
 See |yii/web/Session::$id|

$name					*yii/web/CacheSession::$name*
 See |yii/web/Session::$name|

$savePath				*yii/web/CacheSession::$savePath*
 See |yii/web/Session::$savePath|

$cookieParams				*yii/web/CacheSession::$cookieParams*
 See |yii/web/Session::$cookieParams|

$useCookies				*yii/web/CacheSession::$useCookies*
 See |yii/web/Session::$useCookies|

$gCProbability				*yii/web/CacheSession::$gCProbability*
 See |yii/web/Session::$gCProbability|

$useTransparentSessionID		*yii/web/CacheSession::$useTransparentSessionID*
 See |yii/web/Session::$useTransparentSessionID|

$timeout				*yii/web/CacheSession::$timeout*
 See |yii/web/Session::$timeout|

$iterator				*yii/web/CacheSession::$iterator*
 See |yii/web/Session::$iterator|

$count					*yii/web/CacheSession::$count*
 See |yii/web/Session::$count|

$allFlashes				*yii/web/CacheSession::$allFlashes*
 See |yii/web/Session::$allFlashes|

$flash					*yii/web/CacheSession::$flash*
 See |yii/web/Session::$flash|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/web/CacheSession::className*				public
 See |yii/base/Object::className|


*yii/web/CacheSession::__construct*			public
 See |yii/base/Object::__construct|


*yii/web/CacheSession::init*				public
>
 init()
<
(void)



*yii/web/CacheSession::__get*				public
 See |yii/base/Component::__get|


*yii/web/CacheSession::__set*				public
 See |yii/base/Component::__set|


*yii/web/CacheSession::__isset*				public
 See |yii/base/Component::__isset|


*yii/web/CacheSession::__unset*				public
 See |yii/base/Component::__unset|


*yii/web/CacheSession::__call*				public
 See |yii/base/Component::__call|


*yii/web/CacheSession::hasProperty*			public
 See |yii/base/Component::hasProperty|


*yii/web/CacheSession::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/web/CacheSession::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/web/CacheSession::hasMethod*				public
 See |yii/base/Component::hasMethod|


*yii/web/CacheSession::__clone*				public
 See |yii/base/Component::__clone|


*yii/web/CacheSession::behaviors*				public
 See |yii/base/Component::behaviors|


*yii/web/CacheSession::hasEventHandlers*			public
 See |yii/base/Component::hasEventHandlers|


*yii/web/CacheSession::on*				public
 See |yii/base/Component::on|


*yii/web/CacheSession::off*				public
 See |yii/base/Component::off|


*yii/web/CacheSession::trigger*				public
 See |yii/base/Component::trigger|


*yii/web/CacheSession::getBehavior*			public
 See |yii/base/Component::getBehavior|


*yii/web/CacheSession::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/web/CacheSession::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/web/CacheSession::attachBehaviors*			public
 See |yii/base/Component::attachBehaviors|


*yii/web/CacheSession::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/web/CacheSession::detachBehaviors*			public
 See |yii/base/Component::detachBehaviors|


*yii/web/CacheSession::ensureBehaviors*			public
 See |yii/base/Component::ensureBehaviors|


*yii/web/CacheSession::getUseCustomStorage*		public
>
 getUseCustomStorage()
<
(boolean) Whether to use custom storage.

 This method overrides the parent implementation and always returns true.


*yii/web/CacheSession::open*				public
 See |yii/web/Session::open|


*yii/web/CacheSession::registerSessionHandler*		protected
 See |yii/web/Session::registerSessionHandler|


*yii/web/CacheSession::close*				public
 See |yii/web/Session::close|


*yii/web/CacheSession::destroy*				public
 See |yii/web/Session::destroy|


*yii/web/CacheSession::getIsActive*			public
 See |yii/web/Session::getIsActive|


*yii/web/CacheSession::getHasSessionId*			public
 See |yii/web/Session::getHasSessionId|


*yii/web/CacheSession::setHasSessionId*			public
 See |yii/web/Session::setHasSessionId|


*yii/web/CacheSession::getId*				public
 See |yii/web/Session::getId|


*yii/web/CacheSession::setId*				public
 See |yii/web/Session::setId|


*yii/web/CacheSession::regenerateID*			public
 See |yii/web/Session::regenerateID|


*yii/web/CacheSession::getName*				public
 See |yii/web/Session::getName|


*yii/web/CacheSession::setName*				public
 See |yii/web/Session::setName|


*yii/web/CacheSession::getSavePath*			public
 See |yii/web/Session::getSavePath|


*yii/web/CacheSession::setSavePath*			public
 See |yii/web/Session::setSavePath|


*yii/web/CacheSession::getCookieParams*			public
 See |yii/web/Session::getCookieParams|


*yii/web/CacheSession::setCookieParams*			public
 See |yii/web/Session::setCookieParams|


*yii/web/CacheSession::getUseCookies*			public
 See |yii/web/Session::getUseCookies|


*yii/web/CacheSession::setUseCookies*			public
 See |yii/web/Session::setUseCookies|


*yii/web/CacheSession::getGCProbability*			public
 See |yii/web/Session::getGCProbability|


*yii/web/CacheSession::setGCProbability*			public
 See |yii/web/Session::setGCProbability|


*yii/web/CacheSession::getUseTransparentSessionID*	public
 See |yii/web/Session::getUseTransparentSessionID|


*yii/web/CacheSession::setUseTransparentSessionID*	public
 See |yii/web/Session::setUseTransparentSessionID|


*yii/web/CacheSession::getTimeout*			public
 See |yii/web/Session::getTimeout|


*yii/web/CacheSession::setTimeout*			public
 See |yii/web/Session::setTimeout|


*yii/web/CacheSession::openSession*			public
 See |yii/web/Session::openSession|


*yii/web/CacheSession::closeSession*			public
 See |yii/web/Session::closeSession|


*yii/web/CacheSession::readSession*			public
>
 readSession($id)
<
(string) The session data

 Do not call this method directly.
    [$id] (string) Session ID


*yii/web/CacheSession::writeSession*			public
>
 writeSession($id, $data)
<
(boolean) Whether session write is successful

 Do not call this method directly.
    [$id] (string) Session ID
    [$data] (string) Session data


*yii/web/CacheSession::destroySession*			public
>
 destroySession($id)
<
(boolean) Whether session is destroyed successfully

 Do not call this method directly.
    [$id] (string) Session ID


*yii/web/CacheSession::gcSession*				public
 See |yii/web/Session::gcSession|


*yii/web/CacheSession::getIterator*			public
 See |yii/web/Session::getIterator|


*yii/web/CacheSession::getCount*				public
 See |yii/web/Session::getCount|


*yii/web/CacheSession::count*				public
 See |yii/web/Session::count|


*yii/web/CacheSession::get*				public
 See |yii/web/Session::get|


*yii/web/CacheSession::set*				public
 See |yii/web/Session::set|


*yii/web/CacheSession::remove*				public
 See |yii/web/Session::remove|


*yii/web/CacheSession::removeAll*				public
 See |yii/web/Session::removeAll|


*yii/web/CacheSession::has*				public
 See |yii/web/Session::has|


*yii/web/CacheSession::updateFlashCounters*		protected
 See |yii/web/Session::updateFlashCounters|


*yii/web/CacheSession::getFlash*				public
 See |yii/web/Session::getFlash|


*yii/web/CacheSession::getAllFlashes*			public
 See |yii/web/Session::getAllFlashes|


*yii/web/CacheSession::setFlash*				public
 See |yii/web/Session::setFlash|


*yii/web/CacheSession::addFlash*				public
 See |yii/web/Session::addFlash|


*yii/web/CacheSession::removeFlash*			public
 See |yii/web/Session::removeFlash|


*yii/web/CacheSession::removeAllFlashes*			public
 See |yii/web/Session::removeAllFlashes|


*yii/web/CacheSession::hasFlash*				public
 See |yii/web/Session::hasFlash|


*yii/web/CacheSession::offsetExists*			public
 See |yii/web/Session::offsetExists|


*yii/web/CacheSession::offsetGet*				public
 See |yii/web/Session::offsetGet|


*yii/web/CacheSession::offsetSet*				public
 See |yii/web/Session::offsetSet|


*yii/web/CacheSession::offsetUnset*			public
 See |yii/web/Session::offsetUnset|


*yii/web/CacheSession::calculateKey*			protected
>
 calculateKey($id)
<
(mixed) A safe cache key associated with the session variable name

    [$id] (string) Session variable name



 vim:tw=78:ts=8:ft=help:norl:
