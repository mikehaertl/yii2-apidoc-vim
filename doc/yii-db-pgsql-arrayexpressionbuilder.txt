
*yii/db/pgsql/ArrayExpressionBuilder*  
=====================================



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/db/ExpressionBuilderTrait::__construct|


*yii/db/pgsql/ArrayExpressionBuilder::build*		public
>
 build($expression, $params='[]')
<
return (string) The raw SQL that will not be additionally escaped or quoted.

 Method builds the raw SQL from the $expression that will not be additionally
 escaped or quoted.







    [$expression] (\yii\db\ArrayExpression|\yii\db\ExpressionInterface) The
    expression to be built
    [$params] (array) The binding parameters.


*yii/db/pgsql/ArrayExpressionBuilder::buildPlaceholders*	protected
>
 buildPlaceholders($expression, $params)
<
return (array) 

 Builds placeholders array out of $expression values

    [$expression] (\yii\db\ExpressionInterface|\yii\db\ArrayExpression) 
    [$params] (array) The binding parameters.


*yii/db/pgsql/ArrayExpressionBuilder::getTypehint*	protected
>
 getTypehint($expression)
<
return (string) The typecast expression based on 'type'.

    [$expression] (\yii\db\ArrayExpression) 


*yii/db/pgsql/ArrayExpressionBuilder::buildSubqueryArray*	protected
>
 buildSubqueryArray($sql, $expression)
<
return (string) The subquery array expression.

 Build an array expression from a subquery SQL.

    [$sql] (string) The subquery SQL.
    [$expression] (\yii\db\ArrayExpression) 


*yii/db/pgsql/ArrayExpressionBuilder::typecastValue*	protected
>
 typecastValue($expression, $value)
<
return (\yii\db\JsonExpression) 

 Casts $value to use in $expression

    [$expression] (\yii\db\ArrayExpression) 
    [$value] (mixed) 



 vim:tw=78:ts=8:ft=help:norl:
