
*yii/behaviors/BlameableBehavior*   >> |yii/behaviors/AttributeBehavior|
=================================

DESCRIPTION
------------------------------------------------------------------------------

 To use BlameableBehavior, insert the following code to your ActiveRecord
 class:

   use yii\behaviors\BlameableBehavior;

   public function behaviors()
   {
       return [
           BlameableBehavior::className(),
       ];
   }

 By default, BlameableBehavior will fill the 'created_by' and 'updated_by'
 attributes with the current user ID when the associated AR object is being
 inserted; it will fill the 'updated_by' attribute with the current user ID
 when the AR object is being updated.

 Because attribute values will be set automatically by this behavior, they are
 usually not user input and should therefore not be validated, i.e.
 'created_by' and 'updated_by' should not appear in the
 '\yii\base\Model::rules()|rules()' method of the model.

 If your attribute names are different, you may configure the
 'createdByAttribute' and 'updatedByAttribute' properties like the following:

   public function behaviors()
   {
       return [
           [
               'class' => BlameableBehavior::className(),
               'createdByAttribute' => 'author_id',
               'updatedByAttribute' => 'updater_id',
           ],
       ];
   }




PROPERTY DETAILS
------------------------------------------------------------------------------

$owner					*yii/behaviors/BlameableBehavior::$owner*

 See |yii/base/Behavior::$owner|

$attributes				*yii/behaviors/BlameableBehavior::$attributes*

 See |yii/behaviors/AttributeBehavior::$attributes|

$value					*yii/behaviors/BlameableBehavior::$value*

 (mixed) 

 The value that will be assigned to the current attributes. This can be an
 anonymous function, callable in array format (e.g. '[$this, 'methodName']'),
 an '\yii\db\Expression|Expression' object representing a DB expression (e.g.
 'new Expression('NOW()')'), scalar, string or an arbitrary value. If the
 former, the return value of the function will be assigned to the attributes.
 The signature of the function should be as follows,

   function ($event)
   {
       // return value will be assigned to the attribute
   }

 In case, when the property is 'null', the value of 'Yii::$app->user->id' will
 be used as the value.

$skipUpdateOnClean			*yii/behaviors/BlameableBehavior::$skipUpdateOnClean*

 See |yii/behaviors/AttributeBehavior::$skipUpdateOnClean|

$preserveNonEmptyValues			*yii/behaviors/BlameableBehavior::$preserveNonEmptyValues*

 See |yii/behaviors/AttributeBehavior::$preserveNonEmptyValues|

$createdByAttribute			*yii/behaviors/BlameableBehavior::$createdByAttribute*

 (string) The attribute that will receive current user ID value Set this
 property to false if you do not want to record the creator ID.

$updatedByAttribute			*yii/behaviors/BlameableBehavior::$updatedByAttribute*

 (string) The attribute that will receive current user ID value Set this
 property to false if you do not want to record the updater ID.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/behaviors/BlameableBehavior::className*		public

 See |yii/base/BaseObject::className|


*yii/behaviors/BlameableBehavior::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/behaviors/BlameableBehavior::init*			public
>
 init()
<
return (void)



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/behaviors/BlameableBehavior::__get*			public

 See |yii/base/BaseObject::__get|


*yii/behaviors/BlameableBehavior::__set*			public

 See |yii/base/BaseObject::__set|


*yii/behaviors/BlameableBehavior::__isset*		public

 See |yii/base/BaseObject::__isset|


*yii/behaviors/BlameableBehavior::__unset*		public

 See |yii/base/BaseObject::__unset|


*yii/behaviors/BlameableBehavior::__call*			public

 See |yii/base/BaseObject::__call|


*yii/behaviors/BlameableBehavior::hasProperty*		public

 See |yii/base/BaseObject::hasProperty|


*yii/behaviors/BlameableBehavior::canGetProperty*		public

 See |yii/base/BaseObject::canGetProperty|


*yii/behaviors/BlameableBehavior::canSetProperty*		public

 See |yii/base/BaseObject::canSetProperty|


*yii/behaviors/BlameableBehavior::hasMethod*		public

 See |yii/base/BaseObject::hasMethod|


*yii/behaviors/BlameableBehavior::events*			public

 See |yii/behaviors/AttributeBehavior::events|


*yii/behaviors/BlameableBehavior::attach*			public

 See |yii/base/Behavior::attach|


*yii/behaviors/BlameableBehavior::detach*			public

 See |yii/base/Behavior::detach|


*yii/behaviors/BlameableBehavior::evaluateAttributes*	public

 See |yii/behaviors/AttributeBehavior::evaluateAttributes|


*yii/behaviors/BlameableBehavior::getValue*		protected
>
 getValue($event)
<
return (mixed) The attribute value



 This method is called by 'evaluateAttributes()'. Its return value will be
 assigned to the attributes corresponding to the triggering event.

 In case, when the 'value' property is 'null', the value of
 'Yii::$app->user->id' will be used as the value.

    [$event] (\yii\base\Event) The event that triggers the current attribute
    updating.



 vim:tw=78:ts=8:ft=help:norl:
