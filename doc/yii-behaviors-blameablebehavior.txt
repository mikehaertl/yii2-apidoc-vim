
*yii/behaviors/BlameableBehavior*   >> |yii/behaviors/AttributeBehavior|
=================================

DESCRIPTION
------------------------------------------------------------------------------

 To use BlameableBehavior, simply insert the following code to your
 ActiveRecord class:

   use yii\behaviors\BlameableBehavior;

   public function behaviors()
   {
       return [
           BlameableBehavior::className(),
       ];
   }

 By default, BlameableBehavior will fill the 'created_by' and 'updated_by'
 attributes with the current user ID when the associated AR object is being
 inserted; it will fill the 'updated_by' attribute with the current user ID
 when the AR object is being updated. If your attribute names are different,
 you may configure the 'attributes' property like the following:

   public function behaviors()
   {
       return [
           [
               'class' => BlameableBehavior::className(),
               'attributes' => [
                   ActiveRecord::EVENT_BEFORE_INSERT => 'author_id',
                   ActiveRecord::EVENT_BEFORE_UPDATE => 'updater_id',
               ],
           ],
       ];
   }




PROPERTY DETAILS
------------------------------------------------------------------------------

$owner					*yii/behaviors/BlameableBehavior::$owner*
 See |yii/base/Behavior::$owner|

$attributes				*yii/behaviors/BlameableBehavior::$attributes*
 (array) List of attributes that are to be automatically filled with the
 current user ID. The array keys are the ActiveRecord events upon which the
 attributes are to be filled with the user ID, and the array values are the
 corresponding attribute(s) to be updated. You can use a string to represent a
 single attribute, or an array to represent a list of attributes. The default
 setting is to update both of the 'created_by' and 'updated_by' attributes
 upon AR insertion, and update the 'updated_by' attribute upon AR updating.

$value					*yii/behaviors/BlameableBehavior::$value*
 (callable) The value that will be assigned to the attributes. This should be
 a valid PHP callable whose return value will be assigned to the current
 attribute(s). The signature of the callable should be:

   function ($event) {
       // return value will be assigned to the attribute(s)
   }

 If this property is not set, the value of 'Yii::$app->user->id' will be
 assigned to the attribute(s).



METHOD DETAILS
------------------------------------------------------------------------------

*yii/behaviors/BlameableBehavior::className*		public
 See |yii/base/Object::className|


*yii/behaviors/BlameableBehavior::__construct*		public
 See |yii/base/Object::__construct|


*yii/behaviors/BlameableBehavior::init*			public
 See |yii/base/Object::init|


*yii/behaviors/BlameableBehavior::__get*			public
 See |yii/base/Object::__get|


*yii/behaviors/BlameableBehavior::__set*			public
 See |yii/base/Object::__set|


*yii/behaviors/BlameableBehavior::__isset*		public
 See |yii/base/Object::__isset|


*yii/behaviors/BlameableBehavior::__unset*		public
 See |yii/base/Object::__unset|


*yii/behaviors/BlameableBehavior::__call*			public
 See |yii/base/Object::__call|


*yii/behaviors/BlameableBehavior::hasProperty*		public
 See |yii/base/Object::hasProperty|


*yii/behaviors/BlameableBehavior::canGetProperty*		public
 See |yii/base/Object::canGetProperty|


*yii/behaviors/BlameableBehavior::canSetProperty*		public
 See |yii/base/Object::canSetProperty|


*yii/behaviors/BlameableBehavior::hasMethod*		public
 See |yii/base/Object::hasMethod|


*yii/behaviors/BlameableBehavior::events*			public
 See |yii/behaviors/AttributeBehavior::events|


*yii/behaviors/BlameableBehavior::attach*			public
 See |yii/base/Behavior::attach|


*yii/behaviors/BlameableBehavior::detach*			public
 See |yii/base/Behavior::detach|


*yii/behaviors/BlameableBehavior::evaluateAttributes*	public
 See |yii/behaviors/AttributeBehavior::evaluateAttributes|


*yii/behaviors/BlameableBehavior::getValue*		protected
>
 getValue($event)
<
(mixed) The value of the user.

 The return result of this method will be assigned to the current
 attribute(s).
    [$event] (\yii\base\Event) 



 vim:tw=78:ts=8:ft=help:norl:
