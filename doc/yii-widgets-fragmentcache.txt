
*yii/widgets/FragmentCache*   >> |yii/base/Widget|
===========================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Widget::$counter|
 |yii/base/Widget::$autoIdPrefix|
 |yii/base/Widget::$stack|


$cache					*yii/widgets/FragmentCache::$cache*

 (\yii\caching\CacheInterface|array|string) The cache object or the
 application component ID of the cache object. After the FragmentCache object
 is created, if you want to change this property, you should only assign it
 with a cache object. Starting from version 2.0.2, this can also be a
 configuration array for creating the object.

$duration				*yii/widgets/FragmentCache::$duration*

 (int) Number of seconds that the data can remain valid in cache. Use 0 to
 indicate that the cached data will never expire.

$dependency				*yii/widgets/FragmentCache::$dependency*

 (array|\yii\caching\Dependency) The dependency that the cached content
 depends on. This can be either a 'Dependency' object or a configuration array
 for creating the dependency object. For example,

   [
       'class' => 'yii\caching\DbDependency',
       'sql' => 'SELECT MAX(updated_at) FROM post',
   ]

 would make the output cache depends on the last modified time of all posts.
 If any post has its modification time changed, the cached content would be
 invalidated.

$variations				*yii/widgets/FragmentCache::$variations*

 (string[]|string) List of factors that would cause the variation of the
 content being cached. Each factor is a string representing a variation (e.g.
 the language, a GET parameter). The following variation setting will cause
 the content to be cached in different versions according to the current
 application language:

   [
       Yii::$app->language,
   ]



$enabled				*yii/widgets/FragmentCache::$enabled*

 (bool) Whether to enable the fragment cache. You may use this property to
 turn on and off the fragment cache according to specific setting (e.g. enable
 fragment cache only for GET requests).



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Widget::begin|
 |yii/base/Widget::end|
 |yii/base/Widget::widget|
 |yii/base/Widget::getId|
 |yii/base/Widget::setId|
 |yii/base/DynamicContentAwareTrait::getView|
 |yii/base/Widget::setView|
 |yii/base/Widget::render|
 |yii/base/Widget::renderFile|
 |yii/base/Widget::getViewPath|
 |yii/base/Widget::beforeRun|
 |yii/base/Widget::afterRun|
 |yii/base/DynamicContentAwareTrait::getDynamicPlaceholders|
 |yii/base/DynamicContentAwareTrait::setDynamicPlaceholders|
 |yii/base/DynamicContentAwareTrait::addDynamicPlaceholder|
 |yii/base/DynamicContentAwareTrait::updateDynamicContent|


*yii/widgets/FragmentCache::init*				public
>
 init()
<
return (void)

 Initializes the FragmentCache object.


*yii/widgets/FragmentCache::run*				public
>
 run()
<
return (void)

 Marks the end of content to be cached.

 Content displayed before this method call and after 'init()' will be captured
 and saved in cache. This method does nothing if valid content is already
 found in cache.


*yii/widgets/FragmentCache::getCachedContent*		public
>
 getCachedContent()
<
return (string|false) The cached content. False is returned if valid content is not
found in the cache.

 Returns the cached content if available.


*yii/widgets/FragmentCache::calculateKey*			protected
>
 calculateKey()
<
return (mixed) A valid cache key

 Generates a unique key used for storing the content in cache.

 The key generated depends on both 'id' and 'variations'.



 vim:tw=78:ts=8:ft=help:norl:
