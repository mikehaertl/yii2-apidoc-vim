
*yii/log/EmailTarget*   >> |yii/log/Target|
=====================

DESCRIPTION
------------------------------------------------------------------------------

 You may configure the email to be sent by setting the 'message' property,
 through which you can set the target email addresses, subject, etc.:

   'components' => [
       'log' => [
            'targets' => [
                [
                    'class' => 'yii\log\EmailTarget',
                    'mailer' => 'mailer',
                    'levels' => ['error', 'warning'],
                    'message' => [
                        'from' => ['log@example.com'],
                        'to' => ['developer1@example.com',
 'developer2@example.com'],
                        'subject' => 'Log message',
                    ],
                ],
            ],
       ],
   ],

 In the above 'mailer' is ID of the component that sends email and should be
 already configured.


PROPERTY DETAILS
------------------------------------------------------------------------------

$categories				*yii/log/EmailTarget::$categories*

 See |yii/log/Target::$categories|

$except					*yii/log/EmailTarget::$except*

 See |yii/log/Target::$except|

$logVars				*yii/log/EmailTarget::$logVars*

 See |yii/log/Target::$logVars|

$prefix					*yii/log/EmailTarget::$prefix*

 See |yii/log/Target::$prefix|

$exportInterval				*yii/log/EmailTarget::$exportInterval*

 See |yii/log/Target::$exportInterval|

$messages				*yii/log/EmailTarget::$messages*

 See |yii/log/Target::$messages|

$microtime				*yii/log/EmailTarget::$microtime*

 See |yii/log/Target::$microtime|

$message				*yii/log/EmailTarget::$message*

 (array) The configuration array for creating a
 '\yii\mail\MessageInterface|message' object. Note that the "to" option must
 be set, which specifies the destination email address(es).

$mailer					*yii/log/EmailTarget::$mailer*

 (\yii\mail\MailerInterface|array|string) The mailer object or the application
 component ID of the mailer object. After the EmailTarget object is created,
 if you want to change this property, you should only assign it with a mailer
 object. Starting from version 2.0.2, this can also be a configuration array
 for creating the object.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/log/EmailTarget::className*				public

 See |yii/base/BaseObject::className|


*yii/log/EmailTarget::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/log/EmailTarget::init*				public
>
 init()
<
return (void)



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/log/EmailTarget::__get*				public

 See |yii/base/Component::__get|


*yii/log/EmailTarget::__set*				public

 See |yii/base/Component::__set|


*yii/log/EmailTarget::__isset*				public

 See |yii/base/Component::__isset|


*yii/log/EmailTarget::__unset*				public

 See |yii/base/Component::__unset|


*yii/log/EmailTarget::__call*				public

 See |yii/base/Component::__call|


*yii/log/EmailTarget::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/log/EmailTarget::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/log/EmailTarget::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/log/EmailTarget::hasMethod*				public

 See |yii/base/Component::hasMethod|


*yii/log/EmailTarget::__clone*				public

 See |yii/base/Component::__clone|


*yii/log/EmailTarget::behaviors*				public

 See |yii/base/Component::behaviors|


*yii/log/EmailTarget::hasEventHandlers*			public

 See |yii/base/Component::hasEventHandlers|


*yii/log/EmailTarget::on*					public

 See |yii/base/Component::on|


*yii/log/EmailTarget::off*				public

 See |yii/base/Component::off|


*yii/log/EmailTarget::trigger*				public

 See |yii/base/Component::trigger|


*yii/log/EmailTarget::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/log/EmailTarget::getBehaviors*			public

 See |yii/base/Component::getBehaviors|


*yii/log/EmailTarget::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/log/EmailTarget::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/log/EmailTarget::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/log/EmailTarget::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/log/EmailTarget::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/log/EmailTarget::export*				public
>
 export()
<
return (void)



*yii/log/EmailTarget::collect*				public

 See |yii/log/Target::collect|


*yii/log/EmailTarget::getContextMessage*			protected

 See |yii/log/Target::getContextMessage|


*yii/log/EmailTarget::getLevels*				public

 See |yii/log/Target::getLevels|


*yii/log/EmailTarget::setLevels*				public

 See |yii/log/Target::setLevels|


*yii/log/EmailTarget::filterMessages*			public

 See |yii/log/Target::filterMessages|


*yii/log/EmailTarget::formatMessage*			public

 See |yii/log/Target::formatMessage|


*yii/log/EmailTarget::getMessagePrefix*			public

 See |yii/log/Target::getMessagePrefix|


*yii/log/EmailTarget::setEnabled*				public

 See |yii/log/Target::setEnabled|


*yii/log/EmailTarget::getEnabled*				public

 See |yii/log/Target::getEnabled|


*yii/log/EmailTarget::getTime*				protected

 See |yii/log/Target::getTime|


*yii/log/EmailTarget::composeMessage*			protected
>
 composeMessage($body)
<
return (\yii\mail\MessageInterface) $message

    [$body] (string) The body content



 vim:tw=78:ts=8:ft=help:norl:
