
*yii/log/EmailTarget*   >> |yii/log/Target|
=====================

DESCRIPTION
------------------------------------------------------------------------------

 You may configure the email to be sent by setting the 'message' property,
 through which you can set the target email addresses, subject, etc.:

   'components' => [
       'log' => [
            'targets' => [
                [
                    'class' => 'yii\log\EmailTarget',
                    'mailer' => 'mailer',
                    'levels' => ['error', 'warning'],
                    'message' => [
                        'from' => ['log@example.com'],
                        'to' => ['developer1@example.com',
 'developer2@example.com'],
                        'subject' => 'Log message',
                    ],
                ],
            ],
       ],
   ],

 In the above 'mailer' is ID of the component that sends email and should be
 already configured.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/log/Target::$categories|
 |yii/log/Target::$except|
 |yii/log/Target::$logVars|
 |yii/log/Target::$prefix|
 |yii/log/Target::$exportInterval|
 |yii/log/Target::$messages|
 |yii/log/Target::$microtime|


$message				*yii/log/EmailTarget::$message*

 (array) The configuration array for creating a
 '\yii\mail\MessageInterface|message' object. Note that the "to" option must
 be set, which specifies the destination email address(es).

$mailer					*yii/log/EmailTarget::$mailer*

 (\yii\mail\MailerInterface|array|string) The mailer object or the application
 component ID of the mailer object. After the EmailTarget object is created,
 if you want to change this property, you should only assign it with a mailer
 object. Starting from version 2.0.2, this can also be a configuration array
 for creating the object.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/log/Target::collect|
 |yii/log/Target::getContextMessage|
 |yii/log/Target::getLevels|
 |yii/log/Target::setLevels|
 |yii/log/Target::filterMessages|
 |yii/log/Target::formatMessage|
 |yii/log/Target::getMessagePrefix|
 |yii/log/Target::setEnabled|
 |yii/log/Target::getEnabled|
 |yii/log/Target::getTime|


*yii/log/EmailTarget::init*				public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/log/EmailTarget::export*				public
>
 export()
<
return (void)

 Sends log messages to specified email addresses.

 Starting from version 2.0.14, this method throws LogRuntimeException in case
 the log can not be exported.


*yii/log/EmailTarget::composeMessage*			protected
>
 composeMessage($body)
<
return (\yii\mail\MessageInterface) $message

 Composes a mail message with the given body content.

    [$body] (string) The body content



 vim:tw=78:ts=8:ft=help:norl:
