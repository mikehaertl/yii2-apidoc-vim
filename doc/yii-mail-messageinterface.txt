
*yii/mail/MessageInterface*  
===========================

DESCRIPTION
------------------------------------------------------------------------------

 A message represents the settings and content of an email, such as the
 sender, recipient, subject, body, etc.

 Messages are sent by a '\yii\mail\MailerInterface|mailer', like the
 following,

   Yii::$app->mailer->compose()
       ->setFrom('from@domain.com')
       ->setTo($form->email)
       ->setSubject($form->subject)
       ->setTextBody('Plain text content')
       ->setHtmlBody('<b>HTML content</b>')
       ->send();





METHOD DETAILS
------------------------------------------------------------------------------


*yii/mail/MessageInterface::getCharset*			public
>
 getCharset()
<
return (string) The character set of this message.

 Returns the character set of this message.


*yii/mail/MessageInterface::setCharset*			public
>
 setCharset($charset)
<
return ($this) Self reference.

 Sets the character set of this message.

    [$charset] (string) Character set name.


*yii/mail/MessageInterface::getFrom*			public
>
 getFrom()
<
return (string|array) The sender

 Returns the message sender.


*yii/mail/MessageInterface::setFrom*			public
>
 setFrom($from)
<
return ($this) Self reference.

 Sets the message sender.

    [$from] (string|array) Sender email address. You may pass an array of
    addresses if this message is from multiple people. You may also specify
    sender name in addition to email address using format: '[email => name]'.


*yii/mail/MessageInterface::getTo*			public
>
 getTo()
<
return (string|array) The message recipients

 Returns the message recipient(s).


*yii/mail/MessageInterface::setTo*			public
>
 setTo($to)
<
return ($this) Self reference.

 Sets the message recipient(s).

    [$to] (string|array) Receiver email address. You may pass an array of
    addresses if multiple recipients should receive this message. You may also
    specify receiver name in addition to email address using format: '[email
    => name]'.


*yii/mail/MessageInterface::getReplyTo*			public
>
 getReplyTo()
<
return (string|array) The reply-to address of this message.

 Returns the reply-to address of this message.


*yii/mail/MessageInterface::setReplyTo*			public
>
 setReplyTo($replyTo)
<
return ($this) Self reference.

 Sets the reply-to address of this message.

    [$replyTo] (string|array) The reply-to address. You may pass an array of
    addresses if this message should be replied to multiple people. You may
    also specify reply-to name in addition to email address using format:
    '[email => name]'.


*yii/mail/MessageInterface::getCc*			public
>
 getCc()
<
return (string|array) The Cc (additional copy receiver) addresses of this message.

 Returns the Cc (additional copy receiver) addresses of this message.


*yii/mail/MessageInterface::setCc*			public
>
 setCc($cc)
<
return ($this) Self reference.

 Sets the Cc (additional copy receiver) addresses of this message.

    [$cc] (string|array) Copy receiver email address. You may pass an array of
    addresses if multiple recipients should receive this message. You may also
    specify receiver name in addition to email address using format: '[email
    => name]'.


*yii/mail/MessageInterface::getBcc*			public
>
 getBcc()
<
return (string|array) The Bcc (hidden copy receiver) addresses of this message.

 Returns the Bcc (hidden copy receiver) addresses of this message.


*yii/mail/MessageInterface::setBcc*			public
>
 setBcc($bcc)
<
return ($this) Self reference.

 Sets the Bcc (hidden copy receiver) addresses of this message.

    [$bcc] (string|array) Hidden copy receiver email address. You may pass an
    array of addresses if multiple recipients should receive this message. You
    may also specify receiver name in addition to email address using format:
    '[email => name]'.


*yii/mail/MessageInterface::getSubject*			public
>
 getSubject()
<
return (string) The message subject

 Returns the message subject.


*yii/mail/MessageInterface::setSubject*			public
>
 setSubject($subject)
<
return ($this) Self reference.

 Sets the message subject.

    [$subject] (string) Message subject


*yii/mail/MessageInterface::setTextBody*			public
>
 setTextBody($text)
<
return ($this) Self reference.

 Sets message plain text content.

    [$text] (string) Message plain text content.


*yii/mail/MessageInterface::setHtmlBody*			public
>
 setHtmlBody($html)
<
return ($this) Self reference.

 Sets message HTML content.

    [$html] (string) Message HTML content.


*yii/mail/MessageInterface::attach*			public
>
 attach($fileName, $options='[]')
<
return ($this) Self reference.

 Attaches existing file to the email message.

    [$fileName] (string) Full file name
    [$options] (array) Options for embed file. Valid options are:


      - fileName: name, which should be used to attach file. 
      - contentType: attached file MIME type.


*yii/mail/MessageInterface::attachContent*		public
>
 attachContent($content, $options='[]')
<
return ($this) Self reference.

 Attach specified content as file for the email message.

    [$content] (string) Attachment file content.
    [$options] (array) Options for embed file. Valid options are:


      - fileName: name, which should be used to attach file. 
      - contentType: attached file MIME type.


*yii/mail/MessageInterface::embed*			public
>
 embed($fileName, $options='[]')
<
return (string) Attachment CID.

 Attach a file and return it's CID source.

 This method should be used when embedding images or other data in a message.

    [$fileName] (string) File name.
    [$options] (array) Options for embed file. Valid options are:


      - fileName: name, which should be used to attach file. 
      - contentType: attached file MIME type.


*yii/mail/MessageInterface::embedContent*			public
>
 embedContent($content, $options='[]')
<
return (string) Attachment CID.

 Attach a content as file and return it's CID source.

 This method should be used when embedding images or other data in a message.

    [$content] (string) Attachment file content.
    [$options] (array) Options for embed file. Valid options are:


      - fileName: name, which should be used to attach file. 
      - contentType: attached file MIME type.


*yii/mail/MessageInterface::send*				public
>
 send($mailer='null')
<
return (bool) Whether this message is sent successfully.

 Sends this email message.

    [$mailer] (\yii\mail\MailerInterface) The mailer that should be used to
    send this message. If null, the "mailer" application component will be
    used instead.


*yii/mail/MessageInterface::toString*			public
>
 toString()
<
return (string) The string representation of this message.

 Returns string representation of this message.



 vim:tw=78:ts=8:ft=help:norl:
