
*yii\web\HeaderCollection*   >> yii\base\Object
==========================




PROPERTY DETAILS
------------------------------------------------------------------------------

<$iterator>				*yii\web\HeaderCollection::$iterator*
 (\ArrayIterator) An iterator for traversing the headers in the collection.

<$count>				*yii\web\HeaderCollection::$count*
 (integer) The number of headers in the collection.

<$>					*yii\web\HeaderCollection::$*
 (string) The name of the header



METHOD DETAILS
------------------------------------------------------------------------------

*yii\web\HeaderCollection::className*				 public
 See |yii\base\Object::className|


*yii\web\HeaderCollection::__construct* 			 public
 See |yii\base\Object::__construct|


*yii\web\HeaderCollection::init*				 public
 See |yii\base\Object::init|


*yii\web\HeaderCollection::__get*				 public
 See |yii\base\Object::__get|


*yii\web\HeaderCollection::__set*				 public
 See |yii\base\Object::__set|


*yii\web\HeaderCollection::__isset*				 public
 See |yii\base\Object::__isset|


*yii\web\HeaderCollection::__unset*				 public
 See |yii\base\Object::__unset|


*yii\web\HeaderCollection::__call*				 public
 See |yii\base\Object::__call|


*yii\web\HeaderCollection::hasProperty* 			 public
 See |yii\base\Object::hasProperty|


*yii\web\HeaderCollection::canGetProperty*			 public
 See |yii\base\Object::canGetProperty|


*yii\web\HeaderCollection::canSetProperty*			 public
 See |yii\base\Object::canSetProperty|


*yii\web\HeaderCollection::hasMethod*				 public
 See |yii\base\Object::hasMethod|


*yii\web\HeaderCollection::getIterator* 			 public
>
 getIterator()
<
(\ArrayIterator) An iterator for traversing the headers in the collection.

 This method is required by the SPL interface 'IteratorAggregate'. It will be
 implicitly called when you use 'foreach' to traverse the collection.


*yii\web\HeaderCollection::count*				 public
>
 count()
<
(integer) The number of headers in the collection.

 This method is required by the SPL 'Countable' interface. It will be
 implicitly called when you use 'count($collection)'.


*yii\web\HeaderCollection::getCount*				 public
>
 getCount()
<
(integer) The number of headers in the collection.




*yii\web\HeaderCollection::get* 				 public
>
 get($name, $default='null', $first='true')
<
(string|array) The named header(s). If '$first' is true, a string will be
returned; If '$first' is false, an array will be returned.


    [$name] (string) The name of the header to return
    [$default] (mixed) The value to return in case the named header does not
    exist
    [$first] (boolean) Whether to only return the first header of the
    specified name. If false, all headers of the specified name will be
    returned.


*yii\web\HeaderCollection::set* 				 public
>
 set($name, $value='''')
<
(static) The collection object itself

 If there is already a header with the same name, it will be replaced.
    [$name] (string) The name of the header
    [$value] (string) The value of the header


*yii\web\HeaderCollection::add* 				 public
>
 add($name, $value)
<
(static) The collection object itself

 If there is already a header with the same name, the new one will be appended
 to it instead of replacing it.
    [$name] (string) The name of the header
    [$value] (string) The value of the header


*yii\web\HeaderCollection::setDefault*				 public
>
 setDefault($name, $value)
<
(static) The collection object itself

 If there is already a header with the same name, the new one will be ignored.
    [$name] (string) The name of the header
    [$value] (string) The value of the header


*yii\web\HeaderCollection::has* 				 public
>
 has($name)
<
(boolean) Whether the named header exists


    [$name] (string) The name of the header


*yii\web\HeaderCollection::remove*				 public
>
 remove($name)
<
(string) The value of the removed header. Null is returned if the header does
not exist.


    [$name] (string) The name of the header to be removed.


*yii\web\HeaderCollection::removeAll*				 public
>
 removeAll()
<
(void)




*yii\web\HeaderCollection::toArray*				 public
>
 toArray()
<
(array) The array representation of the collection. The array keys are header
names, and the array values are the corresponding header values.




*yii\web\HeaderCollection::offsetExists*			 public
>
 offsetExists($name)
<
(boolean) Whether the named header exists

 This method is required by the SPL interface 'ArrayAccess'. It is implicitly
 called when you use something like 'isset($collection[$name])'.
    [$name] (string) The header name


*yii\web\HeaderCollection::offsetGet*				 public
>
 offsetGet($name)
<
(string) The header value with the specified name, null if the named header
does not exist.

 This method is required by the SPL interface 'ArrayAccess'. It is implicitly
 called when you use something like '$header = $collection[$name];'. This is
 equivalent to [[get()]].
    [$name] (string) The header name


*yii\web\HeaderCollection::offsetSet*				 public
>
 offsetSet($name, $value)
<
(void)

 This method is required by the SPL interface 'ArrayAccess'. It is implicitly
 called when you use something like '$collection[$name] = $header;'. This is
 equivalent to [[add()]].
    [$name] (string) The header name
    [$value] (string) The header value to be added


*yii\web\HeaderCollection::offsetUnset* 			 public
>
 offsetUnset($name)
<
(void)

 This method is required by the SPL interface 'ArrayAccess'. It is implicitly
 called when you use something like 'unset($collection[$name])'. This is
 equivalent to [[remove()]].
    [$name] (string) The header name



 vim:tw=78:ts=8:ft=help:norl:
