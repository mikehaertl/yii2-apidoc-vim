
*yii/captcha/CaptchaValidator*   >> |yii/validators/Validator|
==============================

DESCRIPTION
------------------------------------------------------------------------------

 CaptchaValidator should be used together with 'CaptchaAction'.

 Note that once CAPTCHA validation succeeds, a new CAPTCHA will be generated
 automatically. As a result, CAPTCHA validation should not be used in AJAX
 validation mode because it may fail the validation even if a user enters the
 same code as shown in the CAPTCHA image which is actually different from the
 latest CAPTCHA code.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/validators/Validator::$builtInValidators|
 |yii/validators/Validator::$attributes|
 |yii/validators/Validator::$message|
 |yii/validators/Validator::$on|
 |yii/validators/Validator::$except|
 |yii/validators/Validator::$skipOnError|
 |yii/validators/Validator::$enableClientValidation|
 |yii/validators/Validator::$isEmpty|
 |yii/validators/Validator::$when|
 |yii/validators/Validator::$whenClient|


$skipOnEmpty				*yii/captcha/CaptchaValidator::$skipOnEmpty*

 (bool) Whether to skip this validator if the input is empty.

$caseSensitive				*yii/captcha/CaptchaValidator::$caseSensitive*

 (bool) Whether the comparison is case sensitive. Defaults to false.

$captchaAction				*yii/captcha/CaptchaValidator::$captchaAction*

 (string) The route of the controller action that renders the CAPTCHA image.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/validators/Validator::createValidator|
 |yii/validators/Validator::validateAttributes|
 |yii/validators/Validator::validateAttribute|
 |yii/validators/Validator::validate|
 |yii/validators/Validator::isActive|
 |yii/validators/Validator::addError|
 |yii/validators/Validator::isEmpty|
 |yii/validators/Validator::formatMessage|
 |yii/validators/Validator::getAttributeNames|


*yii/captcha/CaptchaValidator::init*			public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/captcha/CaptchaValidator::validateValue*		protected
>
 validateValue($value)
<
return (void)

 {@inheritdoc}

    [$value] () 


*yii/captcha/CaptchaValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 
    [$view] () 


*yii/captcha/CaptchaValidator::getClientOptions*		public
>
 getClientOptions($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 


*yii/captcha/CaptchaValidator::createCaptchaAction*	public
>
 createCaptchaAction()
<
return (\yii\captcha\CaptchaAction) The action object

 Creates the CAPTCHA action object from the route specified by
 'captchaAction'.



 vim:tw=78:ts=8:ft=help:norl:
