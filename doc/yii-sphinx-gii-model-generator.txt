
*yii/sphinx/gii/model/Generator*   >> |yii/gii/Generator|
================================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/gii/Generator::$templates|
 |yii/gii/Generator::$template|
 |yii/gii/Generator::$enableI18N|
 |yii/gii/Generator::$messageCategory|


$db					*yii/sphinx/gii/model/Generator::$db*

 ()

$ns					*yii/sphinx/gii/model/Generator::$ns*

 ()

$indexName				*yii/sphinx/gii/model/Generator::$indexName*

 ()

$modelClass				*yii/sphinx/gii/model/Generator::$modelClass*

 ()

$baseClass				*yii/sphinx/gii/model/Generator::$baseClass*

 ()

$useIndexPrefix				*yii/sphinx/gii/model/Generator::$useIndexPrefix*

 ()



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/gii/Generator::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/StaticInstanceTrait::instance|
 |yii/base/ArrayableTrait::fields|
 |yii/base/ArrayableTrait::extraFields|
 |yii/base/ArrayableTrait::toArray|
 |yii/base/ArrayableTrait::extractRootFields|
 |yii/base/ArrayableTrait::extractFieldsFor|
 |yii/base/ArrayableTrait::resolveFields|
 |yii/base/Model::scenarios|
 |yii/base/Model::formName|
 |yii/base/Model::attributes|
 |yii/base/Model::attributeHints|
 |yii/base/Model::validate|
 |yii/base/Model::beforeValidate|
 |yii/base/Model::afterValidate|
 |yii/base/Model::getValidators|
 |yii/base/Model::getActiveValidators|
 |yii/base/Model::createValidators|
 |yii/base/Model::isAttributeRequired|
 |yii/base/Model::isAttributeSafe|
 |yii/base/Model::isAttributeActive|
 |yii/base/Model::getAttributeLabel|
 |yii/base/Model::getAttributeHint|
 |yii/base/Model::hasErrors|
 |yii/base/Model::getErrors|
 |yii/base/Model::getFirstErrors|
 |yii/base/Model::getFirstError|
 |yii/base/Model::getErrorSummary|
 |yii/base/Model::addError|
 |yii/base/Model::addErrors|
 |yii/base/Model::clearErrors|
 |yii/base/Model::generateAttributeLabel|
 |yii/base/Model::getAttributes|
 |yii/base/Model::setAttributes|
 |yii/base/Model::onUnsafeAttribute|
 |yii/base/Model::getScenario|
 |yii/base/Model::setScenario|
 |yii/base/Model::safeAttributes|
 |yii/base/Model::activeAttributes|
 |yii/base/Model::load|
 |yii/base/Model::loadMultiple|
 |yii/base/Model::validateMultiple|
 |yii/base/Model::getIterator|
 |yii/base/Model::offsetExists|
 |yii/base/Model::offsetGet|
 |yii/base/Model::offsetSet|
 |yii/base/Model::offsetUnset|
 |yii/gii/Generator::successMessage|
 |yii/gii/Generator::formView|
 |yii/gii/Generator::defaultTemplate|
 |yii/gii/Generator::loadStickyAttributes|
 |yii/gii/Generator::saveStickyAttributes|
 |yii/gii/Generator::getStickyDataFile|
 |yii/gii/Generator::save|
 |yii/gii/Generator::getTemplatePath|
 |yii/gii/Generator::render|
 |yii/gii/Generator::validateTemplate|
 |yii/gii/Generator::validateClass|
 |yii/gii/Generator::validateNewClass|
 |yii/gii/Generator::validateMessageCategory|
 |yii/gii/Generator::isReservedKeyword|
 |yii/gii/Generator::generateString|


*yii/sphinx/gii/model/Generator::rules*			public
>
 rules()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::attributeLabels*		public
>
 attributeLabels()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::getName*			public
>
 getName()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::generate*		public
>
 generate()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::requiredTemplates*	public
>
 requiredTemplates()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::stickyAttributes*	public
>
 stickyAttributes()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::hints*			public
>
 hints()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::autoCompleteData*	public
>
 autoCompleteData()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::getDescription*		public
>
 getDescription()
<
return (void)

 {@inheritdoc}


*yii/sphinx/gii/model/Generator::generateLabels*		public
>
 generateLabels($table)
<
return (array) The generated attribute labels (name => label)

 Generates the attribute labels for the specified table.

    [$table] (\yii\db\TableSchema) The table schema


*yii/sphinx/gii/model/Generator::generateRules*		public
>
 generateRules($index)
<
return (array) The generated validation rules

 Generates validation rules for the specified index.

    [$index] (\yii\sphinx\IndexSchema) The index schema


*yii/sphinx/gii/model/Generator::validateDb*		public
>
 validateDb()
<
return (void)

 Validates the 'db' attribute.


*yii/sphinx/gii/model/Generator::validateNamespace*	public
>
 validateNamespace()
<
return (void)

 Validates the 'ns' attribute.


*yii/sphinx/gii/model/Generator::validateModelClass*	public
>
 validateModelClass()
<
return (void)

 Validates the 'modelClass' attribute.


*yii/sphinx/gii/model/Generator::validateIndexName*	public
>
 validateIndexName()
<
return (void)

 Validates the 'indexName' attribute.


*yii/sphinx/gii/model/Generator::getIndexNames*		protected
>
 getIndexNames()
<
return (array) The index names that match the pattern specified by 'indexName'.



*yii/sphinx/gii/model/Generator::generateIndexName*	public
>
 generateIndexName($indexName)
<
return (string) The generated table name

 Generates the table name by considering table prefix.

 If 'useIndexPrefix' is false, the table name will be returned without change.

    [$indexName] (string) The table name (which may contain schema prefix)


*yii/sphinx/gii/model/Generator::generateClassName*	protected
>
 generateClassName($indexName)
<
return (string) The generated class name

 Generates a class name from the specified table name.

    [$indexName] (string) The table name (which may contain schema prefix)


*yii/sphinx/gii/model/Generator::getDbConnection*		protected
>
 getDbConnection()
<
return (\yii\sphinx\Connection) The Sphinx connection as specified by 'db'.




 vim:tw=78:ts=8:ft=help:norl:
