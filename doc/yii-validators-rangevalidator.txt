
*yii/validators/RangeValidator*   >> |yii/validators/Validator|
===============================

DESCRIPTION
------------------------------------------------------------------------------

 The range can be specified via the 'range' property. If the 'not' property is
 set true, the validator will ensure the attribute value is NOT among the
 specified range.


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/RangeValidator::$builtInValidators*
 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/RangeValidator::$attributes*
 See |yii/validators/Validator::$attributes|

$message				*yii/validators/RangeValidator::$message*
 See |yii/validators/Validator::$message|

$on					*yii/validators/RangeValidator::$on*
 See |yii/validators/Validator::$on|

$except					*yii/validators/RangeValidator::$except*
 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/RangeValidator::$skipOnError*
 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/RangeValidator::$skipOnEmpty*
 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/RangeValidator::$enableClientValidation*
 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/RangeValidator::$isEmpty*
 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/RangeValidator::$when*
 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/RangeValidator::$whenClient*
 See |yii/validators/Validator::$whenClient|

$range					*yii/validators/RangeValidator::$range*
 (array) List of valid values that the attribute value should be among

$strict					*yii/validators/RangeValidator::$strict*
 (boolean) Whether the comparison is strict (both type and value must be the
 same)

$not					*yii/validators/RangeValidator::$not*
 (boolean) Whether to invert the validation logic. Defaults to false. If set
 to true, the attribute value should NOT be among the list of values defined
 via 'range'.

$behaviors				*yii/validators/RangeValidator::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii/validators/RangeValidator::className*		public
 See |yii/base/Object::className|


*yii/validators/RangeValidator::__construct*		public
 See |yii/base/Object::__construct|


*yii/validators/RangeValidator::init*			public
>
 init()
<
(void)

 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.


*yii/validators/RangeValidator::__get*			public
 See |yii/base/Component::__get|


*yii/validators/RangeValidator::__set*			public
 See |yii/base/Component::__set|


*yii/validators/RangeValidator::__isset*			public
 See |yii/base/Component::__isset|


*yii/validators/RangeValidator::__unset*			public
 See |yii/base/Component::__unset|


*yii/validators/RangeValidator::__call*			public
 See |yii/base/Component::__call|


*yii/validators/RangeValidator::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/validators/RangeValidator::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/validators/RangeValidator::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/validators/RangeValidator::hasMethod*		public
 See |yii/base/Component::hasMethod|


*yii/validators/RangeValidator::__clone*			public
 See |yii/base/Component::__clone|


*yii/validators/RangeValidator::behaviors*		public
 See |yii/base/Component::behaviors|


*yii/validators/RangeValidator::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/validators/RangeValidator::on*			public
 See |yii/base/Component::on|


*yii/validators/RangeValidator::off*			public
 See |yii/base/Component::off|


*yii/validators/RangeValidator::trigger*			public
 See |yii/base/Component::trigger|


*yii/validators/RangeValidator::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/validators/RangeValidator::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/validators/RangeValidator::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/validators/RangeValidator::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/validators/RangeValidator::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/validators/RangeValidator::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/validators/RangeValidator::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/validators/RangeValidator::createValidator*		public
 See |yii/validators/Validator::createValidator|


*yii/validators/RangeValidator::validateAttributes*	public
 See |yii/validators/Validator::validateAttributes|


*yii/validators/RangeValidator::validateAttribute*	public
 See |yii/validators/Validator::validateAttribute|


*yii/validators/RangeValidator::validate*			public
 See |yii/validators/Validator::validate|


*yii/validators/RangeValidator::validateValue*		protected
>
 validateValue($value)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.

 A validator class can implement this method to support data validation out of
 the context of a data model.
    [$value] (mixed) The data value to be validated.


*yii/validators/RangeValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($object, $attribute, $view)
<
(string) The client-side validation script. Null if the validator does not
support client-side validation.

 You may override this method to return the JavaScript validation code if the
 validator can support client-side validation.

 The following JavaScript variables are predefined and can be used in the
 validation code:


   - 'attribute': the name of the attribute being validated. 
   - 'value': the value being validated. 
   - 'messages': an array used to hold the validation error messages
   for the attribute.
    [$object] (\yii\base\Model) The data object being validated
    [$attribute] (string) The name of the attribute to be validated.
    [$view] (\yii\web\View) The view object that is going to be used to render
    views or view files containing a model form with this validator applied.


*yii/validators/RangeValidator::isActive*			public
 See |yii/validators/Validator::isActive|


*yii/validators/RangeValidator::addError*			public
 See |yii/validators/Validator::addError|


*yii/validators/RangeValidator::isEmpty*			public
 See |yii/validators/Validator::isEmpty|



 vim:tw=78:ts=8:ft=help:norl:
