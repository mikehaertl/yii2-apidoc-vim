
*yii/caching/Dependency*   >> |yii/base/BaseObject|
========================

SUBCLASSES
------------------------------------------------------------------------------

|yii/caching/DbQueryDependency|
|yii/caching/ChainedDependency|
|yii/caching/FileDependency|
|yii/caching/TagDependency|
|yii/caching/ExpressionDependency|
|yii/caching/DbDependency|

DESCRIPTION
------------------------------------------------------------------------------

 Child classes should override its 'generateDependencyData()' for generating
 the actual dependency data.

 For more details and usage information on Cache, see the [guide article on
 caching](guide:caching-overview).


PROPERTY DETAILS
------------------------------------------------------------------------------


$data					*yii/caching/Dependency::$data*

 (mixed) The dependency data that is saved in cache and later is compared with
 the latest dependency data.

$reusable				*yii/caching/Dependency::$reusable*

 (bool) Whether this dependency is reusable or not. True value means that
 dependent data for this cache dependency will be generated only once per
 request. This allows you to use the same cache dependency for multiple
 separate cache calls while generating the same page without an overhead of
 re-evaluating dependency data each time. Defaults to false.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|


*yii/caching/Dependency::evaluateDependency*		public
>
 evaluateDependency($cache)
<
return (void)

 Evaluates the dependency by generating and saving the data related with
 dependency.

 This method is invoked by cache before writing data into it.

    [$cache] (\yii\caching\CacheInterface) The cache component that is
    currently evaluating this dependency


*yii/caching/Dependency::getHasChanged*			public
>
 getHasChanged($cache)
<
return (bool) Whether the dependency has changed.

 Returns a value indicating whether the dependency has changed.

    [$cache] (\yii\caching\CacheInterface) The cache component that is
    currently evaluating this dependency


*yii/caching/Dependency::isChanged*			public
>
 isChanged($cache)
<
return (bool) Whether the dependency has changed.

 Checks whether the dependency is changed.

    [$cache] (\yii\caching\CacheInterface) The cache component that is
    currently evaluating this dependency


*yii/caching/Dependency::resetReusableData*		public
>
 resetReusableData()
<
return (void)

 Resets all cached data for reusable dependencies.


*yii/caching/Dependency::generateReusableHash*		protected
>
 generateReusableHash()
<
return (string) A unique hash value for this cache dependency.

 Generates a unique hash that can be used for retrieving reusable dependency
 data.


*yii/caching/Dependency::generateDependencyData*		protected
>
 generateDependencyData($cache)
<
return (mixed) The data needed to determine if dependency has been changed.

 Generates the data needed to determine if dependency is changed.

 Derived classes should override this method to generate the actual dependency
 data.

    [$cache] (\yii\caching\CacheInterface) The cache component that is
    currently evaluating this dependency



 vim:tw=78:ts=8:ft=help:norl:
