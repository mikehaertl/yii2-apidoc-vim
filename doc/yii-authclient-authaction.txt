
*yii/authclient/AuthAction*   >> |yii/base/Action|
===========================

DESCRIPTION
------------------------------------------------------------------------------

 It supports 'OpenId', 'OAuth1' and 'OAuth2' client types.

 Usage:

   class SiteController extends Controller
   {
       public function actions()
       {
           return [
               'auth' => [
                   'class' => 'yii\authclient\AuthAction',
                   'successCallback' => [$this, 'successCallback'],
               ],
           ]
       }

       public function successCallback($client)
       {
           $attributes = $client->getUserAttributes();
           // user login or signup comes here
       }
   }

 Usually authentication via external services is performed inside the popup
 window. This action handles the redirection and closing of popup window
 correctly.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Action::$id|
 |yii/base/Action::$controller|
 |yii/base/Component::$behaviors|
 |yii/base/Action::$uniqueId|


$clientCollection			*yii/authclient/AuthAction::$clientCollection*

 (string) Name of the auth client collection application component. It should
 point to 'Collection' instance.

$clientIdGetParamName			*yii/authclient/AuthAction::$clientIdGetParamName*

 (string) Name of the GET param, which is used to passed auth client id to
 this action. Note: watch for the naming, make sure you do not choose name
 used in some auth protocol.

$successCallback			*yii/authclient/AuthAction::$successCallback*

 (callable) PHP callback, which should be triggered in case of successful
 authentication. This callback should accept 'ClientInterface' instance as an
 argument. For example:

   public function onAuthSuccess(ClientInterface $client)
   {
       $attributes = $client->getUserAttributes();
       // user login or signup comes here
   }

 If this callback returns 'Response' instance, it will be used as action
 response, otherwise redirection to 'successUrl' will be performed.

$cancelCallback				*yii/authclient/AuthAction::$cancelCallback*

 (callable) PHP callback, which should be triggered in case of authentication
 cancelation. This callback should accept 'ClientInterface' instance as an
 argument. For example:

   public function onAuthCancel(ClientInterface $client)
   {
       // set flash, logging, etc.
   }

 If this callback returns 'Response' instance, it will be used as action
 response, otherwise redirection to 'cancelUrl' will be performed.

$redirectView				*yii/authclient/AuthAction::$redirectView*

 (string) Name or alias of the view file, which should be rendered in order to
 perform redirection. If not set 
   - default one will be used.

$user					*yii/authclient/AuthAction::$user*

 (\yii\web\User|array|string) The User object or the application component ID
 of the user component.

$successUrl				*yii/authclient/AuthAction::$successUrl*

 (string) Successful URL.

$cancelUrl				*yii/authclient/AuthAction::$cancelUrl*

 (string) Cancel URL.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/Action::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Action::getUniqueId|
 |yii/base/Action::runWithParams|
 |yii/base/Action::beforeRun|
 |yii/base/Action::afterRun|


*yii/authclient/AuthAction::init*				public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/authclient/AuthAction::setSuccessUrl*		public
>
 setSuccessUrl($url)
<
return (void)

    [$url] (string) Successful URL.


*yii/authclient/AuthAction::getSuccessUrl*		public
>
 getSuccessUrl()
<
return (string) Successful URL.



*yii/authclient/AuthAction::setCancelUrl*			public
>
 setCancelUrl($url)
<
return (void)

    [$url] (string) Cancel URL.


*yii/authclient/AuthAction::getCancelUrl*			public
>
 getCancelUrl()
<
return (string) Cancel URL.



*yii/authclient/AuthAction::defaultSuccessUrl*		protected
>
 defaultSuccessUrl()
<
return (string) Success URL value.

 Creates default 'successUrl' value.


*yii/authclient/AuthAction::defaultCancelUrl*		protected
>
 defaultCancelUrl()
<
return (string) Cancel URL value.

 Creates default 'cancelUrl' value.


*yii/authclient/AuthAction::run*				public
>
 run()
<
return (void)

 Runs the action.


*yii/authclient/AuthAction::auth*				protected
>
 auth($client, $authUrlParams='[]')
<
return (\yii\web\Response) Response instance.

 Perform authentication for the given client.

    [$client] (mixed) Auth client instance.
    [$authUrlParams] (array) Additional auth GET params.


*yii/authclient/AuthAction::authSuccess*			protected
>
 authSuccess($client)
<
return (\yii\web\Response) Response instance.

 This method is invoked in case of successful authentication via auth client.

    [$client] (\yii\authclient\ClientInterface) Auth client instance.


*yii/authclient/AuthAction::authCancel*			protected
>
 authCancel($client)
<
return (\yii\web\Response) Response instance.

 This method is invoked in case of authentication cancelation.

    [$client] (\yii\authclient\ClientInterface) Auth client instance.


*yii/authclient/AuthAction::redirect*			public
>
 redirect($url, $enforceRedirect='true')
<
return (\yii\web\Response) Response instance.

 Redirect to the given URL or simply close the popup window.

    [$url] (mixed) URL to redirect, could be a string or array config to
    generate a valid URL.
    [$enforceRedirect] (bool) Indicates if redirect should be performed even
    in case of popup window.


*yii/authclient/AuthAction::redirectSuccess*		public
>
 redirectSuccess($url='null')
<
return (\yii\web\Response) Response instance.

 Redirect to the URL. If URL is null, 'successUrl' will be used.

    [$url] (string) URL to redirect.


*yii/authclient/AuthAction::redirectCancel*		public
>
 redirectCancel($url='null')
<
return (\yii\web\Response) Response instance.

 Redirect to the 'cancelUrl' or simply close the popup window.

    [$url] (string) URL to redirect.


*yii/authclient/AuthAction::authOpenId*			protected
>
 authOpenId($client)
<
return (\yii\web\Response) Action response.

 Performs OpenID auth flow.

    [$client] (\yii\authclient\OpenId) Auth client instance.


*yii/authclient/AuthAction::authOAuth1*			protected
>
 authOAuth1($client, $authUrlParams='[]')
<
return (\yii\web\Response) Action response.

 Performs OAuth1 auth flow.

    [$client] (\yii\authclient\OAuth1) Auth client instance.
    [$authUrlParams] (array) Additional auth GET params.


*yii/authclient/AuthAction::authOAuth2*			protected
>
 authOAuth2($client, $authUrlParams='[]')
<
return (\yii\web\Response) Action response.

 Performs OAuth2 auth flow.

    [$client] (\yii\authclient\OAuth2) Auth client instance.
    [$authUrlParams] (array) Additional auth GET params.



 vim:tw=78:ts=8:ft=help:norl:
