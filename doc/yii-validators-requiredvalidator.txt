
*yii/validators/RequiredValidator*   >> |yii/validators/Validator|
==================================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/validators/Validator::$builtInValidators|
 |yii/validators/Validator::$attributes|
 |yii/validators/Validator::$on|
 |yii/validators/Validator::$except|
 |yii/validators/Validator::$skipOnError|
 |yii/validators/Validator::$enableClientValidation|
 |yii/validators/Validator::$isEmpty|
 |yii/validators/Validator::$when|
 |yii/validators/Validator::$whenClient|


$message				*yii/validators/RequiredValidator::$message*

 (string) The user-defined error message. It may contain the following
 placeholders which will be replaced accordingly by the validator:


   - '{attribute}': the label of the attribute being validated 
   - '{value}': the value of the attribute being validated 
   - '{requiredValue}': the value of 'requiredValue'

$skipOnEmpty				*yii/validators/RequiredValidator::$skipOnEmpty*

 (bool) Whether to skip this validator if the value being validated is empty.

$requiredValue				*yii/validators/RequiredValidator::$requiredValue*

 (mixed) The desired value that the attribute must have. If this is null, the
 validator will validate that the specified attribute is not empty. If this is
 set as a value that is not null, the validator will validate that the
 attribute has a value that is the same as this property value. Defaults to
 null.

$strict					*yii/validators/RequiredValidator::$strict*

 (bool) Whether the comparison between the attribute value and 'requiredValue'
 is strict. When this is true, both the values and types must match. Defaults
 to false, meaning only the values need to match. Note that when
 'requiredValue' is null, if this property is true, the validator will check
 if the attribute value is null; If this property is false, the validator will
 call 'isEmpty' to check if the attribute value is empty.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/validators/Validator::createValidator|
 |yii/validators/Validator::validateAttributes|
 |yii/validators/Validator::validateAttribute|
 |yii/validators/Validator::validate|
 |yii/validators/Validator::isActive|
 |yii/validators/Validator::addError|
 |yii/validators/Validator::isEmpty|
 |yii/validators/Validator::formatMessage|
 |yii/validators/Validator::getAttributeNames|


*yii/validators/RequiredValidator::init*			public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/validators/RequiredValidator::validateValue*		protected
>
 validateValue($value)
<
return (void)

 {@inheritdoc}

    [$value] () 


*yii/validators/RequiredValidator::clientValidateAttribute*public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 
    [$view] () 


*yii/validators/RequiredValidator::getClientOptions*	public
>
 getClientOptions($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 



 vim:tw=78:ts=8:ft=help:norl:
