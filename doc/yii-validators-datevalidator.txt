
*yii\validators\DateValidator*   >> yii\validators\Validator
==============================




PROPERTY DETAILS
------------------------------------------------------------------------------

<$builtInValidators>			*yii.validators.DateValidator::$builtInValidators*
 See |yii.validators.Validator::$builtInValidators|

<$attributes>				*yii.validators.DateValidator::$attributes*
 See |yii.validators.Validator::$attributes|

<$message>				*yii.validators.DateValidator::$message*
 See |yii.validators.Validator::$message|

<$on>					*yii.validators.DateValidator::$on*
 See |yii.validators.Validator::$on|

<$except>				*yii.validators.DateValidator::$except*
 See |yii.validators.Validator::$except|

<$skipOnError>				*yii.validators.DateValidator::$skipOnError*
 See |yii.validators.Validator::$skipOnError|

<$skipOnEmpty>				*yii.validators.DateValidator::$skipOnEmpty*
 See |yii.validators.Validator::$skipOnEmpty|

<$enableClientValidation>		*yii.validators.DateValidator::$enableClientValidation*
 See |yii.validators.Validator::$enableClientValidation|

<$isEmpty>				*yii.validators.DateValidator::$isEmpty*
 See |yii.validators.Validator::$isEmpty|

<$when> 				*yii.validators.DateValidator::$when*
 See |yii.validators.Validator::$when|

<$whenClient>				*yii.validators.DateValidator::$whenClient*
 See |yii.validators.Validator::$whenClient|

<$format>				*yii.validators.DateValidator::$format*
 (string) The date format that the value being validated should follow. Please
 refer to <http://www.php.net/manual/en/datetime.createfromformat.php> on
 supported formats.

<$timestampAttribute>			*yii.validators.DateValidator::$timestampAttribute*
 (string) The name of the attribute to receive the parsing result. When this
 property is not null and the validation is successful, the named attribute
 will receive the parsing result.

<$behaviors>				*yii.validators.DateValidator::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii.validators.DateValidator::className*			 public
 See |yii.base.Object::className|


*yii.validators.DateValidator::__construct*			 public
 See |yii.base.Object::__construct|


*yii.validators.DateValidator::init*				 public
>
 init()
<
(void)




*yii.validators.DateValidator::__get*				 public
 See |yii.base.Component::__get|


*yii.validators.DateValidator::__set*				 public
 See |yii.base.Component::__set|


*yii.validators.DateValidator::__isset* 			 public
 See |yii.base.Component::__isset|


*yii.validators.DateValidator::__unset* 			 public
 See |yii.base.Component::__unset|


*yii.validators.DateValidator::__call*				 public
 See |yii.base.Component::__call|


*yii.validators.DateValidator::hasProperty*			 public
 See |yii.base.Component::hasProperty|


*yii.validators.DateValidator::canGetProperty*			 public
 See |yii.base.Component::canGetProperty|


*yii.validators.DateValidator::canSetProperty*			 public
 See |yii.base.Component::canSetProperty|


*yii.validators.DateValidator::hasMethod*			 public
 See |yii.base.Component::hasMethod|


*yii.validators.DateValidator::__clone* 			 public
 See |yii.base.Component::__clone|


*yii.validators.DateValidator::behaviors*			 public
 See |yii.base.Component::behaviors|


*yii.validators.DateValidator::hasEventHandlers*		 public
 See |yii.base.Component::hasEventHandlers|


*yii.validators.DateValidator::on*				 public
 See |yii.base.Component::on|


*yii.validators.DateValidator::off*				 public
 See |yii.base.Component::off|


*yii.validators.DateValidator::trigger* 			 public
 See |yii.base.Component::trigger|


*yii.validators.DateValidator::getBehavior*			 public
 See |yii.base.Component::getBehavior|


*yii.validators.DateValidator::getBehaviors*			 public
 See |yii.base.Component::getBehaviors|


*yii.validators.DateValidator::attachBehavior*			 public
 See |yii.base.Component::attachBehavior|


*yii.validators.DateValidator::attachBehaviors* 		 public
 See |yii.base.Component::attachBehaviors|


*yii.validators.DateValidator::detachBehavior*			 public
 See |yii.base.Component::detachBehavior|


*yii.validators.DateValidator::detachBehaviors* 		 public
 See |yii.base.Component::detachBehaviors|


*yii.validators.DateValidator::ensureBehaviors* 		 public
 See |yii.base.Component::ensureBehaviors|


*yii.validators.DateValidator::createValidator* 		 public
 See |yii.validators.Validator::createValidator|


*yii.validators.DateValidator::validateAttributes*		 public
 See |yii.validators.Validator::validateAttributes|


*yii.validators.DateValidator::validateAttribute*		 public
>
 validateAttribute($object, $attribute)
<
(void)


    [$object] () 
    [$attribute] () 


*yii.validators.DateValidator::validate*			 public
 See |yii.validators.Validator::validate|


*yii.validators.DateValidator::validateValue*			 protected
>
 validateValue($value)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.


    [$value] () 


*yii.validators.DateValidator::clientValidateAttribute* 	 public
 See |yii.validators.Validator::clientValidateAttribute|


*yii.validators.DateValidator::isActive*			 public
 See |yii.validators.Validator::isActive|


*yii.validators.DateValidator::addError*			 public
 See |yii.validators.Validator::addError|


*yii.validators.DateValidator::isEmpty* 			 public
 See |yii.validators.Validator::isEmpty|



 vim:tw=78:ts=8:ft=help:norl:
