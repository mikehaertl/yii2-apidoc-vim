
*yii/log/FileTarget*   >> |yii/log/Target|
====================

DESCRIPTION
------------------------------------------------------------------------------

 The log file is specified via 'logFile'. If the size of the log file exceeds
 'maxFileSize' (in kilo-bytes), a rotation will be performed, which renames
 the current log file by suffixing the file name with '.1'. All existing log
 files are moved backwards by one place, i.e., '.2' to '.3', '.1' to '.2', and
 so on. The property 'maxLogFiles' specifies how many history files to keep.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/log/Target::$categories|
 |yii/log/Target::$except|
 |yii/log/Target::$logVars|
 |yii/log/Target::$prefix|
 |yii/log/Target::$exportInterval|
 |yii/log/Target::$messages|
 |yii/log/Target::$microtime|


$logFile				*yii/log/FileTarget::$logFile*

 (string) Log file path or [path alias](guide:concept-aliases). If not set, it
 will use the "@runtime/logs/app.log" file. The directory containing the log
 files will be automatically created if not existing.

$enableRotation				*yii/log/FileTarget::$enableRotation*

 (bool) Whether log files should be rotated when they reach a certain
 'maxFileSize|maximum size'. Log rotation is enabled by default. This property
 allows you to disable it, when you have configured an external tools for log
 rotation on your server.

$maxFileSize				*yii/log/FileTarget::$maxFileSize*

 (int) Maximum log file size, in kilo-bytes. Defaults to 10240, meaning 10MB.

$maxLogFiles				*yii/log/FileTarget::$maxLogFiles*

 (int) Number of log files used for rotation. Defaults to 5.

$fileMode				*yii/log/FileTarget::$fileMode*

 (int) The permission to be set for newly created log files. This value will
 be used by PHP chmod() function. No umask will be applied. If not set, the
 permission will be determined by the current environment.

$dirMode				*yii/log/FileTarget::$dirMode*

 (int) The permission to be set for newly created directories. This value will
 be used by PHP chmod() function. No umask will be applied. Defaults to 0775,
 meaning the directory is read-writable by owner and group, but read-only for
 other users.

$rotateByCopy				*yii/log/FileTarget::$rotateByCopy*

 (bool) Whether to rotate log files by copy and truncate in contrast to
 rotation by renaming files. Defaults to 'true' to be more compatible with log
 tailers and is windows systems which do not play well with rename on open
 files. Rotation by renaming however is a bit faster.

 The problem with windows systems where the
 [rename()](http://www.php.net/manual/en/function.rename.php) function does
 not work with files that are opened by some process is described in a
 [comment by Martin
 Pelletier](http://www.php.net/manual/en/function.rename.php#102274) in the
 PHP documentation. By setting rotateByCopy to 'true' you can work around this
 problem.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/log/Target::collect|
 |yii/log/Target::getContextMessage|
 |yii/log/Target::getLevels|
 |yii/log/Target::setLevels|
 |yii/log/Target::filterMessages|
 |yii/log/Target::formatMessage|
 |yii/log/Target::getMessagePrefix|
 |yii/log/Target::setEnabled|
 |yii/log/Target::getEnabled|
 |yii/log/Target::getTime|


*yii/log/FileTarget::init*				public
>
 init()
<
return (void)

 Initializes the route.

 This method is invoked after the route is created by the route manager.


*yii/log/FileTarget::export*				public
>
 export()
<
return (void)

 Writes log messages to a file.

 Starting from version 2.0.14, this method throws LogRuntimeException in case
 the log can not be exported.


*yii/log/FileTarget::rotateFiles*				protected
>
 rotateFiles()
<
return (void)

 Rotates log files.



 vim:tw=78:ts=8:ft=help:norl:
