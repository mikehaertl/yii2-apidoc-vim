
*yii/log/FileTarget*   >> |yii/log/Target|
====================

DESCRIPTION
------------------------------------------------------------------------------

 The log file is specified via 'logFile'. If the size of the log file exceeds
 'maxFileSize' (in kilo-bytes), a rotation will be performed, which renames
 the current log file by suffixing the file name with '.1'. All existing log
 files are moved backwards by one place, i.e., '.2' to '.3', '.1' to '.2', and
 so on. The property 'maxLogFiles' specifies how many files to keep.


PROPERTY DETAILS
------------------------------------------------------------------------------

$enabled				*yii/log/FileTarget::$enabled*
 See |yii/log/Target::$enabled|

$categories				*yii/log/FileTarget::$categories*
 See |yii/log/Target::$categories|

$except					*yii/log/FileTarget::$except*
 See |yii/log/Target::$except|

$logVars				*yii/log/FileTarget::$logVars*
 See |yii/log/Target::$logVars|

$prefix					*yii/log/FileTarget::$prefix*
 See |yii/log/Target::$prefix|

$exportInterval				*yii/log/FileTarget::$exportInterval*
 See |yii/log/Target::$exportInterval|

$messages				*yii/log/FileTarget::$messages*
 See |yii/log/Target::$messages|

$logFile				*yii/log/FileTarget::$logFile*
 (string) Log file path or path alias. If not set, it will use the
 "@runtime/logs/app.log" file. The directory containing the log files will be
 automatically created if not existing.

$maxFileSize				*yii/log/FileTarget::$maxFileSize*
 (integer) Maximum log file size, in kilo-bytes. Defaults to 10240, meaning
 10MB.

$maxLogFiles				*yii/log/FileTarget::$maxLogFiles*
 (integer) Number of log files used for rotation. Defaults to 5.

$fileMode				*yii/log/FileTarget::$fileMode*
 (integer) The permission to be set for newly created log files. This value
 will be used by PHP chmod() function. No umask will be applied. If not set,
 the permission will be determined by the current environment.

$dirMode				*yii/log/FileTarget::$dirMode*
 (integer) The permission to be set for newly created directories. This value
 will be used by PHP chmod() function. No umask will be applied. Defaults to
 0775, meaning the directory is read-writable by owner and group, but
 read-only for other users.

$behaviors				*yii/log/FileTarget::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

$levels					*yii/log/FileTarget::$levels*
 (integer) The message levels that this target is interested in. This is a
 bitmap of level values. Defaults to 0, meaning  all available levels.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/log/FileTarget::className*				public
 See |yii/base/Object::className|


*yii/log/FileTarget::__construct*				public
 See |yii/base/Object::__construct|


*yii/log/FileTarget::init*				public
>
 init()
<
(void)

 This method is invoked after the route is created by the route manager.


*yii/log/FileTarget::__get*				public
 See |yii/base/Component::__get|


*yii/log/FileTarget::__set*				public
 See |yii/base/Component::__set|


*yii/log/FileTarget::__isset*				public
 See |yii/base/Component::__isset|


*yii/log/FileTarget::__unset*				public
 See |yii/base/Component::__unset|


*yii/log/FileTarget::__call*				public
 See |yii/base/Component::__call|


*yii/log/FileTarget::hasProperty*				public
 See |yii/base/Component::hasProperty|


*yii/log/FileTarget::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/log/FileTarget::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/log/FileTarget::hasMethod*				public
 See |yii/base/Component::hasMethod|


*yii/log/FileTarget::__clone*				public
 See |yii/base/Component::__clone|


*yii/log/FileTarget::behaviors*				public
 See |yii/base/Component::behaviors|


*yii/log/FileTarget::hasEventHandlers*			public
 See |yii/base/Component::hasEventHandlers|


*yii/log/FileTarget::on*					public
 See |yii/base/Component::on|


*yii/log/FileTarget::off*					public
 See |yii/base/Component::off|


*yii/log/FileTarget::trigger*				public
 See |yii/base/Component::trigger|


*yii/log/FileTarget::getBehavior*				public
 See |yii/base/Component::getBehavior|


*yii/log/FileTarget::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/log/FileTarget::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/log/FileTarget::attachBehaviors*			public
 See |yii/base/Component::attachBehaviors|


*yii/log/FileTarget::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/log/FileTarget::detachBehaviors*			public
 See |yii/base/Component::detachBehaviors|


*yii/log/FileTarget::ensureBehaviors*			public
 See |yii/base/Component::ensureBehaviors|


*yii/log/FileTarget::export*				public
>
 export()
<
(void)



*yii/log/FileTarget::collect*				public
 See |yii/log/Target::collect|


*yii/log/FileTarget::getContextMessage*			protected
 See |yii/log/Target::getContextMessage|


*yii/log/FileTarget::getLevels*				public
 See |yii/log/Target::getLevels|


*yii/log/FileTarget::setLevels*				public
 See |yii/log/Target::setLevels|


*yii/log/FileTarget::filterMessages*			public
 See |yii/log/Target::filterMessages|


*yii/log/FileTarget::formatMessage*			public
 See |yii/log/Target::formatMessage|


*yii/log/FileTarget::getMessagePrefix*			public
 See |yii/log/Target::getMessagePrefix|


*yii/log/FileTarget::rotateFiles*				protected
>
 rotateFiles()
<
(void)




 vim:tw=78:ts=8:ft=help:norl:
