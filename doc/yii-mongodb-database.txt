
*yii/mongodb/Database*   >> |yii/base/BaseObject|
======================


PROPERTY DETAILS
------------------------------------------------------------------------------


$connection				*yii/mongodb/Database::$connection*

 (\yii\mongodb\Connection) MongoDB connection.

$name					*yii/mongodb/Database::$name*

 (string) Name of this database.

$fileCollection				*yii/mongodb/Database::$fileCollection*

 (\yii\mongodb\file\Collection) Mongo GridFS collection.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|


*yii/mongodb/Database::getCollection*			public
>
 getCollection($name, $refresh='false')
<
return (\yii\mongodb\Collection) Mongo collection instance.

 Returns the Mongo collection with the given name.

    [$name] (string) Collection name
    [$refresh] (bool) Whether to reload the collection instance even if it is
    found in the cache.


*yii/mongodb/Database::getFileCollection*			public
>
 getFileCollection($prefix=''fs'', $refresh='false')
<
return (\yii\mongodb\file\Collection) Mongo GridFS collection.

 Returns Mongo GridFS collection with given prefix.

    [$prefix] (string) Collection prefix.
    [$refresh] (bool) Whether to reload the collection instance even if it is
    found in the cache.


*yii/mongodb/Database::selectCollection*			protected
>
 selectCollection($name)
<
return (\yii\mongodb\Collection) Collection instance.

 Selects collection with given name.

    [$name] (string) Collection name.


*yii/mongodb/Database::selectFileCollection*		protected
>
 selectFileCollection($prefix)
<
return (\yii\mongodb\file\Collection) File collection instance.

 Selects GridFS collection with given prefix.

    [$prefix] (string) File collection prefix.


*yii/mongodb/Database::createCommand*			public
>
 createCommand($document='[]')
<
return (\yii\mongodb\Command) Command instance.

 Creates MongoDB command associated with this database.

    [$document] (array) Command document contents.


*yii/mongodb/Database::createCollection*			public
>
 createCollection($name, $options='[]')
<
return (bool) Whether operation was successful.

 Creates new collection.

 Note: Mongo creates new collections automatically on the first demand, this
 method makes sense only for the migration script or for the case you need to
 create collection with the specific options.

    [$name] (string) Name of the collection
    [$options] (array) Collection options in format: "name" => "value"


*yii/mongodb/Database::dropCollection*			public
>
 dropCollection($name)
<
return (bool) Whether operation was successful.

 Drops specified collection.

    [$name] (string) Name of the collection


*yii/mongodb/Database::listCollections*			public
>
 listCollections($condition='[]', $options='[]')
<
return (array) Collections information.

 Returns the list of available collections in this database.

    [$condition] (array) Filter condition.
    [$options] (array) Options list.


*yii/mongodb/Database::clearCollections*			public
>
 clearCollections()
<
return (void)

 Clears internal collection lists.

 This method can be used to break cycle references between 'Database' and
 'Collection' instances.



 vim:tw=78:ts=8:ft=help:norl:
