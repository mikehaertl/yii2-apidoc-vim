
*yii/widgets/Menu*   >> |yii/base/Widget|
==================

SUBCLASSES
------------------------------------------------------------------------------

|yii/jui/Menu|

DESCRIPTION
------------------------------------------------------------------------------

 The main property of Menu is 'items', which specifies the possible items in
 the menu. A menu item can contain sub-items which specify the sub-menu under
 that menu item.

 Menu checks the current route and request parameters to toggle certain menu
 items with active state.

 Note that Menu only renders the HTML tags about the menu. It does do any
 styling. You are responsible to provide CSS styles to make it look like a
 real menu.

 The following example shows how to use Menu:

   echo Menu::widget([
       'items' => [
           // Important: you need to specify url as 'controller/action',
           // not just as 'controller' even if default action is used.
           ['label' => 'Home', 'url' => ['site/index']],
           // 'Products' menu item will be selected as long as the route is
 'product/index'
           ['label' => 'Products', 'url' => ['product/index'], 'items' => [
               ['label' => 'New Arrivals', 'url' => ['product/index', 'tag' =>
 'new']],
               ['label' => 'Most Popular', 'url' => ['product/index', 'tag' =>
 'popular']],
           ]],
           ['label' => 'Login', 'url' => ['site/login'], 'visible' =>
 Yii::$app->user->isGuest],
       ],
   ]);




PROPERTY DETAILS
------------------------------------------------------------------------------

$counter				*yii/widgets/Menu::$counter*

 See |yii/base/Widget::$counter|

$autoIdPrefix				*yii/widgets/Menu::$autoIdPrefix*

 See |yii/base/Widget::$autoIdPrefix|

$stack					*yii/widgets/Menu::$stack*

 See |yii/base/Widget::$stack|

$items					*yii/widgets/Menu::$items*

 (array) List of menu items. Each menu item should be an array of the
 following structure:


   - label: string, optional, specifies the menu item label. When
   'encodeLabels' is true, the label   will be HTML-encoded. If the label is
 not specified, an empty string will be used. 
   - encode: boolean, optional, whether this item's label should be
   HTML-encoded. This param will override   global 'encodeLabels' param. 
   - url: string or array, optional, specifies the URL of the menu
   item. It will be processed by 'Url::to'.   When this is set, the actual
 menu item content will be generated using 'linkTemplate';   otherwise,
 'labelTemplate' will be used. 
   - visible: boolean, optional, whether this menu item is visible.
   Defaults to true. 
   - items: array, optional, specifies the sub-menu items. Its format
   is the same as the parent items. 
   - active: boolean, optional, whether this menu item is in active
   state (currently selected).   If a menu item is active, its CSS class will
 be appended with 'activeCssClass'.   If this option is not set, the menu item
 will be set active automatically when the current request   is triggered by
 'url'. For more details, please refer to 'isItemActive()'. 
   - template: string, optional, the template used to render the
   content of this menu item.   The token '{url}' will be replaced by the URL
 associated with this menu item,   and the token '{label}' will be replaced by
 the label of the menu item.   If this option is not set, 'linkTemplate' or
 'labelTemplate' will be used instead. 
   - submenuTemplate: string, optional, the template used to render the
   list of sub-menus.   The token '{items}' will be replaced with the rendered
 sub-menu items.   If this option is not set, 'submenuTemplate' will be used
 instead. 
   - options: array, optional, the HTML attributes for the menu
   container tag.

$itemOptions				*yii/widgets/Menu::$itemOptions*

 (array) List of HTML attributes shared by all menu 'items'. If any individual
 menu item specifies its 'options', it will be merged with this property
 before being used to generate the HTML attributes for the menu item tag. The
 following special options are recognized:


   - tag: string, defaults to "li", the tag name of the item container
   tags. Set to false to disable container tag.

$linkTemplate				*yii/widgets/Menu::$linkTemplate*

 (string) The template used to render the body of a menu which is a link. In
 this template, the token '{url}' will be replaced with the corresponding link
 URL; while '{label}' will be replaced with the link text. This property will
 be overridden by the 'template' option set in individual menu items via
 'items'.

$labelTemplate				*yii/widgets/Menu::$labelTemplate*

 (string) The template used to render the body of a menu which is NOT a link.
 In this template, the token '{label}' will be replaced with the label of the
 menu item. This property will be overridden by the 'template' option set in
 individual menu items via 'items'.

$submenuTemplate			*yii/widgets/Menu::$submenuTemplate*

 (string) The template used to render a list of sub-menus. In this template,
 the token '{items}' will be replaced with the rendered sub-menu items.

$encodeLabels				*yii/widgets/Menu::$encodeLabels*

 (boolean) Whether the labels for menu items should be HTML-encoded.

$activeCssClass				*yii/widgets/Menu::$activeCssClass*

 (string) The CSS class to be appended to the active menu item.

$activateItems				*yii/widgets/Menu::$activateItems*

 (boolean) Whether to automatically activate items according to whether their
 route setting matches the currently requested route.

$activateParents			*yii/widgets/Menu::$activateParents*

 (boolean) Whether to activate parent menu items when one of the corresponding
 child menu items is active. The activated parent menu items will also have
 its CSS classes appended with 'activeCssClass'.

$hideEmptyItems				*yii/widgets/Menu::$hideEmptyItems*

 (boolean) Whether to hide empty menu items. An empty menu item is one whose
 'url' option is not set and which has no visible child menu items.

$options				*yii/widgets/Menu::$options*

 (array) The HTML attributes for the menu's container tag. The following
 special options are recognized:


   - tag: string, defaults to "ul", the tag name of the item container
   tags. Set to false to disable container tag.

$firstItemCssClass			*yii/widgets/Menu::$firstItemCssClass*

 (string) The CSS class that will be assigned to the first item in the main
 menu or each submenu. Defaults to null, meaning no such CSS class will be
 assigned.

$lastItemCssClass			*yii/widgets/Menu::$lastItemCssClass*

 (string) The CSS class that will be assigned to the last item in the main
 menu or each submenu. Defaults to null, meaning no such CSS class will be
 assigned.

$route					*yii/widgets/Menu::$route*

 (string) The route used to determine if a menu item is active or not. If not
 set, it will use the route of the current request.

$params					*yii/widgets/Menu::$params*

 (array) The parameters used to determine if a menu item is active or not. If
 not set, it will use '$_GET'.

$behaviors				*yii/widgets/Menu::$behaviors*

 See |yii/base/Component::$behaviors|

$id					*yii/widgets/Menu::$id*

 See |yii/base/Widget::$id|

$view					*yii/widgets/Menu::$view*

 See |yii/base/Widget::$view|

$viewPath				*yii/widgets/Menu::$viewPath*

 See |yii/base/Widget::$viewPath|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/widgets/Menu::className*				public

 See |yii/base/Object::className|


*yii/widgets/Menu::__construct*				public

 See |yii/base/Object::__construct|


*yii/widgets/Menu::init*					public

 See |yii/base/Object::init|


*yii/widgets/Menu::__get*					public

 See |yii/base/Component::__get|


*yii/widgets/Menu::__set*					public

 See |yii/base/Component::__set|


*yii/widgets/Menu::__isset*				public

 See |yii/base/Component::__isset|


*yii/widgets/Menu::__unset*				public

 See |yii/base/Component::__unset|


*yii/widgets/Menu::__call*				public

 See |yii/base/Component::__call|


*yii/widgets/Menu::hasProperty*				public

 See |yii/base/Component::hasProperty|


*yii/widgets/Menu::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/widgets/Menu::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/widgets/Menu::hasMethod*				public

 See |yii/base/Component::hasMethod|


*yii/widgets/Menu::__clone*				public

 See |yii/base/Component::__clone|


*yii/widgets/Menu::behaviors*				public

 See |yii/base/Component::behaviors|


*yii/widgets/Menu::hasEventHandlers*			public

 See |yii/base/Component::hasEventHandlers|


*yii/widgets/Menu::on*					public

 See |yii/base/Component::on|


*yii/widgets/Menu::off*					public

 See |yii/base/Component::off|


*yii/widgets/Menu::trigger*				public

 See |yii/base/Component::trigger|


*yii/widgets/Menu::getBehavior*				public

 See |yii/base/Component::getBehavior|


*yii/widgets/Menu::getBehaviors*				public

 See |yii/base/Component::getBehaviors|


*yii/widgets/Menu::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/widgets/Menu::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/widgets/Menu::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/widgets/Menu::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/widgets/Menu::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/widgets/Menu::begin*					public

 See |yii/base/Widget::begin|


*yii/widgets/Menu::end*					public

 See |yii/base/Widget::end|


*yii/widgets/Menu::widget*				public

 See |yii/base/Widget::widget|


*yii/widgets/Menu::getId*					public

 See |yii/base/Widget::getId|


*yii/widgets/Menu::setId*					public

 See |yii/base/Widget::setId|


*yii/widgets/Menu::getView*				public

 See |yii/base/Widget::getView|


*yii/widgets/Menu::setView*				public

 See |yii/base/Widget::setView|


*yii/widgets/Menu::run*					public
>
 run()
<
return (void)



*yii/widgets/Menu::render*				public

 See |yii/base/Widget::render|


*yii/widgets/Menu::renderFile*				public

 See |yii/base/Widget::renderFile|


*yii/widgets/Menu::getViewPath*				public

 See |yii/base/Widget::getViewPath|


*yii/widgets/Menu::renderItems*				protected
>
 renderItems($items)
<
return (string) The rendering result

    [$items] (array) The menu items to be rendered recursively


*yii/widgets/Menu::renderItem*				protected
>
 renderItem($item)
<
return (string) The rendering result

 Note that the container and the sub-menus are not rendered here.

    [$item] (array) The menu item to be rendered. Please refer to 'items' to
    see what data might be in the item.


*yii/widgets/Menu::normalizeItems*			protected
>
 normalizeItems($items, $active)
<
return (array) The normalized menu items

    [$items] (array) The items to be normalized.
    [$active] (boolean) Whether there is an active child menu item.


*yii/widgets/Menu::isItemActive*				protected
>
 isItemActive($item)
<
return (boolean) Whether the menu item is active

 This is done by checking if 'route' and 'params' match that specified in the
 'url' option of the menu item. When the 'url' option of a menu item is
 specified in terms of an array, its first element is treated as the route for
 the item and the rest of the elements are the associated parameters. Only
 when its route and parameters match 'route' and 'params', respectively, will
 a menu item be considered active.

    [$item] (array) The menu item to be checked



 vim:tw=78:ts=8:ft=help:norl:
