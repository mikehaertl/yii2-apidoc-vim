
*yii/swiftmailer/Mailer*   >> |yii/mail/BaseMailer|
========================

DESCRIPTION
------------------------------------------------------------------------------

 To use Mailer, you should configure it in the application configuration like
 the following,

   'components' => [
       ...
       'mailer' => [
           'class' => 'yii\swiftmailer\Mailer',
           'transport' => [
               'class' => 'Swift_SmtpTransport',
               'host' => 'localhost',
               'username' => 'username',
               'password' => 'password',
               'port' => '587',
               'encryption' => 'tls',
           ],
       ],
       ...
   ],

 You may also skip the configuration of the 'transport' property. In that
 case, the default PHP 'mail()' function will be used to send emails.

 You specify the transport constructor arguments using 'constructArgs' key in
 the config. You can also specify the list of plugins, which should be
 registered to the transport using 'plugins' key. For example:

   'transport' => [
       'class' => 'Swift_SmtpTransport',
       'constructArgs' => ['localhost', 25]
       'plugins' => [
           [
               'class' => 'Swift_Plugins_ThrottlerPlugin',
               'constructArgs' => [20],
           ],
       ],
   ],

 To send an email, you may use the following code:

   Yii::$app->mailer->compose('contact/html', ['contactForm' => $form])
       ->setFrom('from@domain.com')
       ->setTo($form->email)
       ->setSubject($form->subject)
       ->send();




PROPERTY DETAILS
------------------------------------------------------------------------------

$htmlLayout				*yii/swiftmailer/Mailer::$htmlLayout*
 See |yii/mail/BaseMailer::$htmlLayout|

$textLayout				*yii/swiftmailer/Mailer::$textLayout*
 See |yii/mail/BaseMailer::$textLayout|

$messageConfig				*yii/swiftmailer/Mailer::$messageConfig*
 See |yii/mail/BaseMailer::$messageConfig|

$messageClass				*yii/swiftmailer/Mailer::$messageClass*
 (string) Message default class name.

$useFileTransport			*yii/swiftmailer/Mailer::$useFileTransport*
 See |yii/mail/BaseMailer::$useFileTransport|

$fileTransportPath			*yii/swiftmailer/Mailer::$fileTransportPath*
 See |yii/mail/BaseMailer::$fileTransportPath|

$fileTransportCallback			*yii/swiftmailer/Mailer::$fileTransportCallback*
 See |yii/mail/BaseMailer::$fileTransportCallback|

$enableSwiftMailerLogging		*yii/swiftmailer/Mailer::$enableSwiftMailerLogging*
 (boolean) Whether to enable writing of the SwiftMailer internal logs using
 Yii log mechanism. If enabled 'Logger' plugin will be attached to the
 'transport' for this purpose.

$behaviors				*yii/swiftmailer/Mailer::$behaviors*
 See |yii/base/Component::$behaviors|

$view					*yii/swiftmailer/Mailer::$view*
 See |yii/mail/BaseMailer::$view|

$viewPath				*yii/swiftmailer/Mailer::$viewPath*
 See |yii/mail/BaseMailer::$viewPath|

$swiftMailer				*yii/swiftmailer/Mailer::$swiftMailer*
 (array|\Swift_Mailer) Swift mailer instance or array configuration.

$transport				*yii/swiftmailer/Mailer::$transport*
 (array|\Swift_Transport)



METHOD DETAILS
------------------------------------------------------------------------------

*yii/swiftmailer/Mailer::className*			public
 See |yii/base/Object::className|


*yii/swiftmailer/Mailer::__construct*			public
 See |yii/base/Object::__construct|


*yii/swiftmailer/Mailer::init*				public
 See |yii/base/Object::init|


*yii/swiftmailer/Mailer::__get*				public
 See |yii/base/Component::__get|


*yii/swiftmailer/Mailer::__set*				public
 See |yii/base/Component::__set|


*yii/swiftmailer/Mailer::__isset*				public
 See |yii/base/Component::__isset|


*yii/swiftmailer/Mailer::__unset*				public
 See |yii/base/Component::__unset|


*yii/swiftmailer/Mailer::__call*				public
 See |yii/base/Component::__call|


*yii/swiftmailer/Mailer::hasProperty*			public
 See |yii/base/Component::hasProperty|


*yii/swiftmailer/Mailer::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/swiftmailer/Mailer::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/swiftmailer/Mailer::hasMethod*			public
 See |yii/base/Component::hasMethod|


*yii/swiftmailer/Mailer::__clone*				public
 See |yii/base/Component::__clone|


*yii/swiftmailer/Mailer::behaviors*			public
 See |yii/base/Component::behaviors|


*yii/swiftmailer/Mailer::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/swiftmailer/Mailer::on*				public
 See |yii/base/Component::on|


*yii/swiftmailer/Mailer::off*				public
 See |yii/base/Component::off|


*yii/swiftmailer/Mailer::trigger*				public
 See |yii/base/Component::trigger|


*yii/swiftmailer/Mailer::getBehavior*			public
 See |yii/base/Component::getBehavior|


*yii/swiftmailer/Mailer::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/swiftmailer/Mailer::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/swiftmailer/Mailer::attachBehaviors*			public
 See |yii/base/Component::attachBehaviors|


*yii/swiftmailer/Mailer::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/swiftmailer/Mailer::detachBehaviors*			public
 See |yii/base/Component::detachBehaviors|


*yii/swiftmailer/Mailer::ensureBehaviors*			public
 See |yii/base/Component::ensureBehaviors|


*yii/swiftmailer/Mailer::setView*				public
 See |yii/mail/BaseMailer::setView|


*yii/swiftmailer/Mailer::getView*				public
 See |yii/mail/BaseMailer::getView|


*yii/swiftmailer/Mailer::createView*			protected
 See |yii/mail/BaseMailer::createView|


*yii/swiftmailer/Mailer::compose*				public
 See |yii/mail/BaseMailer::compose|


*yii/swiftmailer/Mailer::createMessage*			protected
 See |yii/mail/BaseMailer::createMessage|


*yii/swiftmailer/Mailer::send*				public
 See |yii/mail/BaseMailer::send|


*yii/swiftmailer/Mailer::sendMultiple*			public
 See |yii/mail/BaseMailer::sendMultiple|


*yii/swiftmailer/Mailer::render*				public
 See |yii/mail/BaseMailer::render|


*yii/swiftmailer/Mailer::sendMessage*			protected
>
 sendMessage($message)
<
(boolean) Whether the message is sent successfully

 This method should be implemented by child classes with the actual email
 sending logic.
    [$message] (\yii\mail\MessageInterface) The message to be sent


*yii/swiftmailer/Mailer::saveMessage*			protected
 See |yii/mail/BaseMailer::saveMessage|


*yii/swiftmailer/Mailer::generateMessageFileName*		public
 See |yii/mail/BaseMailer::generateMessageFileName|


*yii/swiftmailer/Mailer::getViewPath*			public
 See |yii/mail/BaseMailer::getViewPath|


*yii/swiftmailer/Mailer::setViewPath*			public
 See |yii/mail/BaseMailer::setViewPath|


*yii/swiftmailer/Mailer::beforeSend*			public
 See |yii/mail/BaseMailer::beforeSend|


*yii/swiftmailer/Mailer::afterSend*			public
 See |yii/mail/BaseMailer::afterSend|


*yii/swiftmailer/Mailer::getSwiftMailer*			public
>
 getSwiftMailer()
<
(array|\Swift_Mailer) Swift mailer instance or array configuration.



*yii/swiftmailer/Mailer::setTransport*			public
>
 setTransport($transport)
<
(void)

    [$transport] (array|\Swift_Transport) 


*yii/swiftmailer/Mailer::getTransport*			public
>
 getTransport()
<
(array|\Swift_Transport) 



*yii/swiftmailer/Mailer::createSwiftMailer*		protected
>
 createSwiftMailer()
<
(\Swift_Mailer) Mailer instance.



*yii/swiftmailer/Mailer::createTransport*			protected
>
 createTransport($config)
<
(\Swift_Transport) Transport instance.

    [$config] (array) Transport configuration.


*yii/swiftmailer/Mailer::createSwiftObject*		protected
>
 createSwiftObject($config)
<
(Object) Created object

    [$config] (array) Object configuration



 vim:tw=78:ts=8:ft=help:norl:
