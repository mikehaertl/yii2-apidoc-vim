
*yii/httpclient/CurlTransport*   >> |yii/httpclient/Transport|
==============================

DESCRIPTION
------------------------------------------------------------------------------

 Note: this transport requires PHP 'curl' extension installed.

 For this transport, you may setup request options as [cURL
 Options](http://php.net/manual/en/function.curl-setopt.php)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/httpclient/CurlTransport::className*			public

 See |yii/base/BaseObject::className|


*yii/httpclient/CurlTransport::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/httpclient/CurlTransport::init*			public

 See |yii/base/BaseObject::init|


*yii/httpclient/CurlTransport::__get*			public

 See |yii/base/Component::__get|


*yii/httpclient/CurlTransport::__set*			public

 See |yii/base/Component::__set|


*yii/httpclient/CurlTransport::__isset*			public

 See |yii/base/Component::__isset|


*yii/httpclient/CurlTransport::__unset*			public

 See |yii/base/Component::__unset|


*yii/httpclient/CurlTransport::__call*			public

 See |yii/base/Component::__call|


*yii/httpclient/CurlTransport::hasProperty*		public

 See |yii/base/Component::hasProperty|


*yii/httpclient/CurlTransport::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/httpclient/CurlTransport::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/httpclient/CurlTransport::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/httpclient/CurlTransport::__clone*			public

 See |yii/base/Component::__clone|


*yii/httpclient/CurlTransport::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/httpclient/CurlTransport::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/httpclient/CurlTransport::on*			public

 See |yii/base/Component::on|


*yii/httpclient/CurlTransport::off*			public

 See |yii/base/Component::off|


*yii/httpclient/CurlTransport::trigger*			public

 See |yii/base/Component::trigger|


*yii/httpclient/CurlTransport::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/httpclient/CurlTransport::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/httpclient/CurlTransport::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/httpclient/CurlTransport::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/httpclient/CurlTransport::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/httpclient/CurlTransport::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/httpclient/CurlTransport::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/httpclient/CurlTransport::send*			public
>
 send($request)
<
return (\yii\httpclient\Response) Response instance.







    [$request] (\yii\httpclient\Request) Request to be sent.


*yii/httpclient/CurlTransport::batchSend*			public
>
 batchSend($requests)
<
return (\yii\httpclient\Response[]) Responses list.



 Particular transport may benefit from this method, allowing sending requests
 in parallel. This method accepts an array of the 'Request' objects and
 returns an array of the  'Response' objects. Keys of the response array
 correspond the ones from request array.



    [$requests] (\yii\httpclient\Request[]) Requests to perform.



 vim:tw=78:ts=8:ft=help:norl:
