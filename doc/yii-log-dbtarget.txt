
*yii/log/DbTarget*   >> |yii/log/Target|
==================

DESCRIPTION
------------------------------------------------------------------------------

 The database connection is specified by 'db'. Database schema could be
 initialized by applying migration:

 ''' yii migrate --migrationPath=@yii/log/migrations/ '''

 If you don't want to use migration and need SQL instead, files for all
 databases are in migrations directory.

 You may change the name of the table used to store the data by setting
 'logTable'.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/log/Target::$categories|
 |yii/log/Target::$except|
 |yii/log/Target::$logVars|
 |yii/log/Target::$prefix|
 |yii/log/Target::$exportInterval|
 |yii/log/Target::$messages|
 |yii/log/Target::$microtime|


$db					*yii/log/DbTarget::$db*

 (\yii\db\Connection|array|string) The DB connection object or the application
 component ID of the DB connection. After the DbTarget object is created, if
 you want to change this property, you should only assign it with a DB
 connection object. Starting from version 2.0.2, this can also be a
 configuration array for creating the object.

$logTable				*yii/log/DbTarget::$logTable*

 (string) Name of the DB table to store cache content. Defaults to "log".



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/log/Target::collect|
 |yii/log/Target::getContextMessage|
 |yii/log/Target::getLevels|
 |yii/log/Target::setLevels|
 |yii/log/Target::filterMessages|
 |yii/log/Target::formatMessage|
 |yii/log/Target::getMessagePrefix|
 |yii/log/Target::setEnabled|
 |yii/log/Target::getEnabled|
 |yii/log/Target::getTime|


*yii/log/DbTarget::init*					public
>
 init()
<
return (void)

 Initializes the DbTarget component.

 This method will initialize the 'db' property to make sure it refers to a
 valid DB connection.


*yii/log/DbTarget::export*				public
>
 export()
<
return (void)

 Stores log messages to DB.

 Starting from version 2.0.14, this method throws LogRuntimeException in case
 the log can not be exported.



 vim:tw=78:ts=8:ft=help:norl:
