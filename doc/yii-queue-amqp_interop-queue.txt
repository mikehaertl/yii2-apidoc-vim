
*yii/queue/amqp_interop/Queue*   >> |yii/queue/cli/Queue|
==============================


PROPERTY DETAILS
------------------------------------------------------------------------------

$strictJobType				*yii/queue/amqp_interop/Queue::$strictJobType*

 See |yii/queue/Queue::$strictJobType|

$serializer				*yii/queue/amqp_interop/Queue::$serializer*

 See |yii/queue/Queue::$serializer|

$ttr					*yii/queue/amqp_interop/Queue::$ttr*

 See |yii/queue/Queue::$ttr|

$attempts				*yii/queue/amqp_interop/Queue::$attempts*

 See |yii/queue/Queue::$attempts|

$loopConfig				*yii/queue/amqp_interop/Queue::$loopConfig*

 See |yii/queue/cli/Queue::$loopConfig|

$commandClass				*yii/queue/amqp_interop/Queue::$commandClass*

 (string) Command class name

$commandOptions				*yii/queue/amqp_interop/Queue::$commandOptions*

 See |yii/queue/cli/Queue::$commandOptions|

$messageHandler				*yii/queue/amqp_interop/Queue::$messageHandler*

 See |yii/queue/cli/Queue::$messageHandler|

$dsn					*yii/queue/amqp_interop/Queue::$dsn*

 (string)

$host					*yii/queue/amqp_interop/Queue::$host*

 (string|null)

$port					*yii/queue/amqp_interop/Queue::$port*

 (string|null)

$user					*yii/queue/amqp_interop/Queue::$user*

 (string|null)

$password				*yii/queue/amqp_interop/Queue::$password*

 (string|null)

$vhost					*yii/queue/amqp_interop/Queue::$vhost*

 (string|null)

$readTimeout				*yii/queue/amqp_interop/Queue::$readTimeout*

 (float|null)

$writeTimeout				*yii/queue/amqp_interop/Queue::$writeTimeout*

 (float|null)

$connectionTimeout			*yii/queue/amqp_interop/Queue::$connectionTimeout*

 (float|null)

$heartbeat				*yii/queue/amqp_interop/Queue::$heartbeat*

 (float|null)

$persisted				*yii/queue/amqp_interop/Queue::$persisted*

 (bool|null)

$lazy					*yii/queue/amqp_interop/Queue::$lazy*

 (bool|null)

$qosGlobal				*yii/queue/amqp_interop/Queue::$qosGlobal*

 (bool|null)

$qosPrefetchSize			*yii/queue/amqp_interop/Queue::$qosPrefetchSize*

 (int|null)

$qosPrefetchCount			*yii/queue/amqp_interop/Queue::$qosPrefetchCount*

 (int|null)

$sslOn					*yii/queue/amqp_interop/Queue::$sslOn*

 (bool|null)

$sslVerify				*yii/queue/amqp_interop/Queue::$sslVerify*

 (bool|null)

$sslCacert				*yii/queue/amqp_interop/Queue::$sslCacert*

 (string|null)

$sslCert				*yii/queue/amqp_interop/Queue::$sslCert*

 (string|null)

$sslKey					*yii/queue/amqp_interop/Queue::$sslKey*

 (string|null)

$queueName				*yii/queue/amqp_interop/Queue::$queueName*

 (string)

$exchangeName				*yii/queue/amqp_interop/Queue::$exchangeName*

 (string)

$driver					*yii/queue/amqp_interop/Queue::$driver*

 (string)

$maxPriority				*yii/queue/amqp_interop/Queue::$maxPriority*

 (int)

$context				*yii/queue/amqp_interop/Queue::$context*

 (\Interop\Amqp\AmqpContext)

$supportedDrivers			*yii/queue/amqp_interop/Queue::$supportedDrivers*

 (string[])

$setupBrokerDone			*yii/queue/amqp_interop/Queue::$setupBrokerDone*

 (bool)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/queue/amqp_interop/Queue::className*			public

 See |yii/base/BaseObject::className|


*yii/queue/amqp_interop/Queue::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/queue/amqp_interop/Queue::init*			public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/queue/amqp_interop/Queue::__get*			public

 See |yii/base/Component::__get|


*yii/queue/amqp_interop/Queue::__set*			public

 See |yii/base/Component::__set|


*yii/queue/amqp_interop/Queue::__isset*			public

 See |yii/base/Component::__isset|


*yii/queue/amqp_interop/Queue::__unset*			public

 See |yii/base/Component::__unset|


*yii/queue/amqp_interop/Queue::__call*			public

 See |yii/base/Component::__call|


*yii/queue/amqp_interop/Queue::hasProperty*		public

 See |yii/base/Component::hasProperty|


*yii/queue/amqp_interop/Queue::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/queue/amqp_interop/Queue::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/queue/amqp_interop/Queue::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/queue/amqp_interop/Queue::__clone*			public

 See |yii/base/Component::__clone|


*yii/queue/amqp_interop/Queue::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/queue/amqp_interop/Queue::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/queue/amqp_interop/Queue::on*			public

 See |yii/base/Component::on|


*yii/queue/amqp_interop/Queue::off*			public

 See |yii/base/Component::off|


*yii/queue/amqp_interop/Queue::trigger*			public

 See |yii/base/Component::trigger|


*yii/queue/amqp_interop/Queue::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/queue/amqp_interop/Queue::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/queue/amqp_interop/Queue::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/queue/amqp_interop/Queue::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/queue/amqp_interop/Queue::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/queue/amqp_interop/Queue::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/queue/amqp_interop/Queue::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/queue/amqp_interop/Queue::ttr*			public

 See |yii/queue/Queue::ttr|


*yii/queue/amqp_interop/Queue::delay*			public

 See |yii/queue/Queue::delay|


*yii/queue/amqp_interop/Queue::priority*			public

 See |yii/queue/Queue::priority|


*yii/queue/amqp_interop/Queue::push*			public

 See |yii/queue/Queue::push|


*yii/queue/amqp_interop/Queue::pushMessage*		protected
>
 pushMessage($payload, $ttr, $delay, $priority)
<
return (string) Id of a job message







    [$payload] () 
    [$ttr] (int) Time to reserve in seconds
    [$delay] (int) 
    [$priority] (mixed) 


*yii/queue/amqp_interop/Queue::getWorkerPid*		public

 See |yii/queue/cli/Queue::getWorkerPid|


*yii/queue/amqp_interop/Queue::handleMessage*		protected

 See |yii/queue/cli/Queue::handleMessage|


*yii/queue/amqp_interop/Queue::handleError*		public

 See |yii/queue/Queue::handleError|


*yii/queue/amqp_interop/Queue::isWaiting*			public

 See |yii/queue/Queue::isWaiting|


*yii/queue/amqp_interop/Queue::isReserved*		public

 See |yii/queue/Queue::isReserved|


*yii/queue/amqp_interop/Queue::isDone*			public

 See |yii/queue/Queue::isDone|


*yii/queue/amqp_interop/Queue::status*			public
>
 status($id)
<
return (int) Status code







    [$id] (string) Of a job message


*yii/queue/amqp_interop/Queue::getCommandId*		protected

 See |yii/queue/cli/Queue::getCommandId|


*yii/queue/amqp_interop/Queue::bootstrap*			public

 See |yii/queue/cli/Queue::bootstrap|


*yii/queue/amqp_interop/Queue::runWorker*			protected

 See |yii/queue/cli/Queue::runWorker|


*yii/queue/amqp_interop/Queue::execute*			public

 See |yii/queue/cli/Queue::execute|


*yii/queue/amqp_interop/Queue::listen*			public
>
 listen()
<
return (void)

 Listens amqp-queue and runs new jobs.


*yii/queue/amqp_interop/Queue::getContext*		public
>
 getContext()
<
return (\Interop\Amqp\AmqpContext) 



*yii/queue/amqp_interop/Queue::open*			protected
>
 open()
<
return (void)

 Opens connection and channel


*yii/queue/amqp_interop/Queue::setupBroker*		protected
>
 setupBroker()
<
return (void)



*yii/queue/amqp_interop/Queue::close*			protected
>
 close()
<
return (void)

 Closes connection and channel


*yii/queue/amqp_interop/Queue::redeliver*			protected
>
 redeliver($message)
<
return (void)

 {@inheritdoc}

    [$message] () 



 vim:tw=78:ts=8:ft=help:norl:
