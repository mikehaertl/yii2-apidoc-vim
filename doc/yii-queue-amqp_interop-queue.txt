
*yii/queue/amqp_interop/Queue*   >> |yii/queue/cli/Queue|
==============================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/queue/Queue::$strictJobType|
 |yii/queue/Queue::$serializer|
 |yii/queue/Queue::$ttr|
 |yii/queue/Queue::$attempts|
 |yii/queue/cli/Queue::$loopConfig|
 |yii/queue/cli/Queue::$commandOptions|
 |yii/queue/cli/Queue::$messageHandler|


$commandClass				*yii/queue/amqp_interop/Queue::$commandClass*

 (string) Command class name

$dsn					*yii/queue/amqp_interop/Queue::$dsn*

 (string)

$host					*yii/queue/amqp_interop/Queue::$host*

 (string|null)

$port					*yii/queue/amqp_interop/Queue::$port*

 (string|null)

$user					*yii/queue/amqp_interop/Queue::$user*

 (string|null)

$password				*yii/queue/amqp_interop/Queue::$password*

 (string|null)

$vhost					*yii/queue/amqp_interop/Queue::$vhost*

 (string|null)

$readTimeout				*yii/queue/amqp_interop/Queue::$readTimeout*

 (float|null)

$writeTimeout				*yii/queue/amqp_interop/Queue::$writeTimeout*

 (float|null)

$connectionTimeout			*yii/queue/amqp_interop/Queue::$connectionTimeout*

 (float|null)

$heartbeat				*yii/queue/amqp_interop/Queue::$heartbeat*

 (float|null)

$persisted				*yii/queue/amqp_interop/Queue::$persisted*

 (bool|null)

$lazy					*yii/queue/amqp_interop/Queue::$lazy*

 (bool|null)

$qosGlobal				*yii/queue/amqp_interop/Queue::$qosGlobal*

 (bool|null)

$qosPrefetchSize			*yii/queue/amqp_interop/Queue::$qosPrefetchSize*

 (int|null)

$qosPrefetchCount			*yii/queue/amqp_interop/Queue::$qosPrefetchCount*

 (int|null)

$sslOn					*yii/queue/amqp_interop/Queue::$sslOn*

 (bool|null)

$sslVerify				*yii/queue/amqp_interop/Queue::$sslVerify*

 (bool|null)

$sslCacert				*yii/queue/amqp_interop/Queue::$sslCacert*

 (string|null)

$sslCert				*yii/queue/amqp_interop/Queue::$sslCert*

 (string|null)

$sslKey					*yii/queue/amqp_interop/Queue::$sslKey*

 (string|null)

$queueName				*yii/queue/amqp_interop/Queue::$queueName*

 (string)

$exchangeName				*yii/queue/amqp_interop/Queue::$exchangeName*

 (string)

$driver					*yii/queue/amqp_interop/Queue::$driver*

 (string)

$maxPriority				*yii/queue/amqp_interop/Queue::$maxPriority*

 (int)

$context				*yii/queue/amqp_interop/Queue::$context*

 (\Interop\Amqp\AmqpContext)

$supportedDrivers			*yii/queue/amqp_interop/Queue::$supportedDrivers*

 (string[])

$setupBrokerDone			*yii/queue/amqp_interop/Queue::$setupBrokerDone*

 (bool)



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/queue/Queue::ttr|
 |yii/queue/Queue::delay|
 |yii/queue/Queue::priority|
 |yii/queue/Queue::push|
 |yii/queue/Queue::getWorkerPid|
 |yii/queue/Queue::handleMessage|
 |yii/queue/Queue::unserializeMessage|
 |yii/queue/Queue::handleError|
 |yii/queue/Queue::isWaiting|
 |yii/queue/Queue::isReserved|
 |yii/queue/Queue::isDone|
 |yii/queue/cli/Queue::getCommandId|
 |yii/queue/cli/Queue::bootstrap|
 |yii/queue/cli/Queue::runWorker|
 |yii/queue/cli/Queue::execute|


*yii/queue/amqp_interop/Queue::init*			public
>
 init()
<
return (void)








*yii/queue/amqp_interop/Queue::pushMessage*		protected
>
 pushMessage($payload, $ttr, $delay, $priority)
<
return (string) Id of a job message







    [$payload] () 
    [$ttr] (int) Time to reserve in seconds
    [$delay] (int) 
    [$priority] (mixed) 


*yii/queue/amqp_interop/Queue::status*			public
>
 status($id)
<
return (int) Status code







    [$id] (string) Of a job message


*yii/queue/amqp_interop/Queue::listen*			public
>
 listen()
<
return (void)

 Listens amqp-queue and runs new jobs.


*yii/queue/amqp_interop/Queue::getContext*		public
>
 getContext()
<
return (\Interop\Amqp\AmqpContext) 



*yii/queue/amqp_interop/Queue::open*			protected
>
 open()
<
return (void)

 Opens connection and channel.


*yii/queue/amqp_interop/Queue::setupBroker*		protected
>
 setupBroker()
<
return (void)



*yii/queue/amqp_interop/Queue::close*			protected
>
 close()
<
return (void)

 Closes connection and channel.


*yii/queue/amqp_interop/Queue::redeliver*			protected
>
 redeliver($message)
<
return (void)

    [$message] () 



 vim:tw=78:ts=8:ft=help:norl:
