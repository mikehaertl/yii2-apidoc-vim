
*yii/db/mssql/QueryBuilder*   >> |yii/db/QueryBuilder|
===========================


PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/mssql/QueryBuilder::$db*
 See |yii/db/QueryBuilder::$db|

$separator				*yii/db/mssql/QueryBuilder::$separator*
 See |yii/db/QueryBuilder::$separator|

$typeMap				*yii/db/mssql/QueryBuilder::$typeMap*
 (array) Mapping from abstract column types (keys) to physical column types
 (values).

$conditionBuilders			*yii/db/mssql/QueryBuilder::$conditionBuilders*
 See |yii/db/QueryBuilder::$conditionBuilders|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/db/mssql/QueryBuilder::className*			public
 See |yii/base/Object::className|


*yii/db/mssql/QueryBuilder::__construct*			public
 See |yii/db/QueryBuilder::__construct|


*yii/db/mssql/QueryBuilder::init*				public
 See |yii/base/Object::init|


*yii/db/mssql/QueryBuilder::__get*			public
 See |yii/base/Object::__get|


*yii/db/mssql/QueryBuilder::__set*			public
 See |yii/base/Object::__set|


*yii/db/mssql/QueryBuilder::__isset*			public
 See |yii/base/Object::__isset|


*yii/db/mssql/QueryBuilder::__unset*			public
 See |yii/base/Object::__unset|


*yii/db/mssql/QueryBuilder::__call*			public
 See |yii/base/Object::__call|


*yii/db/mssql/QueryBuilder::hasProperty*			public
 See |yii/base/Object::hasProperty|


*yii/db/mssql/QueryBuilder::canGetProperty*		public
 See |yii/base/Object::canGetProperty|


*yii/db/mssql/QueryBuilder::canSetProperty*		public
 See |yii/base/Object::canSetProperty|


*yii/db/mssql/QueryBuilder::hasMethod*			public
 See |yii/base/Object::hasMethod|


*yii/db/mssql/QueryBuilder::build*			public
 See |yii/db/QueryBuilder::build|


*yii/db/mssql/QueryBuilder::insert*			public
 See |yii/db/QueryBuilder::insert|


*yii/db/mssql/QueryBuilder::batchInsert*			public
 See |yii/db/QueryBuilder::batchInsert|


*yii/db/mssql/QueryBuilder::update*			public
 See |yii/db/QueryBuilder::update|


*yii/db/mssql/QueryBuilder::delete*			public
 See |yii/db/QueryBuilder::delete|


*yii/db/mssql/QueryBuilder::createTable*			public
 See |yii/db/QueryBuilder::createTable|


*yii/db/mssql/QueryBuilder::renameTable*			public
>
 renameTable($table, $newName)
<
(string) The SQL statement for renaming a DB table.

    [$table] (string) The table to be renamed. The name will be properly
    quoted by the method.
    [$newName] (string) The new table name. The name will be properly quoted
    by the method.


*yii/db/mssql/QueryBuilder::dropTable*			public
 See |yii/db/QueryBuilder::dropTable|


*yii/db/mssql/QueryBuilder::addPrimaryKey*		public
 See |yii/db/QueryBuilder::addPrimaryKey|


*yii/db/mssql/QueryBuilder::dropPrimaryKey*		public
 See |yii/db/QueryBuilder::dropPrimaryKey|


*yii/db/mssql/QueryBuilder::truncateTable*		public
 See |yii/db/QueryBuilder::truncateTable|


*yii/db/mssql/QueryBuilder::addColumn*			public
 See |yii/db/QueryBuilder::addColumn|


*yii/db/mssql/QueryBuilder::dropColumn*			public
 See |yii/db/QueryBuilder::dropColumn|


*yii/db/mssql/QueryBuilder::renameColumn*			public
>
 renameColumn($table, $name, $newName)
<
(string) The SQL statement for renaming a DB column.

    [$table] (string) The table whose column is to be renamed. The name will
    be properly quoted by the method.
    [$name] (string) The old name of the column. The name will be properly
    quoted by the method.
    [$newName] (string) The new name of the column. The name will be properly
    quoted by the method.


*yii/db/mssql/QueryBuilder::alterColumn*			public
>
 alterColumn($table, $column, $type)
<
(string) The SQL statement for changing the definition of a column.

    [$table] (string) The table whose column is to be changed. The table name
    will be properly quoted by the method.
    [$column] (string) The name of the column to be changed. The name will be
    properly quoted by the method.
    [$type] (string) The new column type. The 'getColumnType' method will be
    invoked to convert abstract column type (if any) into the physical one.
    Anything that is not recognized as abstract type will be kept in the
    generated SQL. For example, 'string' will be turned into 'varchar(255)',
    while 'string not null' will become 'varchar(255) not null'.


*yii/db/mssql/QueryBuilder::addForeignKey*		public
 See |yii/db/QueryBuilder::addForeignKey|


*yii/db/mssql/QueryBuilder::dropForeignKey*		public
 See |yii/db/QueryBuilder::dropForeignKey|


*yii/db/mssql/QueryBuilder::createIndex*			public
 See |yii/db/QueryBuilder::createIndex|


*yii/db/mssql/QueryBuilder::dropIndex*			public
 See |yii/db/QueryBuilder::dropIndex|


*yii/db/mssql/QueryBuilder::resetSequence*		public
 See |yii/db/QueryBuilder::resetSequence|


*yii/db/mssql/QueryBuilder::checkIntegrity*		public
>
 checkIntegrity($check='true', $schema='''', $table='''')
<
(string) The SQL statement for checking integrity

    [$check] (boolean) Whether to turn on or off the integrity check.
    [$schema] (string) The schema of the tables. Defaults to empty string,
    meaning the current or default schema.
    [$table] (string) The table name. Defaults to empty string, meaning that
    no table will be changed.


*yii/db/mssql/QueryBuilder::getColumnType*		public
 See |yii/db/QueryBuilder::getColumnType|


*yii/db/mssql/QueryBuilder::buildSelect*			public
 See |yii/db/QueryBuilder::buildSelect|


*yii/db/mssql/QueryBuilder::buildFrom*			public
 See |yii/db/QueryBuilder::buildFrom|


*yii/db/mssql/QueryBuilder::buildJoin*			public
 See |yii/db/QueryBuilder::buildJoin|


*yii/db/mssql/QueryBuilder::buildWhere*			public
 See |yii/db/QueryBuilder::buildWhere|


*yii/db/mssql/QueryBuilder::buildGroupBy*			public
 See |yii/db/QueryBuilder::buildGroupBy|


*yii/db/mssql/QueryBuilder::buildHaving*			public
 See |yii/db/QueryBuilder::buildHaving|


*yii/db/mssql/QueryBuilder::buildOrderByAndLimit*		public
>
 buildOrderByAndLimit($sql, $orderBy, $limit, $offset)
<
(string) The SQL completed with ORDER BY/LIMIT/OFFSET (if any)

    [$sql] (string) The existing SQL (without ORDER BY/LIMIT/OFFSET)
    [$orderBy] (array) The order by columns. See 'Query::orderBy' for more
    details on how to specify this parameter.
    [$limit] (integer) The limit number. See 'Query::limit' for more details.
    [$offset] (integer) The offset number. See 'Query::offset' for more
    details.


*yii/db/mssql/QueryBuilder::buildOrderBy*			public
 See |yii/db/QueryBuilder::buildOrderBy|


*yii/db/mssql/QueryBuilder::buildLimit*			public
 See |yii/db/QueryBuilder::buildLimit|


*yii/db/mssql/QueryBuilder::hasLimit*			protected
 See |yii/db/QueryBuilder::hasLimit|


*yii/db/mssql/QueryBuilder::hasOffset*			protected
 See |yii/db/QueryBuilder::hasOffset|


*yii/db/mssql/QueryBuilder::buildUnion*			public
 See |yii/db/QueryBuilder::buildUnion|


*yii/db/mssql/QueryBuilder::buildColumns*			public
 See |yii/db/QueryBuilder::buildColumns|


*yii/db/mssql/QueryBuilder::buildCondition*		public
 See |yii/db/QueryBuilder::buildCondition|


*yii/db/mssql/QueryBuilder::buildHashCondition*		public
 See |yii/db/QueryBuilder::buildHashCondition|


*yii/db/mssql/QueryBuilder::buildAndCondition*		public
 See |yii/db/QueryBuilder::buildAndCondition|


*yii/db/mssql/QueryBuilder::buildNotCondition*		public
 See |yii/db/QueryBuilder::buildNotCondition|


*yii/db/mssql/QueryBuilder::buildBetweenCondition*	public
 See |yii/db/QueryBuilder::buildBetweenCondition|


*yii/db/mssql/QueryBuilder::buildInCondition*		public
 See |yii/db/QueryBuilder::buildInCondition|


*yii/db/mssql/QueryBuilder::buildCompositeInCondition*	protected
 See |yii/db/QueryBuilder::buildCompositeInCondition|


*yii/db/mssql/QueryBuilder::buildLikeCondition*		public
 See |yii/db/QueryBuilder::buildLikeCondition|


*yii/db/mssql/QueryBuilder::buildExistsCondition*		public
 See |yii/db/QueryBuilder::buildExistsCondition|


*yii/db/mssql/QueryBuilder::buildSimpleCondition*		public
 See |yii/db/QueryBuilder::buildSimpleCondition|


*yii/db/mssql/QueryBuilder::newBuildOrderByAndLimit*	protected
>
 newBuildOrderByAndLimit($sql, $orderBy, $limit, $offset)
<
(string) The SQL completed with ORDER BY/LIMIT/OFFSET (if any)

    [$sql] (string) The existing SQL (without ORDER BY/LIMIT/OFFSET)
    [$orderBy] (array) The order by columns. See 'Query::orderBy' for more
    details on how to specify this parameter.
    [$limit] (integer) The limit number. See 'Query::limit' for more details.
    [$offset] (integer) The offset number. See 'Query::offset' for more
    details.


*yii/db/mssql/QueryBuilder::oldBuildOrderByAndLimit*	protected
>
 oldBuildOrderByAndLimit($sql, $orderBy, $limit, $offset)
<
(string) The SQL completed with ORDER BY/LIMIT/OFFSET (if any)

    [$sql] (string) The existing SQL (without ORDER BY/LIMIT/OFFSET)
    [$orderBy] (array) The order by columns. See 'Query::orderBy' for more
    details on how to specify this parameter.
    [$limit] (integer) The limit number. See 'Query::limit' for more details.
    [$offset] (integer) The offset number. See 'Query::offset' for more
    details.


*yii/db/mssql/QueryBuilder::getAllColumnNames*		protected
>
 getAllColumnNames($modelClass='null')
<
(array|null) Array of column names

    [$modelClass] (string) Name of the model class


*yii/db/mssql/QueryBuilder::isOldMssql*			protected
>
 isOldMssql()
<
(boolean) Whether the version of the MSSQL being used is older than 2012.




 vim:tw=78:ts=8:ft=help:norl:
