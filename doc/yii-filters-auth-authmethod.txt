
*yii/filters/auth/AuthMethod*   >> |yii/base/ActionFilter|
=============================

SUBCLASSES
------------------------------------------------------------------------------

|yii/filters/auth/HttpBasicAuth|
|yii/filters/auth/HttpHeaderAuth|
|yii/filters/auth/CompositeAuth|
|yii/filters/auth/QueryParamAuth|
|yii/filters/auth/HttpBearerAuth|


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Behavior::$owner|
 |yii/base/ActionFilter::$only|
 |yii/base/ActionFilter::$except|


$user					*yii/filters/auth/AuthMethod::$user*

 (\yii\web\User) The user object representing the user authentication status.
 If not set, the 'user' application component will be used.

$request				*yii/filters/auth/AuthMethod::$request*

 (\yii\web\Request) The current request. If not set, the 'request' application
 component will be used.

$response				*yii/filters/auth/AuthMethod::$response*

 (\yii\web\Response) The response to be sent. If not set, the 'response'
 application component will be used.

$optional				*yii/filters/auth/AuthMethod::$optional*

 (array) List of action IDs that this filter will be applied to, but auth
 failure will not lead to error. It may be used for actions, that are allowed
 for public, but return some additional data for authenticated users. Defaults
 to empty, meaning authentication is not optional for any action. Since
 version 2.0.10 action IDs can be specified as wildcards, e.g. 'site/*'.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Behavior::events|
 |yii/base/ActionFilter::attach|
 |yii/base/ActionFilter::detach|
 |yii/base/ActionFilter::beforeFilter|
 |yii/base/ActionFilter::afterFilter|
 |yii/base/ActionFilter::afterAction|
 |yii/base/ActionFilter::getActionId|
 |yii/base/ActionFilter::isActive|
 |yii/filters/auth/AuthInterface::authenticate|


*yii/filters/auth/AuthMethod::beforeAction*		public
>
 beforeAction($action)
<
return (void)

 {@inheritdoc}

    [$action] () 


*yii/filters/auth/AuthMethod::challenge*			public
>
 challenge($response)
<
return (void)

 {@inheritdoc}

    [$response] () 


*yii/filters/auth/AuthMethod::handleFailure*		public
>
 handleFailure($response)
<
return (void)

 {@inheritdoc}

    [$response] () 


*yii/filters/auth/AuthMethod::isOptional*			protected
>
 isOptional($action)
<
return (bool) Whether authentication is optional or not.

 Checks, whether authentication is optional for the given action.

    [$action] (\yii\base\Action) Action to be checked.



 vim:tw=78:ts=8:ft=help:norl:
