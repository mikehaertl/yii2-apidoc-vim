
*yii/filters/auth/AuthMethod*   >> |yii/base/ActionFilter|
=============================

SUBCLASSES
------------------------------------------------------------------------------

|yii/filters/auth/HttpBasicAuth|
|yii/filters/auth/CompositeAuth|
|yii/filters/auth/QueryParamAuth|
|yii/filters/auth/HttpBearerAuth|


PROPERTY DETAILS
------------------------------------------------------------------------------

$owner					*yii/filters/auth/AuthMethod::$owner*

 See |yii/base/Behavior::$owner|

$only					*yii/filters/auth/AuthMethod::$only*

 See |yii/base/ActionFilter::$only|

$except					*yii/filters/auth/AuthMethod::$except*

 See |yii/base/ActionFilter::$except|

$user					*yii/filters/auth/AuthMethod::$user*

 (\yii\web\User) The user object representing the user authentication status.
 If not set, the 'user' application component will be used.

$request				*yii/filters/auth/AuthMethod::$request*

 (\yii\web\Request) The current request. If not set, the 'request' application
 component will be used.

$response				*yii/filters/auth/AuthMethod::$response*

 (\yii\web\Response) The response to be sent. If not set, the 'response'
 application component will be used.

$optional				*yii/filters/auth/AuthMethod::$optional*

 (array) List of action IDs that this filter will be applied to, but auth
 failure will not lead to error. It may be used for actions, that are allowed
 for public, but return some additional data for authenticated users. Defaults
 to empty, meaning authentication is not optional for any action. Since
 version 2.0.10 action IDs can be specified as wildcards, e.g. 'site/*'.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/filters/auth/AuthMethod::className*			public

 See |yii/base/BaseObject::className|


*yii/filters/auth/AuthMethod::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/filters/auth/AuthMethod::init*			public

 See |yii/base/BaseObject::init|


*yii/filters/auth/AuthMethod::__get*			public

 See |yii/base/BaseObject::__get|


*yii/filters/auth/AuthMethod::__set*			public

 See |yii/base/BaseObject::__set|


*yii/filters/auth/AuthMethod::__isset*			public

 See |yii/base/BaseObject::__isset|


*yii/filters/auth/AuthMethod::__unset*			public

 See |yii/base/BaseObject::__unset|


*yii/filters/auth/AuthMethod::__call*			public

 See |yii/base/BaseObject::__call|


*yii/filters/auth/AuthMethod::hasProperty*		public

 See |yii/base/BaseObject::hasProperty|


*yii/filters/auth/AuthMethod::canGetProperty*		public

 See |yii/base/BaseObject::canGetProperty|


*yii/filters/auth/AuthMethod::canSetProperty*		public

 See |yii/base/BaseObject::canSetProperty|


*yii/filters/auth/AuthMethod::hasMethod*			public

 See |yii/base/BaseObject::hasMethod|


*yii/filters/auth/AuthMethod::events*			public

 See |yii/base/Behavior::events|


*yii/filters/auth/AuthMethod::attach*			public

 See |yii/base/ActionFilter::attach|


*yii/filters/auth/AuthMethod::detach*			public

 See |yii/base/ActionFilter::detach|


*yii/filters/auth/AuthMethod::beforeFilter*		public

 See |yii/base/ActionFilter::beforeFilter|


*yii/filters/auth/AuthMethod::afterFilter*		public

 See |yii/base/ActionFilter::afterFilter|


*yii/filters/auth/AuthMethod::beforeAction*		public
>
 beforeAction($action)
<
return (bool) Whether the action should continue to be executed.

 This method is invoked right before an action is to be executed (after all
 possible filters.) You may override this method to do last-minute preparation
 for the action.







    [$action] (\yii\base\Action) The action to be executed.


*yii/filters/auth/AuthMethod::afterAction*		public

 See |yii/base/ActionFilter::afterAction|


*yii/filters/auth/AuthMethod::getActionId*		protected

 See |yii/base/ActionFilter::getActionId|


*yii/filters/auth/AuthMethod::isActive*			protected

 See |yii/base/ActionFilter::isActive|


*yii/filters/auth/AuthMethod::challenge*			public
>
 challenge($response)
<
return (void)

 Generates challenges upon authentication failure.



 For example, some appropriate HTTP headers may be generated.



    [$response] (\yii\web\Response) 


*yii/filters/auth/AuthMethod::handleFailure*		public
>
 handleFailure($response)
<
return (void)

 Handles authentication failure.



 The implementation should normally throw UnauthorizedHttpException to
 indicate authentication failure.



    [$response] (\yii\web\Response) 


*yii/filters/auth/AuthMethod::isOptional*			protected
>
 isOptional($action)
<
return (bool) Whether authentication is optional or not.

 Checks, whether authentication is optional for the given action.

    [$action] (\yii\base\Action) Action to be checked.


*yii/filters/auth/AuthMethod::authenticate*		public

 See |yii/filters/auth/AuthInterface::authenticate|



 vim:tw=78:ts=8:ft=help:norl:
