
*yii/db/pgsql/Schema*   >> |yii/db/Schema|
=====================


PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/pgsql/Schema::$db*

 See |yii/db/Schema::$db|

$defaultSchema				*yii/db/pgsql/Schema::$defaultSchema*

 (string) The default schema used for the current session.

$exceptionMap				*yii/db/pgsql/Schema::$exceptionMap*

 See |yii/db/Schema::$exceptionMap|

$columnSchemaClass			*yii/db/pgsql/Schema::$columnSchemaClass*

 See |yii/db/Schema::$columnSchemaClass|

$typeMap				*yii/db/pgsql/Schema::$typeMap*

 (array) Mapping from physical column types (keys) to abstract column types
 (values)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/db/pgsql/Schema::className*				public

 See |yii/base/BaseObject::className|


*yii/db/pgsql/Schema::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/db/pgsql/Schema::init*				public

 See |yii/base/BaseObject::init|


*yii/db/pgsql/Schema::__get*				public

 See |yii/base/BaseObject::__get|


*yii/db/pgsql/Schema::__set*				public

 See |yii/base/BaseObject::__set|


*yii/db/pgsql/Schema::__isset*				public

 See |yii/base/BaseObject::__isset|


*yii/db/pgsql/Schema::__unset*				public

 See |yii/base/BaseObject::__unset|


*yii/db/pgsql/Schema::__call*				public

 See |yii/base/BaseObject::__call|


*yii/db/pgsql/Schema::hasProperty*			public

 See |yii/base/BaseObject::hasProperty|


*yii/db/pgsql/Schema::canGetProperty*			public

 See |yii/base/BaseObject::canGetProperty|


*yii/db/pgsql/Schema::canSetProperty*			public

 See |yii/base/BaseObject::canSetProperty|


*yii/db/pgsql/Schema::hasMethod*				public

 See |yii/base/BaseObject::hasMethod|


*yii/db/pgsql/Schema::resolveTableName*			protected
>
 resolveTableName($name)
<
return (\yii\db\TableSchema) 'TableSchema' with resolved table, schema, etc. names.







    [$name] (string) The table name


*yii/db/pgsql/Schema::findSchemaNames*			protected
>
 findSchemaNames()
<
return (array) All schema names in the database, except system schemas.



 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.




*yii/db/pgsql/Schema::findTableNames*			protected
>
 findTableNames($schema='''')
<
return (array) All table names in the database. The names have NO schema name prefix.



 This method should be overridden by child classes in order to support this
 feature because the default implementation simply throws an exception.



    [$schema] (string) The schema of the tables. Defaults to empty string,
    meaning the current or default schema.


*yii/db/pgsql/Schema::loadTableSchema*			protected
>
 loadTableSchema($name)
<
return (\yii\db\TableSchema|null) DBMS-dependent table metadata, 'null' if the table
does not exist.







    [$name] (string) Table name


*yii/db/pgsql/Schema::createColumnSchema*			protected

 See |yii/db/Schema::createColumnSchema|


*yii/db/pgsql/Schema::getTableSchema*			public

 See |yii/db/Schema::getTableSchema|


*yii/db/pgsql/Schema::getTableSchemas*			public

 See |yii/db/Schema::getTableSchemas|


*yii/db/pgsql/Schema::getSchemaNames*			public

 See |yii/db/Schema::getSchemaNames|


*yii/db/pgsql/Schema::getTableNames*			public

 See |yii/db/Schema::getTableNames|


*yii/db/pgsql/Schema::getQueryBuilder*			public

 See |yii/db/Schema::getQueryBuilder|


*yii/db/pgsql/Schema::getPdoType*				public

 See |yii/db/Schema::getPdoType|


*yii/db/pgsql/Schema::refresh*				public

 See |yii/db/Schema::refresh|


*yii/db/pgsql/Schema::refreshTableSchema*			public

 See |yii/db/Schema::refreshTableSchema|


*yii/db/pgsql/Schema::createQueryBuilder*			public
>
 createQueryBuilder()
<
return (\yii\db\pgsql\QueryBuilder) Query builder instance



*yii/db/pgsql/Schema::createColumnSchemaBuilder*		public

 See |yii/db/Schema::createColumnSchemaBuilder|


*yii/db/pgsql/Schema::findUniqueIndexes*			public
>
 findUniqueIndexes($table)
<
return (array) All unique indexes for the given table.

 Each array element is of the following structure:

   [
       'IndexName1' => ['col1' [, ...]],
       'IndexName2' => ['col2' [, ...]],
   ]



    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/pgsql/Schema::getLastInsertID*			public

 See |yii/db/Schema::getLastInsertID|


*yii/db/pgsql/Schema::supportsSavepoint*			public

 See |yii/db/Schema::supportsSavepoint|


*yii/db/pgsql/Schema::createSavepoint*			public

 See |yii/db/Schema::createSavepoint|


*yii/db/pgsql/Schema::releaseSavepoint*			public

 See |yii/db/Schema::releaseSavepoint|


*yii/db/pgsql/Schema::rollBackSavepoint*			public

 See |yii/db/Schema::rollBackSavepoint|


*yii/db/pgsql/Schema::setTransactionIsolationLevel*	public

 See |yii/db/Schema::setTransactionIsolationLevel|


*yii/db/pgsql/Schema::insert*				public
>
 insert($table, $columns)
<
return (array|false) Primary key values or false if the command fails







    [$table] (string) The table that new rows will be inserted into.
    [$columns] (array) The column data (name => value) to be inserted into the
    table.


*yii/db/pgsql/Schema::quoteValue*				public

 See |yii/db/Schema::quoteValue|


*yii/db/pgsql/Schema::quoteTableName*			public

 See |yii/db/Schema::quoteTableName|


*yii/db/pgsql/Schema::quoteColumnName*			public

 See |yii/db/Schema::quoteColumnName|


*yii/db/pgsql/Schema::quoteSimpleTableName*		public
>
 quoteSimpleTableName($name)
<
return (string) The properly quoted table name

 A simple table name has no schema prefix.

    [$name] (string) Table name


*yii/db/pgsql/Schema::quoteSimpleColumnName*		public

 See |yii/db/Schema::quoteSimpleColumnName|


*yii/db/pgsql/Schema::getRawTableName*			public

 See |yii/db/Schema::getRawTableName|


*yii/db/pgsql/Schema::getColumnPhpType*			protected

 See |yii/db/Schema::getColumnPhpType|


*yii/db/pgsql/Schema::convertException*			public

 See |yii/db/Schema::convertException|


*yii/db/pgsql/Schema::isReadQuery*			public

 See |yii/db/Schema::isReadQuery|


*yii/db/pgsql/Schema::getCacheKey*			protected

 See |yii/db/Schema::getCacheKey|


*yii/db/pgsql/Schema::getCacheTag*			protected

 See |yii/db/Schema::getCacheTag|


*yii/db/pgsql/Schema::getTableMetadata*			protected

 See |yii/db/ConstraintFinderTrait::getTableMetadata|


*yii/db/pgsql/Schema::getSchemaMetadata*			protected

 See |yii/db/ConstraintFinderTrait::getSchemaMetadata|


*yii/db/pgsql/Schema::setTableMetadata*			protected

 See |yii/db/Schema::setTableMetadata|


*yii/db/pgsql/Schema::normalizePdoRowKeyCase*		protected

 See |yii/db/Schema::normalizePdoRowKeyCase|


*yii/db/pgsql/Schema::loadTablePrimaryKey*		protected
>
 loadTablePrimaryKey($tableName)
<
return (void)

    [$tableName] () 


*yii/db/pgsql/Schema::loadTableForeignKeys*		protected
>
 loadTableForeignKeys($tableName)
<
return (void)

    [$tableName] () 


*yii/db/pgsql/Schema::loadTableIndexes*			protected
>
 loadTableIndexes($tableName)
<
return (void)

    [$tableName] () 


*yii/db/pgsql/Schema::loadTableUniques*			protected
>
 loadTableUniques($tableName)
<
return (void)

    [$tableName] () 


*yii/db/pgsql/Schema::loadTableChecks*			protected
>
 loadTableChecks($tableName)
<
return (void)

    [$tableName] () 


*yii/db/pgsql/Schema::loadTableDefaultValues*		protected
>
 loadTableDefaultValues($tableName)
<
return (void)

    [$tableName] () 


*yii/db/pgsql/Schema::getTablePrimaryKey*			public

 See |yii/db/ConstraintFinderTrait::getTablePrimaryKey|


*yii/db/pgsql/Schema::getSchemaPrimaryKeys*		public

 See |yii/db/ConstraintFinderTrait::getSchemaPrimaryKeys|


*yii/db/pgsql/Schema::getTableForeignKeys*		public

 See |yii/db/ConstraintFinderTrait::getTableForeignKeys|


*yii/db/pgsql/Schema::getSchemaForeignKeys*		public

 See |yii/db/ConstraintFinderTrait::getSchemaForeignKeys|


*yii/db/pgsql/Schema::getTableIndexes*			public

 See |yii/db/ConstraintFinderTrait::getTableIndexes|


*yii/db/pgsql/Schema::getSchemaIndexes*			public

 See |yii/db/ConstraintFinderTrait::getSchemaIndexes|


*yii/db/pgsql/Schema::getTableUniques*			public

 See |yii/db/ConstraintFinderTrait::getTableUniques|


*yii/db/pgsql/Schema::getSchemaUniques*			public

 See |yii/db/ConstraintFinderTrait::getSchemaUniques|


*yii/db/pgsql/Schema::getTableChecks*			public

 See |yii/db/ConstraintFinderTrait::getTableChecks|


*yii/db/pgsql/Schema::getSchemaChecks*			public

 See |yii/db/ConstraintFinderTrait::getSchemaChecks|


*yii/db/pgsql/Schema::getTableDefaultValues*		public

 See |yii/db/ConstraintFinderTrait::getTableDefaultValues|


*yii/db/pgsql/Schema::getSchemaDefaultValues*		public

 See |yii/db/ConstraintFinderTrait::getSchemaDefaultValues|


*yii/db/pgsql/Schema::findViewNames*			protected
>
 findViewNames($schema='\'\'')
<
return (void)

    [$schema] () 


*yii/db/pgsql/Schema::getViewNames*			public

 See |yii/db/ViewFinderTrait::getViewNames|


*yii/db/pgsql/Schema::resolveTableNames*			protected
>
 resolveTableNames($table, $name)
<
return (void)

    [$table] (\yii\db\TableSchema) The table metadata object
    [$name] (string) The table name


*yii/db/pgsql/Schema::findConstraints*			protected
>
 findConstraints($table)
<
return (void)

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/pgsql/Schema::getUniqueIndexInformation*		protected
>
 getUniqueIndexInformation($table)
<
return (array) With index and column names

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/pgsql/Schema::findColumns*			protected
>
 findColumns($table)
<
return (bool) Whether the table exists in the database

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/pgsql/Schema::loadColumnSchema*			protected
>
 loadColumnSchema($info)
<
return (\yii\db\pgsql\ColumnSchema) The column schema object

    [$info] (array) Column information



 vim:tw=78:ts=8:ft=help:norl:
