
*yii/gii/console/GenerateController*   >> |yii/console/Controller|
====================================

DESCRIPTION
------------------------------------------------------------------------------

 You can use this command to generate models, controllers, etc. For example,
 to generate an ActiveRecord model based on a DB table, you can run:

 ''' $ ./yii gii/model --tableName=city --modelClass=City '''


PROPERTY DETAILS
------------------------------------------------------------------------------

$id					*yii/gii/console/GenerateController::$id*

 See |yii/base/Controller::$id|

$module					*yii/gii/console/GenerateController::$module*

 (\yii\gii\Module)

$defaultAction				*yii/gii/console/GenerateController::$defaultAction*

 See |yii/base/Controller::$defaultAction|

$layout					*yii/gii/console/GenerateController::$layout*

 See |yii/base/Controller::$layout|

$action					*yii/gii/console/GenerateController::$action*

 See |yii/base/Controller::$action|

$interactive				*yii/gii/console/GenerateController::$interactive*

 See |yii/console/Controller::$interactive|

$color					*yii/gii/console/GenerateController::$color*

 See |yii/console/Controller::$color|

$overwrite				*yii/gii/console/GenerateController::$overwrite*

 (boolean) Whether to overwrite all existing code files when in
 non-interactive mode. Defaults to false, meaning none of the existing code
 files will be overwritten. This option is used only when '--interactive=0'.

$generators				*yii/gii/console/GenerateController::$generators*

 (array) A list of the available code generators

$behaviors				*yii/gii/console/GenerateController::$behaviors*

 See |yii/base/Component::$behaviors|

$modules				*yii/gii/console/GenerateController::$modules*

 See |yii/base/Controller::$modules|

$uniqueId				*yii/gii/console/GenerateController::$uniqueId*

 See |yii/base/Controller::$uniqueId|

$route					*yii/gii/console/GenerateController::$route*

 See |yii/base/Controller::$route|

$view					*yii/gii/console/GenerateController::$view*

 See |yii/base/Controller::$view|

$viewPath				*yii/gii/console/GenerateController::$viewPath*

 See |yii/base/Controller::$viewPath|

$passedOptions				*yii/gii/console/GenerateController::$passedOptions*

 See |yii/console/Controller::$passedOptions|

$passedOptionValues			*yii/gii/console/GenerateController::$passedOptionValues*

 See |yii/console/Controller::$passedOptionValues|

$helpSummary				*yii/gii/console/GenerateController::$helpSummary*

 See |yii/console/Controller::$helpSummary|

$help					*yii/gii/console/GenerateController::$help*

 See |yii/console/Controller::$help|

$uniqueID				*yii/gii/console/GenerateController::$uniqueID*

 ()



METHOD DETAILS
------------------------------------------------------------------------------


*yii/gii/console/GenerateController::className*		public

 See |yii/base/Object::className|


*yii/gii/console/GenerateController::__construct*		public

 See |yii/base/Controller::__construct|


*yii/gii/console/GenerateController::init*		public
>
 init()
<
return (void)



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/gii/console/GenerateController::__get*		public
>
 __get($name)
<
return (mixed) The property value or the value of a behavior's property



 This method will check in the following order and act accordingly:

  
   - a property defined by a getter: return the getter result  
   - a property of a behavior: return the behavior property value

 Do not call this method directly as it is a PHP magic method that will be
 implicitly called when executing '$value = $component->property;'.



    [$name] (string) The property name


*yii/gii/console/GenerateController::__set*		public
>
 __set($name, $value)
<
return (void)



 This method will check in the following order and act accordingly:

  
   - a property defined by a setter: set the property value  
   - an event in the format of "on xyz": attach the handler to the
   event "xyz"  
   - a behavior in the format of "as xyz": attach the behavior named as
   "xyz"  
   - a property of a behavior: set the behavior property value

 Do not call this method directly as it is a PHP magic method that will be
 implicitly called when executing '$component->property = $value;'.



    [$name] (string) The property name or the event name
    [$value] (mixed) The property value


*yii/gii/console/GenerateController::__isset*		public

 See |yii/base/Object::__isset|


*yii/gii/console/GenerateController::__unset*		public

 See |yii/base/Object::__unset|


*yii/gii/console/GenerateController::__call*		public

 See |yii/base/Object::__call|


*yii/gii/console/GenerateController::hasProperty*		public

 See |yii/base/Object::hasProperty|


*yii/gii/console/GenerateController::canGetProperty*	public

 See |yii/base/Object::canGetProperty|


*yii/gii/console/GenerateController::canSetProperty*	public

 See |yii/base/Object::canSetProperty|


*yii/gii/console/GenerateController::hasMethod*		public

 See |yii/base/Object::hasMethod|


*yii/gii/console/GenerateController::__clone*		public

 See |yii/base/Component::__clone|


*yii/gii/console/GenerateController::behaviors*		public

 See |yii/base/Component::behaviors|


*yii/gii/console/GenerateController::hasEventHandlers*	public

 See |yii/base/Component::hasEventHandlers|


*yii/gii/console/GenerateController::on*			public

 See |yii/base/Component::on|


*yii/gii/console/GenerateController::off*			public

 See |yii/base/Component::off|


*yii/gii/console/GenerateController::trigger*		public

 See |yii/base/Component::trigger|


*yii/gii/console/GenerateController::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/gii/console/GenerateController::getBehaviors*	public

 See |yii/base/Component::getBehaviors|


*yii/gii/console/GenerateController::attachBehavior*	public

 See |yii/base/Component::attachBehavior|


*yii/gii/console/GenerateController::attachBehaviors*	public

 See |yii/base/Component::attachBehaviors|


*yii/gii/console/GenerateController::detachBehavior*	public

 See |yii/base/Component::detachBehavior|


*yii/gii/console/GenerateController::detachBehaviors*	public

 See |yii/base/Component::detachBehaviors|


*yii/gii/console/GenerateController::ensureBehaviors*	public

 See |yii/base/Component::ensureBehaviors|


*yii/gii/console/GenerateController::actions*		public
>
 actions()
<
return (void)



 This method is meant to be overwritten to declare external actions for the
 controller. It should return an array, with array keys being action IDs, and
 array values the corresponding action class names or action configuration
 arrays. For example,

   return [
       'action1' => 'app\components\Action1',
       'action2' => [
           'class' => 'app\components\Action2',
           'property1' => 'value1',
           'property2' => 'value2',
       ],
   ];

 '\Yii::createObject()' will be used later to create the requested action
 using the configuration provided here.




*yii/gii/console/GenerateController::runAction*		public

 See |yii/console/Controller::runAction|


*yii/gii/console/GenerateController::run*			public

 See |yii/base/Controller::run|


*yii/gii/console/GenerateController::bindActionParams*	public

 See |yii/console/Controller::bindActionParams|


*yii/gii/console/GenerateController::createAction*	public
>
 createAction($id)
<
return (\yii\base\Action) The newly created action instance. Null if the ID doesn't
resolve into any action.



 The method first checks if the action ID has been declared in 'actions()'. If
 so, it will use the configuration declared there to create the action object.
 If not, it will look for a controller method whose name is in the format of
 'actionXyz' where 'Xyz' stands for the action ID. If found, an 'InlineAction'
 representing that method will be created and returned.



    [$id] (string) The action ID.


*yii/gii/console/GenerateController::beforeAction*	public

 See |yii/base/Controller::beforeAction|


*yii/gii/console/GenerateController::afterAction*		public

 See |yii/base/Controller::afterAction|


*yii/gii/console/GenerateController::getModules*		public

 See |yii/base/Controller::getModules|


*yii/gii/console/GenerateController::getUniqueId*		public

 See |yii/base/Controller::getUniqueId|


*yii/gii/console/GenerateController::getRoute*		public

 See |yii/base/Controller::getRoute|


*yii/gii/console/GenerateController::render*		public

 See |yii/base/Controller::render|


*yii/gii/console/GenerateController::renderContent*	public

 See |yii/base/Controller::renderContent|


*yii/gii/console/GenerateController::renderPartial*	public

 See |yii/base/Controller::renderPartial|


*yii/gii/console/GenerateController::renderFile*		public

 See |yii/base/Controller::renderFile|


*yii/gii/console/GenerateController::getView*		public

 See |yii/base/Controller::getView|


*yii/gii/console/GenerateController::setView*		public

 See |yii/base/Controller::setView|


*yii/gii/console/GenerateController::getViewPath*		public

 See |yii/base/Controller::getViewPath|


*yii/gii/console/GenerateController::setViewPath*		public

 See |yii/base/Controller::setViewPath|


*yii/gii/console/GenerateController::findLayoutFile*	public

 See |yii/base/Controller::findLayoutFile|


*yii/gii/console/GenerateController::isColorEnabled*	public

 See |yii/console/Controller::isColorEnabled|


*yii/gii/console/GenerateController::ansiFormat*		public

 See |yii/console/Controller::ansiFormat|


*yii/gii/console/GenerateController::stdout*		public

 See |yii/console/Controller::stdout|


*yii/gii/console/GenerateController::stderr*		public

 See |yii/console/Controller::stderr|


*yii/gii/console/GenerateController::prompt*		public

 See |yii/console/Controller::prompt|


*yii/gii/console/GenerateController::confirm*		public

 See |yii/console/Controller::confirm|


*yii/gii/console/GenerateController::select*		public

 See |yii/console/Controller::select|


*yii/gii/console/GenerateController::options*		public
>
 options($id)
<
return (array) The names of the options valid for the action



 Child classes may override this method to specify possible options.

 Note that the values setting via options are not available until
 'beforeAction()' is being called.



    [$id] () 


*yii/gii/console/GenerateController::optionAliases*	public

 See |yii/console/Controller::optionAliases|


*yii/gii/console/GenerateController::getOptionValues*	public

 See |yii/console/Controller::getOptionValues|


*yii/gii/console/GenerateController::getPassedOptions*	public

 See |yii/console/Controller::getPassedOptions|


*yii/gii/console/GenerateController::getPassedOptionValues*public

 See |yii/console/Controller::getPassedOptionValues|


*yii/gii/console/GenerateController::getHelpSummary*	public

 See |yii/console/Controller::getHelpSummary|


*yii/gii/console/GenerateController::getHelp*		public

 See |yii/console/Controller::getHelp|


*yii/gii/console/GenerateController::getActionHelpSummary*public
>
 getActionHelpSummary($action)
<
return (string) A one-line short summary describing the specified action.







    [$action] (\yii\base\Action) Action to get summary for


*yii/gii/console/GenerateController::getActionHelp*	public
>
 getActionHelp($action)
<
return (string) The detailed help information for the specified action.







    [$action] (\yii\base\Action) Action to get help for


*yii/gii/console/GenerateController::getActionArgsHelp*	public
>
 getActionArgsHelp($action)
<
return (array) The help information of the action arguments



 The returned value should be an array. The keys are the argument names, and
 the values are the corresponding help information. Each value must be an
 array of the following structure:


   - required: boolean, whether this argument is required. 
   - type: string, the PHP type of this argument. 
   - default: string, the default value of this argument 
   - comment: string, the comment of this argument

 The default implementation will return the help information extracted from
 the doc-comment of the parameters corresponding to the action method.



    [$action] (\yii\base\Action) 


*yii/gii/console/GenerateController::getActionOptionsHelp*public
>
 getActionOptionsHelp($action)
<
return (array) The help information of the action options



 The returned value should be an array. The keys are the option names, and the
 values are the corresponding help information. Each value must be an array of
 the following structure:


   - type: string, the PHP type of this argument. 
   - default: string, the default value of this argument 
   - comment: string, the comment of this argument

 The default implementation will return the help information extracted from
 the doc-comment of the properties corresponding to the action options.



    [$action] (\yii\base\Action) 


*yii/gii/console/GenerateController::getActionMethodReflection*protected

 See |yii/console/Controller::getActionMethodReflection|


*yii/gii/console/GenerateController::parseDocCommentTags*	protected

 See |yii/console/Controller::parseDocCommentTags|


*yii/gii/console/GenerateController::parseDocCommentSummary*protected

 See |yii/console/Controller::parseDocCommentSummary|


*yii/gii/console/GenerateController::parseDocCommentDetail*protected

 See |yii/console/Controller::parseDocCommentDetail|


*yii/gii/console/GenerateController::actionIndex*		public
>
 actionIndex()
<
return (void)



*yii/gii/console/GenerateController::getUniqueID*		public
>
 getUniqueID()
<
return (void)



*yii/gii/console/GenerateController::formatHint*		protected
>
 formatHint($hint)
<
return (void)

    [$hint] () 



 vim:tw=78:ts=8:ft=help:norl:
