
*yii/jui/Spinner*   >> |yii/jui/InputWidget|
=================

DESCRIPTION
------------------------------------------------------------------------------

 For example:

   echo Spinner::widget([
       'model' => $model,
       'attribute' => 'country',
       'clientOptions' => ['step' => 2],
   ]);

 The following example will use the name property instead:

   echo Spinner::widget([
       'name'  => 'country',
       'clientOptions' => ['step' => 2],
   ]);

 You can also use this widget in an 'yii\widgets\ActiveForm|ActiveForm' using
 the 'yii\widgets\ActiveField::widget()|widget()' method, for example like
 this:

   <?= $form->field($model,
 'from_date')->widget(\yii\jui\Spinner::classname(), [
       'clientOptions' => ['step' => 2],
   ]) ?>




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/jui/Widget::$options|
 |yii/jui/Widget::$clientOptions|
 |yii/jui/Widget::$clientEvents|
 |yii/jui/InputWidget::$model|
 |yii/jui/InputWidget::$attribute|
 |yii/jui/InputWidget::$name|
 |yii/jui/InputWidget::$value|


$clientEventMap				*yii/jui/Spinner::$clientEventMap*

 (array) 

 Event names mapped to what should be specified in '.on()'. If empty, it is
 assumed that event passed to clientEvents is prefixed with widget name.





METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/jui/InputWidget::init|
 |yii/jui/Widget::registerClientOptions|
 |yii/jui/Widget::registerClientEvents|
 |yii/jui/Widget::registerWidget|
 |yii/jui/InputWidget::hasModel|


*yii/jui/Spinner::run*					public
>
 run()
<
return (void)

 Renders the widget.


*yii/jui/Spinner::renderWidget*				public
>
 renderWidget()
<
return (string) The rendering result.

 Renders the Spinner widget.



 vim:tw=78:ts=8:ft=help:norl:
