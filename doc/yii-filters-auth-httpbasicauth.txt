
*yii/filters/auth/HttpBasicAuth*   >> |yii/filters/auth/AuthMethod|
================================

DESCRIPTION
------------------------------------------------------------------------------

 You may use HttpBasicAuth by attaching it as a behavior to a controller or
 module, like the following:

   public function behaviors()
   {
       return [
           'basicAuth' => [
               'class' => \yii\filters\auth\HttpBasicAuth::className(),
           ],
       ];
   }

 The default implementation of HttpBasicAuth uses the
 '\yii\web\User::loginByAccessToken()|loginByAccessToken()' method of the
 'user' application component and only passes the user name. This
 implementation is used for authenticating API clients.

 If you want to authenticate users using username and password, you should
 provide the 'auth' function for example like the following:

   public function behaviors()
   {
       return [
           'basicAuth' => [
               'class' => \yii\filters\auth\HttpBasicAuth::className(),
               'auth' => function ($username, $password) {
                   $user = User::find()->where(['username' =>
 $username])->one();
                   if ($user->verifyPassword($password)) {
                       return $user;
                   }
                   return null;
               },
           ],
       ];
   }

 > Tip: In case authentication does not work like expected, make sure your web
 server passes username and password to '$_SERVER['PHP_AUTH_USER']' and
 '$_SERVER['PHP_AUTH_PW']' variables. If you are using Apache with PHP-CGI,
 you might need to add this line to your '.htaccess' file: ''' RewriteRule .* 
   - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization},L] '''


PROPERTY DETAILS
------------------------------------------------------------------------------

$owner					*yii/filters/auth/HttpBasicAuth::$owner*

 See |yii/base/Behavior::$owner|

$only					*yii/filters/auth/HttpBasicAuth::$only*

 See |yii/base/ActionFilter::$only|

$except					*yii/filters/auth/HttpBasicAuth::$except*

 See |yii/base/ActionFilter::$except|

$user					*yii/filters/auth/HttpBasicAuth::$user*

 See |yii/filters/auth/AuthMethod::$user|

$request				*yii/filters/auth/HttpBasicAuth::$request*

 See |yii/filters/auth/AuthMethod::$request|

$response				*yii/filters/auth/HttpBasicAuth::$response*

 See |yii/filters/auth/AuthMethod::$response|

$optional				*yii/filters/auth/HttpBasicAuth::$optional*

 See |yii/filters/auth/AuthMethod::$optional|

$realm					*yii/filters/auth/HttpBasicAuth::$realm*

 (string) The HTTP authentication realm

$auth					*yii/filters/auth/HttpBasicAuth::$auth*

 (callable) A PHP callable that will authenticate the user with the HTTP basic
 auth information. The callable receives a username and a password as its
 parameters. It should return an identity object that matches the username and
 password. Null should be returned if there is no such identity.

 The following code is a typical implementation of this callable:

   function ($username, $password) {
       return \app\models\User::findOne([
           'username' => $username,
           'password' => $password,
       ]);
   }

 If this property is not set, the username information will be considered as
 an access token while the password information will be ignored. The
 '\yii\web\User::loginByAccessToken()' method will be called to authenticate
 and login the user.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/filters/auth/HttpBasicAuth::className*		public

 See |yii/base/BaseObject::className|


*yii/filters/auth/HttpBasicAuth::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/filters/auth/HttpBasicAuth::init*			public

 See |yii/base/BaseObject::init|


*yii/filters/auth/HttpBasicAuth::__get*			public

 See |yii/base/BaseObject::__get|


*yii/filters/auth/HttpBasicAuth::__set*			public

 See |yii/base/BaseObject::__set|


*yii/filters/auth/HttpBasicAuth::__isset*			public

 See |yii/base/BaseObject::__isset|


*yii/filters/auth/HttpBasicAuth::__unset*			public

 See |yii/base/BaseObject::__unset|


*yii/filters/auth/HttpBasicAuth::__call*			public

 See |yii/base/BaseObject::__call|


*yii/filters/auth/HttpBasicAuth::hasProperty*		public

 See |yii/base/BaseObject::hasProperty|


*yii/filters/auth/HttpBasicAuth::canGetProperty*		public

 See |yii/base/BaseObject::canGetProperty|


*yii/filters/auth/HttpBasicAuth::canSetProperty*		public

 See |yii/base/BaseObject::canSetProperty|


*yii/filters/auth/HttpBasicAuth::hasMethod*		public

 See |yii/base/BaseObject::hasMethod|


*yii/filters/auth/HttpBasicAuth::events*			public

 See |yii/base/Behavior::events|


*yii/filters/auth/HttpBasicAuth::attach*			public

 See |yii/base/ActionFilter::attach|


*yii/filters/auth/HttpBasicAuth::detach*			public

 See |yii/base/ActionFilter::detach|


*yii/filters/auth/HttpBasicAuth::beforeFilter*		public

 See |yii/base/ActionFilter::beforeFilter|


*yii/filters/auth/HttpBasicAuth::afterFilter*		public

 See |yii/base/ActionFilter::afterFilter|


*yii/filters/auth/HttpBasicAuth::beforeAction*		public

 See |yii/base/ActionFilter::beforeAction|


*yii/filters/auth/HttpBasicAuth::afterAction*		public

 See |yii/base/ActionFilter::afterAction|


*yii/filters/auth/HttpBasicAuth::getActionId*		protected

 See |yii/base/ActionFilter::getActionId|


*yii/filters/auth/HttpBasicAuth::isActive*		protected

 See |yii/base/ActionFilter::isActive|


*yii/filters/auth/HttpBasicAuth::challenge*		public
>
 challenge($response)
<
return (void)

 Generates challenges upon authentication failure.



 For example, some appropriate HTTP headers may be generated.



    [$response] (\yii\web\Response) 


*yii/filters/auth/HttpBasicAuth::handleFailure*		public

 See |yii/filters/auth/AuthMethod::handleFailure|


*yii/filters/auth/HttpBasicAuth::isOptional*		protected

 See |yii/filters/auth/AuthMethod::isOptional|


*yii/filters/auth/HttpBasicAuth::authenticate*		public
>
 authenticate($user, $request, $response)
<
return (\yii\web\IdentityInterface) The authenticated user identity. If
authentication information is not provided, null will be returned.

 Authenticates the current user.







    [$user] (\yii\web\User) 
    [$request] (\yii\web\Request) 
    [$response] (\yii\web\Response) 



 vim:tw=78:ts=8:ft=help:norl:
