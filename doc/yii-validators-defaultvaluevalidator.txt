
*yii/validators/DefaultValueValidator*   >> |yii/validators/Validator|
======================================

DESCRIPTION
------------------------------------------------------------------------------

 DefaultValueValidator is not really a validator. It is provided mainly to
 allow specifying attribute default values when they are empty.


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/DefaultValueValidator::$builtInValidators*

 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/DefaultValueValidator::$attributes*

 See |yii/validators/Validator::$attributes|

$message				*yii/validators/DefaultValueValidator::$message*

 See |yii/validators/Validator::$message|

$on					*yii/validators/DefaultValueValidator::$on*

 See |yii/validators/Validator::$on|

$except					*yii/validators/DefaultValueValidator::$except*

 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/DefaultValueValidator::$skipOnError*

 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/DefaultValueValidator::$skipOnEmpty*

 (boolean) This property is overwritten to be false so that this validator
 will be applied when the value being validated is empty.

$enableClientValidation			*yii/validators/DefaultValueValidator::$enableClientValidation*

 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/DefaultValueValidator::$isEmpty*

 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/DefaultValueValidator::$when*

 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/DefaultValueValidator::$whenClient*

 See |yii/validators/Validator::$whenClient|

$value					*yii/validators/DefaultValueValidator::$value*

 (mixed) The default value or an anonymous function that returns the default
 value which will be assigned to the attributes being validated if they are
 empty. The signature of the anonymous function should be as follows,

   function($model, $attribute) {
       // compute value
       return $value;
   }



$behaviors				*yii/validators/DefaultValueValidator::$behaviors*

 See |yii/base/Component::$behaviors|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/validators/DefaultValueValidator::className*		public

 See |yii/base/Object::className|


*yii/validators/DefaultValueValidator::__construct*	public

 See |yii/base/Object::__construct|


*yii/validators/DefaultValueValidator::init*		public

 See |yii/validators/Validator::init|


*yii/validators/DefaultValueValidator::__get*		public

 See |yii/base/Component::__get|


*yii/validators/DefaultValueValidator::__set*		public

 See |yii/base/Component::__set|


*yii/validators/DefaultValueValidator::__isset*		public

 See |yii/base/Component::__isset|


*yii/validators/DefaultValueValidator::__unset*		public

 See |yii/base/Component::__unset|


*yii/validators/DefaultValueValidator::__call*		public

 See |yii/base/Component::__call|


*yii/validators/DefaultValueValidator::hasProperty*	public

 See |yii/base/Component::hasProperty|


*yii/validators/DefaultValueValidator::canGetProperty*	public

 See |yii/base/Component::canGetProperty|


*yii/validators/DefaultValueValidator::canSetProperty*	public

 See |yii/base/Component::canSetProperty|


*yii/validators/DefaultValueValidator::hasMethod*		public

 See |yii/base/Component::hasMethod|


*yii/validators/DefaultValueValidator::__clone*		public

 See |yii/base/Component::__clone|


*yii/validators/DefaultValueValidator::behaviors*		public

 See |yii/base/Component::behaviors|


*yii/validators/DefaultValueValidator::hasEventHandlers*	public

 See |yii/base/Component::hasEventHandlers|


*yii/validators/DefaultValueValidator::on*		public

 See |yii/base/Component::on|


*yii/validators/DefaultValueValidator::off*		public

 See |yii/base/Component::off|


*yii/validators/DefaultValueValidator::trigger*		public

 See |yii/base/Component::trigger|


*yii/validators/DefaultValueValidator::getBehavior*	public

 See |yii/base/Component::getBehavior|


*yii/validators/DefaultValueValidator::getBehaviors*	public

 See |yii/base/Component::getBehaviors|


*yii/validators/DefaultValueValidator::attachBehavior*	public

 See |yii/base/Component::attachBehavior|


*yii/validators/DefaultValueValidator::attachBehaviors*	public

 See |yii/base/Component::attachBehaviors|


*yii/validators/DefaultValueValidator::detachBehavior*	public

 See |yii/base/Component::detachBehavior|


*yii/validators/DefaultValueValidator::detachBehaviors*	public

 See |yii/base/Component::detachBehaviors|


*yii/validators/DefaultValueValidator::ensureBehaviors*	public

 See |yii/base/Component::ensureBehaviors|


*yii/validators/DefaultValueValidator::createValidator*	public

 See |yii/validators/Validator::createValidator|


*yii/validators/DefaultValueValidator::validateAttributes*public

 See |yii/validators/Validator::validateAttributes|


*yii/validators/DefaultValueValidator::validateAttribute*	public
>
 validateAttribute($model, $attribute)
<
return (void)



 Child classes must implement this method to provide the actual validation
 logic.



    [$model] (\yii\base\Model) The data model to be validated
    [$attribute] (string) The name of the attribute to be validated.


*yii/validators/DefaultValueValidator::validate*		public

 See |yii/validators/Validator::validate|


*yii/validators/DefaultValueValidator::validateValue*	protected

 See |yii/validators/Validator::validateValue|


*yii/validators/DefaultValueValidator::clientValidateAttribute*public

 See |yii/validators/Validator::clientValidateAttribute|


*yii/validators/DefaultValueValidator::isActive*		public

 See |yii/validators/Validator::isActive|


*yii/validators/DefaultValueValidator::addError*		public

 See |yii/validators/Validator::addError|


*yii/validators/DefaultValueValidator::isEmpty*		public

 See |yii/validators/Validator::isEmpty|



 vim:tw=78:ts=8:ft=help:norl:
