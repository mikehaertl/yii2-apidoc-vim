
*yii/validators/DefaultValueValidator*   >> |yii/validators/Validator|
======================================

DESCRIPTION
------------------------------------------------------------------------------

 DefaultValueValidator is not really a validator. It is provided mainly to
 allow specifying attribute default values when they are empty.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/validators/Validator::$builtInValidators|
 |yii/validators/Validator::$attributes|
 |yii/validators/Validator::$message|
 |yii/validators/Validator::$on|
 |yii/validators/Validator::$except|
 |yii/validators/Validator::$skipOnError|
 |yii/validators/Validator::$enableClientValidation|
 |yii/validators/Validator::$isEmpty|
 |yii/validators/Validator::$when|
 |yii/validators/Validator::$whenClient|


$skipOnEmpty				*yii/validators/DefaultValueValidator::$skipOnEmpty*

 (bool) This property is overwritten to be false so that this validator will
 be applied when the value being validated is empty.

$value					*yii/validators/DefaultValueValidator::$value*

 (mixed) The default value or an anonymous function that returns the default
 value which will be assigned to the attributes being validated if they are
 empty. The signature of the anonymous function should be as follows,

   function($model, $attribute) {
       // compute value
       return $value;
   }





METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/validators/Validator::createValidator|
 |yii/validators/Validator::validateAttributes|
 |yii/validators/Validator::validate|
 |yii/validators/Validator::validateValue|
 |yii/validators/Validator::clientValidateAttribute|
 |yii/validators/Validator::getClientOptions|
 |yii/validators/Validator::isActive|
 |yii/validators/Validator::addError|
 |yii/validators/Validator::isEmpty|
 |yii/validators/Validator::formatMessage|
 |yii/validators/Validator::getAttributeNames|


*yii/validators/DefaultValueValidator::validateAttribute*	public
>
 validateAttribute($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 



 vim:tw=78:ts=8:ft=help:norl:
