
*yii/caching/DummyCache*   >> |yii/caching/Cache|
========================

DESCRIPTION
------------------------------------------------------------------------------

 DummyCache does not cache anything. It is provided so that one can always
 configure a 'cache' application component and save the check of existence of
 '\Yii::$app->cache'. By replacing DummyCache with some other cache component,
 one can quickly switch from non-caching mode to caching mode.

 For more details and usage information on Cache, see the [guide article on
 caching](guide:caching-overview).



METHOD DETAILS
------------------------------------------------------------------------------


*yii/caching/DummyCache::className*			public

 See |yii/base/BaseObject::className|


*yii/caching/DummyCache::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/caching/DummyCache::init*				public

 See |yii/base/BaseObject::init|


*yii/caching/DummyCache::__get*				public

 See |yii/base/Component::__get|


*yii/caching/DummyCache::__set*				public

 See |yii/base/Component::__set|


*yii/caching/DummyCache::__isset*				public

 See |yii/base/Component::__isset|


*yii/caching/DummyCache::__unset*				public

 See |yii/base/Component::__unset|


*yii/caching/DummyCache::__call*				public

 See |yii/base/Component::__call|


*yii/caching/DummyCache::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/caching/DummyCache::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/caching/DummyCache::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/caching/DummyCache::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/caching/DummyCache::__clone*				public

 See |yii/base/Component::__clone|


*yii/caching/DummyCache::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/caching/DummyCache::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/caching/DummyCache::on*				public

 See |yii/base/Component::on|


*yii/caching/DummyCache::off*				public

 See |yii/base/Component::off|


*yii/caching/DummyCache::trigger*				public

 See |yii/base/Component::trigger|


*yii/caching/DummyCache::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/caching/DummyCache::getBehaviors*			public

 See |yii/base/Component::getBehaviors|


*yii/caching/DummyCache::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/caching/DummyCache::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/caching/DummyCache::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/caching/DummyCache::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/caching/DummyCache::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/caching/DummyCache::buildKey*			public

 See |yii/caching/Cache::buildKey|


*yii/caching/DummyCache::get*				public

 See |yii/caching/Cache::get|


*yii/caching/DummyCache::exists*				public

 See |yii/caching/Cache::exists|


*yii/caching/DummyCache::mget*				public

 See |yii/caching/Cache::mget|


*yii/caching/DummyCache::multiGet*			public

 See |yii/caching/Cache::multiGet|


*yii/caching/DummyCache::set*				public

 See |yii/caching/Cache::set|


*yii/caching/DummyCache::mset*				public

 See |yii/caching/Cache::mset|


*yii/caching/DummyCache::multiSet*			public

 See |yii/caching/Cache::multiSet|


*yii/caching/DummyCache::madd*				public

 See |yii/caching/Cache::madd|


*yii/caching/DummyCache::multiAdd*			public

 See |yii/caching/Cache::multiAdd|


*yii/caching/DummyCache::add*				public

 See |yii/caching/Cache::add|


*yii/caching/DummyCache::delete*				public

 See |yii/caching/Cache::delete|


*yii/caching/DummyCache::flush*				public

 See |yii/caching/Cache::flush|


*yii/caching/DummyCache::getValue*			protected
>
 getValue($key)
<
return (mixed|false) The value stored in cache, false if the value is not in the
cache or expired.

 Retrieves a value from cache with a specified key.

 This is the implementation of the method declared in the parent class.

    [$key] (string) A unique key identifying the cached value


*yii/caching/DummyCache::setValue*			protected
>
 setValue($key, $value, $duration)
<
return (bool) True if the value is successfully stored into cache, false otherwise

 Stores a value identified by a key in cache.

 This is the implementation of the method declared in the parent class.

    [$key] (string) The key identifying the value to be cached
    [$value] (mixed) The value to be cached
    [$duration] (int) The number of seconds in which the cached value will
    expire. 0 means never expire.


*yii/caching/DummyCache::addValue*			protected
>
 addValue($key, $value, $duration)
<
return (bool) True if the value is successfully stored into cache, false otherwise

 Stores a value identified by a key into cache if the cache does not contain
 this key.

 This is the implementation of the method declared in the parent class.

    [$key] (string) The key identifying the value to be cached
    [$value] (mixed) The value to be cached
    [$duration] (int) The number of seconds in which the cached value will
    expire. 0 means never expire.


*yii/caching/DummyCache::deleteValue*			protected
>
 deleteValue($key)
<
return (bool) If no error happens during deletion

 Deletes a value with the specified key from cache This is the implementation
 of the method declared in the parent class.

    [$key] (string) The key of the value to be deleted


*yii/caching/DummyCache::flushValues*			protected
>
 flushValues()
<
return (bool) Whether the flush operation was successful.

 Deletes all values from cache.

 This is the implementation of the method declared in the parent class.


*yii/caching/DummyCache::getValues*			protected

 See |yii/caching/Cache::getValues|


*yii/caching/DummyCache::setValues*			protected

 See |yii/caching/Cache::setValues|


*yii/caching/DummyCache::addValues*			protected

 See |yii/caching/Cache::addValues|


*yii/caching/DummyCache::offsetExists*			public

 See |yii/caching/Cache::offsetExists|


*yii/caching/DummyCache::offsetGet*			public

 See |yii/caching/Cache::offsetGet|


*yii/caching/DummyCache::offsetSet*			public

 See |yii/caching/Cache::offsetSet|


*yii/caching/DummyCache::offsetUnset*			public

 See |yii/caching/Cache::offsetUnset|


*yii/caching/DummyCache::getOrSet*			public

 See |yii/caching/Cache::getOrSet|



 vim:tw=78:ts=8:ft=help:norl:
