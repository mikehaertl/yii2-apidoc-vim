
*yii/mongodb/file/ActiveRecord*   >> |yii/mongodb/ActiveRecord|
===============================

DESCRIPTION
------------------------------------------------------------------------------

 To specify source file use the 'file' attribute. It can be specified in one
 of the following ways:  
   - string - full name of the file, which content should be stored in
   GridFS  
   - \yii\web\UploadedFile - uploaded file instance, which content
   should be stored in GridFS

 For example:

   $record = new ImageFile();
   $record->file = '/path/to/some/file.jpg';
   $record->save();

 You can also specify file content via 'newFileContent' attribute:

   $record = new ImageFile();
   $record->newFileContent = 'New file content';
   $record->save();

 Note: 'newFileContent' always takes precedence over 'file'.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/mongodb/ActiveRecord::getDb|
 |yii/mongodb/ActiveRecord::updateAll|
 |yii/mongodb/ActiveRecord::updateAllCounters|
 |yii/mongodb/ActiveRecord::deleteAll|
 |yii/mongodb/ActiveRecord::collectionName|
 |yii/mongodb/ActiveRecord::primaryKey|
 |yii/mongodb/ActiveRecord::insert|
 |yii/mongodb/ActiveRecord::delete|
 |yii/mongodb/ActiveRecord::deleteInternal|
 |yii/mongodb/ActiveRecord::equals|
 |yii/mongodb/ActiveRecord::toArray|


*yii/mongodb/file/ActiveRecord::find*			public
>
 find()
<
return (\yii\mongodb\file\ActiveQuery) The newly created 'ActiveQuery' instance.








*yii/mongodb/file/ActiveRecord::getCollection*		public
>
 getCollection()
<
return (\yii\mongodb\file\Collection) Collection instance.

 Return the Mongo GridFS collection instance for this AR class.


*yii/mongodb/file/ActiveRecord::attributes*		public
>
 attributes()
<
return (array) List of attribute names.

 Returns the list of all attribute names of the model.

 This method could be overridden by child classes to define available
 attributes. Note: all attributes defined in base Active Record class should
 be always present in returned array. For example:

   public function attributes()
   {
       return array_merge(
           parent::attributes(),
           ['tags', 'status']
       );
   }




*yii/mongodb/file/ActiveRecord::insertInternal*		protected
>
 insertInternal($attributes='null')
<
return (void)

    [$attributes] () 


*yii/mongodb/file/ActiveRecord::updateInternal*		protected
>
 updateInternal($attributes='null')
<
return (void)

    [$attributes] () 


*yii/mongodb/file/ActiveRecord::extractFileName*		protected
>
 extractFileName($file)
<
return (string) File name.

 Extracts filename from given raw file value.

    [$file] (mixed) Raw file value.


*yii/mongodb/file/ActiveRecord::refreshFile*		public
>
 refreshFile()
<
return (\MongoGridFSFile|null) Refreshed file value.

 Refreshes the 'file' attribute from file collection, using current primary
 key.


*yii/mongodb/file/ActiveRecord::getFileContent*		public
>
 getFileContent()
<
return (null|string) File content.

 Returns the associated file content.


*yii/mongodb/file/ActiveRecord::writeFile*		public
>
 writeFile($filename)
<
return (bool) Whether the operation was successful.

 Writes the the internal file content into the given filename.

    [$filename] (string) Full filename to be written.


*yii/mongodb/file/ActiveRecord::getFileResource*		public
>
 getFileResource()
<
return (resource) File stream resource.

 This method returns a stream resource that can be used with all file
 functions in PHP, which deal with reading files. The contents of the file are
 pulled out of MongoDB on the fly, so that the whole file does not have to be
 loaded into memory first.



 vim:tw=78:ts=8:ft=help:norl:
