
*yii/swiftmailer/Message*   >> |yii/mail/BaseMessage|
=========================



METHOD DETAILS
------------------------------------------------------------------------------


*yii/swiftmailer/Message::__clone*			public
>
 __clone()
<
return (void)

 This method is called after the object is created by cloning an existing one.

 It ensures 'swiftMessage' is also cloned.


*yii/swiftmailer/Message::getSwiftMessage*		public
>
 getSwiftMessage()
<
return (\Swift_Message) Swift message instance.



*yii/swiftmailer/Message::getCharset*			public
>
 getCharset()
<
return (void)



*yii/swiftmailer/Message::setCharset*			public
>
 setCharset($charset)
<
return (void)

    [$charset] () 


*yii/swiftmailer/Message::getFrom*			public
>
 getFrom()
<
return (void)



*yii/swiftmailer/Message::setFrom*			public
>
 setFrom($from)
<
return (void)

    [$from] () 


*yii/swiftmailer/Message::getReplyTo*			public
>
 getReplyTo()
<
return (void)



*yii/swiftmailer/Message::setReplyTo*			public
>
 setReplyTo($replyTo)
<
return (void)

    [$replyTo] () 


*yii/swiftmailer/Message::getTo*				public
>
 getTo()
<
return (void)



*yii/swiftmailer/Message::setTo*				public
>
 setTo($to)
<
return (void)

    [$to] () 


*yii/swiftmailer/Message::getCc*				public
>
 getCc()
<
return (void)



*yii/swiftmailer/Message::setCc*				public
>
 setCc($cc)
<
return (void)

    [$cc] () 


*yii/swiftmailer/Message::getBcc*				public
>
 getBcc()
<
return (void)



*yii/swiftmailer/Message::setBcc*				public
>
 setBcc($bcc)
<
return (void)

    [$bcc] () 


*yii/swiftmailer/Message::getSubject*			public
>
 getSubject()
<
return (void)



*yii/swiftmailer/Message::setSubject*			public
>
 setSubject($subject)
<
return (void)

    [$subject] () 


*yii/swiftmailer/Message::setTextBody*			public
>
 setTextBody($text)
<
return (void)

    [$text] () 


*yii/swiftmailer/Message::setHtmlBody*			public
>
 setHtmlBody($html)
<
return (void)

    [$html] () 


*yii/swiftmailer/Message::setBody*			protected
>
 setBody($body, $contentType)
<
return (void)

 Sets the message body.

 If body is already set and its content type matches given one, it will be
 overridden, if content type miss match the multipart message will be
 composed.

    [$body] (string) Body content.
    [$contentType] (string) Body content type.


*yii/swiftmailer/Message::attach*				public
>
 attach($fileName, $options='[]')
<
return (void)

    [$fileName] () 
    [$options] () 


*yii/swiftmailer/Message::attachContent*			public
>
 attachContent($content, $options='[]')
<
return (void)

    [$content] () 
    [$options] () 


*yii/swiftmailer/Message::embed*				public
>
 embed($fileName, $options='[]')
<
return (void)

    [$fileName] () 
    [$options] () 


*yii/swiftmailer/Message::embedContent*			public
>
 embedContent($content, $options='[]')
<
return (void)

    [$content] () 
    [$options] () 


*yii/swiftmailer/Message::setSignature*			public
>
 setSignature($signature)
<
return ($this) Self reference.

 Sets message signature

    [$signature] (array|callable|\Swift_Signer) Signature specification. See
    'addSignature()' for details on how it should be specified.


*yii/swiftmailer/Message::addSignature*			public
>
 addSignature($signature)
<
return ($this) Self reference

 Adds message signature.

    [$signature] (array|callable|\Swift_Signer) Signature specification, this
    can be:


      - '\Swift_Signer' instance 
      - callable, which returns '\Swift_Signer' instance 
      - configuration array for the signer creation


*yii/swiftmailer/Message::createSwiftSigner*		protected
>
 createSwiftSigner($signature)
<
return (\Swift_Signer) Signer instance

 Creates signer from its configuration

    [$signature] (array) Signature configuration


*yii/swiftmailer/Message::toString*			public
>
 toString()
<
return (void)



*yii/swiftmailer/Message::createSwiftMessage*		protected
>
 createSwiftMessage()
<
return (\Swift_Message) Email message instance.

 Creates the Swift email message instance.


*yii/swiftmailer/Message::addHeader*			public
>
 addHeader($name, $value)
<
return ($this) Self reference.

 Adds custom header value to the message.

 Several invocations of this method with the same name will add multiple
 header values.

    [$name] (string) Header name.
    [$value] (string) Header value.


*yii/swiftmailer/Message::setHeader*			public
>
 setHeader($name, $value)
<
return ($this) Self reference.

 Sets custom header value to the message.

    [$name] (string) Header name.
    [$value] (string|array) Header value or values.


*yii/swiftmailer/Message::getHeader*			public
>
 getHeader($name)
<
return (array) Header values list.

 Returns all values for the specified header.

    [$name] (string) Header name.


*yii/swiftmailer/Message::setHeaders*			public
>
 setHeaders($headers)
<
return ($this) Self reference.

 Sets custom header values to the message.

    [$headers] (array) Headers in format: '[name => value]'.


*yii/swiftmailer/Message::setReturnPath*			public
>
 setReturnPath($address)
<
return ($this) Self reference.

 Set the return-path (the bounce address) of this message.

    [$address] (string) The bounce email address.


*yii/swiftmailer/Message::getReturnPath*			public
>
 getReturnPath()
<
return (string) The bounce email address.

 Returns the return-path (the bounce address) of this message.


*yii/swiftmailer/Message::setPriority*			public
>
 setPriority($priority)
<
return ($this) Self reference.

 Set the priority of this message.

    [$priority] (int) Priority value, should be an integer in range: '1..5',
    where 1 is the highest priority and 5 is the lowest.


*yii/swiftmailer/Message::getPriority*			public
>
 getPriority()
<
return (int) Priority value as integer in range: '1..5', where 1 is the highest
priority and 5 is the lowest.

 Returns the priority of this message.


*yii/swiftmailer/Message::setReadReceiptTo*		public
>
 setReadReceiptTo($addresses)
<
return ($this) Self reference.

 Sets the ask for a delivery receipt from the recipient to be sent to
 $addresses.

    [$addresses] (string|array) Receipt receive email address(es).


*yii/swiftmailer/Message::getReadReceiptTo*		public
>
 getReadReceiptTo()
<
return (string) Receipt receive email addresses.

 Get the addresses to which a read-receipt will be sent.



 vim:tw=78:ts=8:ft=help:norl:
