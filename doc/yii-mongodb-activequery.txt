
*yii/mongodb/ActiveQuery*   >> |yii/mongodb/Query|
=========================

DESCRIPTION
------------------------------------------------------------------------------

 An ActiveQuery can be a normal query or be used in a relational context.

 ActiveQuery instances are usually created by 'ActiveRecord::find()'.
 Relational queries are created by 'ActiveRecord::hasOne()' and
 'ActiveRecord::hasMany()'.

 Normal Query ------------

 ActiveQuery instances are usually created by 'ActiveRecord::find()'.

 Because ActiveQuery extends from 'Query', one can use query methods, such as
 'where()', 'orderBy()' to customize the query options.

 ActiveQuery also provides the following additional query options:


   - 'with()': list of relations that this query should be performed
   with. 
   - 'asArray()': whether to return each record as an array.

 These options can be configured using methods of the same name. For example:

   $customers = Customer::find()->with('orders')->asArray()->all();

 Relational query ----------------

 In relational context ActiveQuery represents a relation between two Active
 Record classes.

 Relational ActiveQuery instances are usually created by calling
 'ActiveRecord::hasOne()' and 'ActiveRecord::hasMany()'. An Active Record
 class declares a relation by defining a getter method which calls one of the
 above methods and returns the created ActiveQuery object.

 A relation is specified by 'link' which represents the association between
 columns of different collections; and the multiplicity of the relation is
 indicated by 'multiple'.

 If a relation involves a junction collection, it may be specified by 'via()'.
 This methods may only be called in a relational context. Same is true for
 'inverseOf()', which marks a relation as inverse of another relation.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/db/ActiveRelationTrait::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/db/QueryTrait::indexBy|
 |yii/db/QueryTrait::where|
 |yii/db/QueryTrait::andWhere|
 |yii/db/QueryTrait::orWhere|
 |yii/db/QueryTrait::filterWhere|
 |yii/db/QueryTrait::andFilterWhere|
 |yii/db/QueryTrait::orFilterWhere|
 |yii/db/QueryTrait::filterCondition|
 |yii/db/QueryTrait::isEmpty|
 |yii/db/QueryTrait::orderBy|
 |yii/db/QueryTrait::addOrderBy|
 |yii/db/QueryTrait::normalizeOrderBy|
 |yii/db/QueryTrait::limit|
 |yii/db/QueryTrait::offset|
 |yii/db/QueryTrait::emulateExecution|
 |yii/mongodb/Query::select|
 |yii/mongodb/Query::from|
 |yii/mongodb/Query::options|
 |yii/mongodb/Query::addOptions|
 |yii/mongodb/Query::andFilterCompare|
 |yii/mongodb/Query::buildCursor|
 |yii/mongodb/Query::fetchRows|
 |yii/mongodb/Query::fetchRowsInternal|
 |yii/mongodb/Query::batch|
 |yii/mongodb/Query::each|
 |yii/mongodb/Query::scalar|
 |yii/mongodb/Query::column|
 |yii/mongodb/Query::count|
 |yii/mongodb/Query::exists|
 |yii/mongodb/Query::sum|
 |yii/mongodb/Query::average|
 |yii/mongodb/Query::min|
 |yii/mongodb/Query::max|
 |yii/mongodb/Query::aggregate|
 |yii/mongodb/Query::distinct|
 |yii/db/ActiveRelationTrait::via|
 |yii/db/ActiveRelationTrait::inverseOf|
 |yii/db/ActiveRelationTrait::findFor|
 |yii/db/ActiveRelationTrait::populateRelation|
 |yii/db/ActiveQueryTrait::asArray|
 |yii/db/ActiveQueryTrait::with|
 |yii/db/ActiveQueryTrait::createModels|
 |yii/db/ActiveQueryTrait::findWith|


*yii/mongodb/ActiveQuery::__construct*			public
>
 __construct($modelClass, $config='[]')
<
return (void)

 Constructor.

    [$modelClass] (array) The model class associated with this query
    [$config] (array) Configurations to be applied to the newly created query
    object


*yii/mongodb/ActiveQuery::init*				public
>
 init()
<
return (void)

 Initializes the object.

 This method is called at the end of the constructor. The default
 implementation will trigger an 'EVENT_INIT' event. If you override this
 method, make sure you call the parent implementation at the end to ensure
 triggering of the event.


*yii/mongodb/ActiveQuery::getCollection*			public
>
 getCollection($db='null')
<
return (\yii\mongodb\Collection) Collection instance.

 Returns the Mongo collection for this query.

    [$db] (\yii\mongodb\Connection) Mongo connection.


*yii/mongodb/ActiveQuery::prepare*			public
>
 prepare()
<
return (void)

 {@inheritdoc}


*yii/mongodb/ActiveQuery::all*				public
>
 all($db='null')
<
return (array|\yii\mongodb\ActiveRecord) The query results. If the query results in
nothing, an empty array will be returned.

 Executes query and returns all results as an array.

    [$db] (\yii\mongodb\Connection) The Mongo connection used to execute the
    query. If null, the Mongo connection returned by 'modelClass' will be
    used.


*yii/mongodb/ActiveQuery::populate*			public
>
 populate($rows)
<
return (array) The converted query result

 Converts the raw query results into the format as specified by this query.

 This method is internally used to convert the data fetched from MongoDB into
 the format as required by this query.

    [$rows] (array) The raw query result from MongoDB


*yii/mongodb/ActiveQuery::one*				public
>
 one($db='null')
<
return (\yii\mongodb\ActiveRecord|array|null) A single row of query result. Depending
on the setting of 'asArray', the query result may be either an array or an
ActiveRecord object. Null will be returned if the query results in nothing.

 Executes query and returns a single row of result.

    [$db] (\yii\mongodb\Connection) The Mongo connection used to execute the
    query. If null, the Mongo connection returned by 'modelClass' will be
    used.


*yii/mongodb/ActiveQuery::modify*				public
>
 modify($update, $options='[]', $db='null')
<
return (\yii\mongodb\ActiveRecord|array|null) The original document, or the modified
document when $options['new'] is set. Depending on the setting of 'asArray',
the query result may be either an array or an ActiveRecord object. Null will
be returned if the query results in nothing.

 Performs 'findAndModify' query and returns a single row of result.

 Warning: in case 'new' option is set to 'false' (which is by default) usage
 of this method may lead to unexpected behavior at some Active Record
 features, because object will be populated by outdated data.

    [$update] (array) Update criteria
    [$options] (array) List of options in format: optionName => optionValue.
    [$db] (\yii\mongodb\Connection) The Mongo connection used to execute the
    query.



 vim:tw=78:ts=8:ft=help:norl:
