
*yii/bootstrap/BootstrapWidgetTrait*  
====================================

DESCRIPTION
------------------------------------------------------------------------------

 Note: class, which uses this trait must declare public field named 'options'
 with the array default value:

   class MyWidget extends \yii\base\Widget
   {
       use BootstrapWidgetTrait;

       public $options = [];
   }

 This field is not present in the trait in order to avoid possible PHP Fatal
 error on definition conflict.


PROPERTY DETAILS
------------------------------------------------------------------------------


$clientOptions				*yii/bootstrap/BootstrapWidgetTrait::$clientOptions*

 (array) The options for the underlying Bootstrap JS plugin. Please refer to
 the corresponding Bootstrap plugin Web page for possible options. For
 example, [this page](http://getbootstrap.com/javascript/#modals) shows how to
 use the "Modal" plugin and the supported options (e.g. "remote").

$clientEvents				*yii/bootstrap/BootstrapWidgetTrait::$clientEvents*

 (array) The event handlers for the underlying Bootstrap JS plugin. Please
 refer to the corresponding Bootstrap plugin Web page for possible events. For
 example, [this page](http://getbootstrap.com/javascript/#modals) shows how to
 use the "Modal" plugin and the supported events (e.g. "shown").



METHOD DETAILS
------------------------------------------------------------------------------


*yii/bootstrap/BootstrapWidgetTrait::init*		public
>
 init()
<
return (void)

 Initializes the widget.

 This method will register the bootstrap asset bundle. If you override this
 method, make sure you call the parent implementation first.


*yii/bootstrap/BootstrapWidgetTrait::registerPlugin*	protected
>
 registerPlugin($name)
<
return (void)

 Registers a specific Bootstrap plugin and the related events

    [$name] (string) The name of the Bootstrap plugin


*yii/bootstrap/BootstrapWidgetTrait::registerClientEvents*protected
>
 registerClientEvents()
<
return (void)

 Registers JS event handlers that are listed in 'clientEvents'.


*yii/bootstrap/BootstrapWidgetTrait::getView*		public
>
 getView()
<
return (\yii\web\View) The view object that can be used to render views or view
files.




 vim:tw=78:ts=8:ft=help:norl:
