
*yii/queue/beanstalk/Queue*   >> |yii/queue/cli/Queue|
===========================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/queue/Queue::$strictJobType|
 |yii/queue/Queue::$serializer|
 |yii/queue/Queue::$ttr|
 |yii/queue/Queue::$attempts|
 |yii/queue/cli/Queue::$loopConfig|
 |yii/queue/cli/Queue::$commandOptions|
 |yii/queue/cli/Queue::$messageHandler|


$commandClass				*yii/queue/beanstalk/Queue::$commandClass*

 (string) Command class name

$host					*yii/queue/beanstalk/Queue::$host*

 (string) Connection host

$port					*yii/queue/beanstalk/Queue::$port*

 (int) Connection port

$tube					*yii/queue/beanstalk/Queue::$tube*

 (string) Beanstalk tube



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/queue/Queue::init|
 |yii/queue/Queue::ttr|
 |yii/queue/Queue::delay|
 |yii/queue/Queue::priority|
 |yii/queue/Queue::push|
 |yii/queue/Queue::getWorkerPid|
 |yii/queue/Queue::handleMessage|
 |yii/queue/Queue::unserializeMessage|
 |yii/queue/Queue::handleError|
 |yii/queue/Queue::isWaiting|
 |yii/queue/Queue::isReserved|
 |yii/queue/Queue::isDone|
 |yii/queue/cli/Queue::getCommandId|
 |yii/queue/cli/Queue::bootstrap|
 |yii/queue/cli/Queue::runWorker|
 |yii/queue/cli/Queue::execute|


*yii/queue/beanstalk/Queue::pushMessage*			protected
>
 pushMessage($message, $ttr, $delay, $priority)
<
return (string) Id of a job message







    [$message] (string) 
    [$ttr] (int) Time to reserve in seconds
    [$delay] (int) 
    [$priority] (mixed) 


*yii/queue/beanstalk/Queue::status*			public
>
 status($id)
<
return (int) Status code







    [$id] (string) Of a job message


*yii/queue/beanstalk/Queue::run*				public
>
 run($repeat, $timeout=0)
<
return (null|int) Exit code.

 Listens queue and runs each job.

    [$repeat] (bool) Whether to continue listening when queue is empty.
    [$timeout] (int) Number of seconds to wait for next message.


*yii/queue/beanstalk/Queue::remove*			public
>
 remove($id)
<
return (bool) 

 Removes a job by ID.

    [$id] (int) Of a job


*yii/queue/beanstalk/Queue::getStatsTube*			public
>
 getStatsTube()
<
return (object) Tube statistics



*yii/queue/beanstalk/Queue::getPheanstalk*		protected
>
 getPheanstalk()
<
return (\Pheanstalk\Pheanstalk) 




 vim:tw=78:ts=8:ft=help:norl:
