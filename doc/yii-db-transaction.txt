
*yii/db/Transaction*   >> |yii/base/Object|
====================

DESCRIPTION
------------------------------------------------------------------------------

 It is usually created by calling 'Connection::beginTransaction()'.

 The following code is a typical example of using transactions (note that some
 DBMS may not support transactions):

   $transaction = $connection->beginTransaction();
   try {
       $connection->createCommand($sql1)->execute();
       $connection->createCommand($sql2)->execute();
       //.... other SQL executions
       $transaction->commit();
   } catch (Exception $e) {
       $transaction->rollBack();
   }




PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/Transaction::$db*
 (\yii\db\Connection) The database connection that this transaction is
 associated with.

$isActive				*yii/db/Transaction::$isActive*
 (boolean) Whether this transaction is active. Only an active transaction can
 'commit()' or 'rollBack()'.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/db/Transaction::className*				public
 See |yii/base/Object::className|


*yii/db/Transaction::__construct*				public
 See |yii/base/Object::__construct|


*yii/db/Transaction::init*				public
 See |yii/base/Object::init|


*yii/db/Transaction::__get*				public
 See |yii/base/Object::__get|


*yii/db/Transaction::__set*				public
 See |yii/base/Object::__set|


*yii/db/Transaction::__isset*				public
 See |yii/base/Object::__isset|


*yii/db/Transaction::__unset*				public
 See |yii/base/Object::__unset|


*yii/db/Transaction::__call*				public
 See |yii/base/Object::__call|


*yii/db/Transaction::hasProperty*				public
 See |yii/base/Object::hasProperty|


*yii/db/Transaction::canGetProperty*			public
 See |yii/base/Object::canGetProperty|


*yii/db/Transaction::canSetProperty*			public
 See |yii/base/Object::canSetProperty|


*yii/db/Transaction::hasMethod*				public
 See |yii/base/Object::hasMethod|


*yii/db/Transaction::getIsActive*				public
>
 getIsActive()
<
(boolean) Whether this transaction is active. Only an active transaction can
'commit()' or 'rollBack()'.



*yii/db/Transaction::begin*				public
>
 begin()
<
(void)



*yii/db/Transaction::commit*				public
>
 commit()
<
(void)



*yii/db/Transaction::rollBack*				public
>
 rollBack()
<
(void)




 vim:tw=78:ts=8:ft=help:norl:
