
*yii\widgets\ListView*   >> yii\widgets\BaseListView
======================




PROPERTY DETAILS
------------------------------------------------------------------------------

<$counter>				*yii.widgets.ListView::$counter*
 See |yii.base.Widget::$counter|

<$autoIdPrefix> 			*yii.widgets.ListView::$autoIdPrefix*
 See |yii.base.Widget::$autoIdPrefix|

<$stack>				*yii.widgets.ListView::$stack*
 See |yii.base.Widget::$stack|

<$options>				*yii.widgets.ListView::$options*
 (array) The HTML attributes for the container tag of the list view. The "tag"
 element specifies the tag name of the container element and defaults to
 "div".

<$dataProvider> 			*yii.widgets.ListView::$dataProvider*
 See |yii.widgets.BaseListView::$dataProvider|

<$pager>				*yii.widgets.ListView::$pager*
 See |yii.widgets.BaseListView::$pager|

<$sorter>				*yii.widgets.ListView::$sorter*
 See |yii.widgets.BaseListView::$sorter|

<$summary>				*yii.widgets.ListView::$summary*
 See |yii.widgets.BaseListView::$summary|

<$summaryOptions>			*yii.widgets.ListView::$summaryOptions*
 See |yii.widgets.BaseListView::$summaryOptions|

<$showOnEmpty>				*yii.widgets.ListView::$showOnEmpty*
 See |yii.widgets.BaseListView::$showOnEmpty|

<$emptyText>				*yii.widgets.ListView::$emptyText*
 See |yii.widgets.BaseListView::$emptyText|

<$emptyTextOptions>			*yii.widgets.ListView::$emptyTextOptions*
 See |yii.widgets.BaseListView::$emptyTextOptions|

<$layout>				*yii.widgets.ListView::$layout*
 See |yii.widgets.BaseListView::$layout|

<$itemOptions>				*yii.widgets.ListView::$itemOptions*
 (array) The HTML attributes for the container of the rendering result of each
 data model. The "tag" element specifies the tag name of the container element
 and defaults to "div". If "tag" is false, it means no container element will
 be rendered.

<$itemView>				*yii.widgets.ListView::$itemView*
 (string|callable) The name of the view for rendering each data item, or a
 callback (e.g. an anonymous function) for rendering each data item. If it
 specifies a view name, the following variables will be available in the view:

 - '$model': mixed, the data model - '$key': mixed, the key value associated
 with the data item - '$index': integer, the zero-based index of the data item
 in the items array returned by [[dataProvider]]. - '$widget': ListView, this
 widget instance

 Note that the view name is resolved into the view file by the current context
 of the [[view]] object.

 If this property is specified as a callback, it should have the following
 signature:

   function ($model, $key, $index, $widget)



<$viewParams>				*yii.widgets.ListView::$viewParams*
 (array) Additional parameters to be passed to [[itemView]] when it is being
 rendered. This property is used only when [[itemView]] is a string
 representing a view name.

<$separator>				*yii.widgets.ListView::$separator*
 (string) The HTML code to be displayed between any two consecutive items.

<$behaviors>				*yii.widgets.ListView::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

<$id>					*yii.widgets.ListView::$id*
 (string) ID of the widget.

<$view> 				*yii.widgets.ListView::$view*
 (\yii\web\View) The view object that can be used to render views or view
 files.

<$viewPath>				*yii.widgets.ListView::$viewPath*
 (string) The directory containing the view files for this widget.



METHOD DETAILS
------------------------------------------------------------------------------

*yii.widgets.ListView::className*				 public
 See |yii.base.Object::className|


*yii.widgets.ListView::__construct*				 public
 See |yii.base.Object::__construct|


*yii.widgets.ListView::init*					 public
 See |yii.widgets.BaseListView::init|


*yii.widgets.ListView::__get*					 public
 See |yii.base.Component::__get|


*yii.widgets.ListView::__set*					 public
 See |yii.base.Component::__set|


*yii.widgets.ListView::__isset* 				 public
 See |yii.base.Component::__isset|


*yii.widgets.ListView::__unset* 				 public
 See |yii.base.Component::__unset|


*yii.widgets.ListView::__call*					 public
 See |yii.base.Component::__call|


*yii.widgets.ListView::hasProperty*				 public
 See |yii.base.Component::hasProperty|


*yii.widgets.ListView::canGetProperty*				 public
 See |yii.base.Component::canGetProperty|


*yii.widgets.ListView::canSetProperty*				 public
 See |yii.base.Component::canSetProperty|


*yii.widgets.ListView::hasMethod*				 public
 See |yii.base.Component::hasMethod|


*yii.widgets.ListView::__clone* 				 public
 See |yii.base.Component::__clone|


*yii.widgets.ListView::behaviors*				 public
 See |yii.base.Component::behaviors|


*yii.widgets.ListView::hasEventHandlers*			 public
 See |yii.base.Component::hasEventHandlers|


*yii.widgets.ListView::on*					 public
 See |yii.base.Component::on|


*yii.widgets.ListView::off*					 public
 See |yii.base.Component::off|


*yii.widgets.ListView::trigger* 				 public
 See |yii.base.Component::trigger|


*yii.widgets.ListView::getBehavior*				 public
 See |yii.base.Component::getBehavior|


*yii.widgets.ListView::getBehaviors*				 public
 See |yii.base.Component::getBehaviors|


*yii.widgets.ListView::attachBehavior*				 public
 See |yii.base.Component::attachBehavior|


*yii.widgets.ListView::attachBehaviors* 			 public
 See |yii.base.Component::attachBehaviors|


*yii.widgets.ListView::detachBehavior*				 public
 See |yii.base.Component::detachBehavior|


*yii.widgets.ListView::detachBehaviors* 			 public
 See |yii.base.Component::detachBehaviors|


*yii.widgets.ListView::ensureBehaviors* 			 public
 See |yii.base.Component::ensureBehaviors|


*yii.widgets.ListView::begin*					 public
 See |yii.base.Widget::begin|


*yii.widgets.ListView::end*					 public
 See |yii.base.Widget::end|


*yii.widgets.ListView::widget*					 public
 See |yii.base.Widget::widget|


*yii.widgets.ListView::getId*					 public
 See |yii.base.Widget::getId|


*yii.widgets.ListView::setId*					 public
 See |yii.base.Widget::setId|


*yii.widgets.ListView::getView* 				 public
 See |yii.base.Widget::getView|


*yii.widgets.ListView::setView* 				 public
 See |yii.base.Widget::setView|


*yii.widgets.ListView::run*					 public
 See |yii.base.Widget::run|


*yii.widgets.ListView::render*					 public
 See |yii.base.Widget::render|


*yii.widgets.ListView::renderFile*				 public
 See |yii.base.Widget::renderFile|


*yii.widgets.ListView::getViewPath*				 public
 See |yii.base.Widget::getViewPath|


*yii.widgets.ListView::renderItems*				 public
>
 renderItems()
<
(string) The rendering result




*yii.widgets.ListView::renderSection*				 public
 See |yii.widgets.BaseListView::renderSection|


*yii.widgets.ListView::renderEmpty*				 public
 See |yii.widgets.BaseListView::renderEmpty|


*yii.widgets.ListView::renderSummary*				 public
 See |yii.widgets.BaseListView::renderSummary|


*yii.widgets.ListView::renderPager*				 public
 See |yii.widgets.BaseListView::renderPager|


*yii.widgets.ListView::renderSorter*				 public
 See |yii.widgets.BaseListView::renderSorter|


*yii.widgets.ListView::renderItem*				 public
>
 renderItem($model, $key, $index)
<
(string) The rendering result


    [$model] (mixed) The data model to be rendered
    [$key] (mixed) The key value associated with the data model
    [$index] (integer) The zero-based index of the data model in the model
    array returned by [[dataProvider]].



 vim:tw=78:ts=8:ft=help:norl:
