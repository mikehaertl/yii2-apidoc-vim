
*yii/mutex/OracleMutex*   >> |yii/mutex/DbMutex|
=======================

DESCRIPTION
------------------------------------------------------------------------------

 Application configuration example:

 ''' [     'components' => [         'db' => [             'class' =>
 'yii\db\Connection',             'dsn' => 'oci:dbname=LOCAL_XE',             
 ...         ]         'mutex' => [             'class' =>
 'yii\mutex\OracleMutex',             'lockMode' => 'NL_MODE',            
 'releaseOnCommit' => true,              ...         ],     ], ] '''


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/mutex/Mutex::$autoRelease|
 |yii/mutex/DbMutex::$db|


$lockMode				*yii/mutex/OracleMutex::$lockMode*

 (string) Lock mode to be used.

$releaseOnCommit			*yii/mutex/OracleMutex::$releaseOnCommit*

 (bool) Whether to release lock on commit.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/mutex/Mutex::acquire|
 |yii/mutex/Mutex::release|


*yii/mutex/OracleMutex::init*				public
>
 init()
<
return (void)

 Initializes Oracle specific mutex component implementation.


*yii/mutex/OracleMutex::acquireLock*			protected
>
 acquireLock($name, $timeout=0)
<
return (bool) Acquiring result.

 Acquires lock by given name.

    [$name] (string) Of the lock to be acquired.
    [$timeout] (int) Time (in seconds) to wait for lock to become released.


*yii/mutex/OracleMutex::releaseLock*			protected
>
 releaseLock($name)
<
return (bool) Release result.

 Releases lock by given name.

    [$name] (string) Of the lock to be released.



 vim:tw=78:ts=8:ft=help:norl:
