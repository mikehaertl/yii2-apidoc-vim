
*yii/db/conditions/LikeCondition*   >> |yii/db/conditions/SimpleCondition|
=================================


PROPERTY DETAILS
------------------------------------------------------------------------------

$escapingReplacements			*yii/db/conditions/LikeCondition::$escapingReplacements*

 (array|false) Map of chars to their replacements, false if characters should
 not be escaped or either null or empty array if escaping is condition builder
 responsibility. By default it's set to 'null'.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/db/conditions/LikeCondition::__construct*		public
>
 __construct($column, $operator, $value)
<
return (void)

    [$column] (string) The column name.
    [$operator] (string) The operator to use (e.g. 'LIKE', 'NOT LIKE', 'OR
    LIKE' or 'OR NOT LIKE')
    [$value] (string[]|string) Single value or an array of values that $column
    should be compared with. If it is an empty array the generated expression
    will  be a 'false' value if operator is 'LIKE' or 'OR LIKE' and empty if
    operator is 'NOT LIKE' or 'OR NOT LIKE'.


*yii/db/conditions/LikeCondition::getOperator*		public

 See |yii/db/conditions/SimpleCondition::getOperator|


*yii/db/conditions/LikeCondition::getColumn*		public

 See |yii/db/conditions/SimpleCondition::getColumn|


*yii/db/conditions/LikeCondition::getValue*		public

 See |yii/db/conditions/SimpleCondition::getValue|


*yii/db/conditions/LikeCondition::fromArrayDefinition*	public
>
 fromArrayDefinition($operator, $operands)
<
return (void)

 {@inheritdoc}

    [$operator] () 
    [$operands] () 


*yii/db/conditions/LikeCondition::setEscapingReplacements*public
>
 setEscapingReplacements($escapingReplacements)
<
return (void)

 This method allows to specify how to escape special characters in the
 value(s).

    [$escapingReplacements] () 


*yii/db/conditions/LikeCondition::getEscapingReplacements*public
>
 getEscapingReplacements()
<
return (array|false) 




 vim:tw=78:ts=8:ft=help:norl:
