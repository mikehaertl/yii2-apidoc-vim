
*yii/queue/file/Queue*   >> |yii/queue/cli/Queue|
======================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/queue/Queue::$strictJobType|
 |yii/queue/Queue::$serializer|
 |yii/queue/Queue::$ttr|
 |yii/queue/Queue::$attempts|
 |yii/queue/cli/Queue::$loopConfig|
 |yii/queue/cli/Queue::$commandOptions|
 |yii/queue/cli/Queue::$messageHandler|


$commandClass				*yii/queue/file/Queue::$commandClass*

 (string)

$path					*yii/queue/file/Queue::$path*

 (string)

$dirMode				*yii/queue/file/Queue::$dirMode*

 (int)

$fileMode				*yii/queue/file/Queue::$fileMode*

 (int|null)

$indexSerializer			*yii/queue/file/Queue::$indexSerializer*

 (callable)

$indexDeserializer			*yii/queue/file/Queue::$indexDeserializer*

 (callable)



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/queue/Queue::ttr|
 |yii/queue/Queue::delay|
 |yii/queue/Queue::priority|
 |yii/queue/Queue::push|
 |yii/queue/cli/Queue::getWorkerPid|
 |yii/queue/cli/Queue::handleMessage|
 |yii/queue/Queue::handleError|
 |yii/queue/Queue::isWaiting|
 |yii/queue/Queue::isReserved|
 |yii/queue/Queue::isDone|
 |yii/queue/cli/Queue::getCommandId|
 |yii/queue/cli/Queue::bootstrap|
 |yii/queue/cli/Queue::runWorker|
 |yii/queue/cli/Queue::execute|


*yii/queue/file/Queue::init*				public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/queue/file/Queue::pushMessage*			protected
>
 pushMessage($message, $ttr, $delay, $priority)
<
return (string) Id of a job message







    [$message] (string) 
    [$ttr] (int) Time to reserve in seconds
    [$delay] (int) 
    [$priority] (mixed) 


*yii/queue/file/Queue::status*				public
>
 status($id)
<
return (int) Status code







    [$id] (string) Of a job message


*yii/queue/file/Queue::run*				public
>
 run($repeat, $delay=0)
<
return (null|int) Exit code.

 Listens queue and runs each job.

    [$repeat] (bool) Whether to continue listening when queue is empty.
    [$delay] (int) Number of seconds to sleep before next iteration.


*yii/queue/file/Queue::clear*				public
>
 clear()
<
return (void)

 Clears the queue


*yii/queue/file/Queue::remove*				public
>
 remove($id)
<
return (bool) 

 Removes a job by ID

    [$id] (int) Of a job


*yii/queue/file/Queue::reserve*				protected
>
 reserve()
<
return (array|null) Payload

 Reserves message for execute


*yii/queue/file/Queue::delete*				protected
>
 delete($payload)
<
return (void)

 Deletes reserved message

    [$payload] (array) 



 vim:tw=78:ts=8:ft=help:norl:
