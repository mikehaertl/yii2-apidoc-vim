
*yii/validators/StringValidator*   >> |yii/validators/Validator|
================================

DESCRIPTION
------------------------------------------------------------------------------

 Note, this validator should only be used with string-typed attributes.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/validators/Validator::$builtInValidators|
 |yii/validators/Validator::$attributes|
 |yii/validators/Validator::$on|
 |yii/validators/Validator::$except|
 |yii/validators/Validator::$skipOnError|
 |yii/validators/Validator::$skipOnEmpty|
 |yii/validators/Validator::$enableClientValidation|
 |yii/validators/Validator::$isEmpty|
 |yii/validators/Validator::$when|
 |yii/validators/Validator::$whenClient|


$message				*yii/validators/StringValidator::$message*

 (string) User-defined error message used when the value is not a string.

$length					*yii/validators/StringValidator::$length*

 (int|array) Specifies the length limit of the value to be validated. This can
 be specified in one of the following forms:


   - an integer: the exact length that the value should be of; 
   - an array of one element: the minimum length that the value should
   be of. For example, '[8]'.   This will overwrite 'min'. 
   - an array of two elements: the minimum and maximum lengths that the
   value should be of.   For example, '[8, 128]'. This will overwrite both
 'min' and 'max'.

$max					*yii/validators/StringValidator::$max*

 (int) Maximum length. If not set, it means no maximum length limit.

$min					*yii/validators/StringValidator::$min*

 (int) Minimum length. If not set, it means no minimum length limit.

$tooShort				*yii/validators/StringValidator::$tooShort*

 (string) User-defined error message used when the length of the value is
 smaller than 'min'.

$tooLong				*yii/validators/StringValidator::$tooLong*

 (string) User-defined error message used when the length of the value is
 greater than 'max'.

$notEqual				*yii/validators/StringValidator::$notEqual*

 (string) User-defined error message used when the length of the value is not
 equal to 'length'.

$encoding				*yii/validators/StringValidator::$encoding*

 (string) The encoding of the string value to be validated (e.g. 'UTF-8'). If
 this property is not set, '\yii\base\Application::charset' will be used.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/validators/Validator::createValidator|
 |yii/validators/Validator::validateAttributes|
 |yii/validators/Validator::validate|
 |yii/validators/Validator::isActive|
 |yii/validators/Validator::addError|
 |yii/validators/Validator::isEmpty|
 |yii/validators/Validator::formatMessage|
 |yii/validators/Validator::getAttributeNames|


*yii/validators/StringValidator::init*			public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/validators/StringValidator::validateAttribute*	public
>
 validateAttribute($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 


*yii/validators/StringValidator::validateValue*		protected
>
 validateValue($value)
<
return (void)

 {@inheritdoc}

    [$value] () 


*yii/validators/StringValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 
    [$view] () 


*yii/validators/StringValidator::getClientOptions*	public
>
 getClientOptions($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 



 vim:tw=78:ts=8:ft=help:norl:
