
*yii\web\ErrorHandler*   >> yii\base\ErrorHandler
======================

 ErrorHandler displays these errors using appropriate views based on the
 nature of the errors and the mode the application runs at.

 ErrorHandler is configured as an application component in
 [[\yii\base\Application]] by default. You can access that instance via
 'Yii::$app->errorHandler'.


PROPERTY DETAILS
------------------------------------------------------------------------------

<$discardExistingOutput>		*yii.web.ErrorHandler::$discardExistingOutput*
 See |yii.base.ErrorHandler::$discardExistingOutput|

<$memoryReserveSize>			*yii.web.ErrorHandler::$memoryReserveSize*
 See |yii.base.ErrorHandler::$memoryReserveSize|

<$exception>				*yii.web.ErrorHandler::$exception*
 See |yii.base.ErrorHandler::$exception|

<$maxSourceLines>			*yii.web.ErrorHandler::$maxSourceLines*
 (integer) Maximum number of source code lines to be displayed. Defaults to
 19.

<$maxTraceSourceLines>			*yii.web.ErrorHandler::$maxTraceSourceLines*
 (integer) Maximum number of trace source code lines to be displayed. Defaults
 to 13.

<$errorAction>				*yii.web.ErrorHandler::$errorAction*
 (string) The route (e.g. 'site/error') to the controller action that will be
 used to display external errors. Inside the action, it can retrieve the error
 information using 'Yii::$app->errorHandler->exception. This property defaults
 to null, meaning ErrorHandler will handle the error display.

<$errorView>				*yii.web.ErrorHandler::$errorView*
 (string) The path of the view file for rendering exceptions without call
 stack information.

<$exceptionView>			*yii.web.ErrorHandler::$exceptionView*
 (string) The path of the view file for rendering exceptions.

<$callStackItemView>			*yii.web.ErrorHandler::$callStackItemView*
 (string) The path of the view file for rendering exceptions and errors call
 stack element.

<$previousExceptionView>		*yii.web.ErrorHandler::$previousExceptionView*
 (string) The path of the view file for rendering previous exceptions.

<$behaviors>				*yii.web.ErrorHandler::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii.web.ErrorHandler::className*				 public
 See |yii.base.Object::className|


*yii.web.ErrorHandler::__construct*				 public
 See |yii.base.Object::__construct|


*yii.web.ErrorHandler::init*					 public
 See |yii.base.Object::init|


*yii.web.ErrorHandler::__get*					 public
 See |yii.base.Component::__get|


*yii.web.ErrorHandler::__set*					 public
 See |yii.base.Component::__set|


*yii.web.ErrorHandler::__isset* 				 public
 See |yii.base.Component::__isset|


*yii.web.ErrorHandler::__unset* 				 public
 See |yii.base.Component::__unset|


*yii.web.ErrorHandler::__call*					 public
 See |yii.base.Component::__call|


*yii.web.ErrorHandler::hasProperty*				 public
 See |yii.base.Component::hasProperty|


*yii.web.ErrorHandler::canGetProperty*				 public
 See |yii.base.Component::canGetProperty|


*yii.web.ErrorHandler::canSetProperty*				 public
 See |yii.base.Component::canSetProperty|


*yii.web.ErrorHandler::hasMethod*				 public
 See |yii.base.Component::hasMethod|


*yii.web.ErrorHandler::__clone* 				 public
 See |yii.base.Component::__clone|


*yii.web.ErrorHandler::behaviors*				 public
 See |yii.base.Component::behaviors|


*yii.web.ErrorHandler::hasEventHandlers*			 public
 See |yii.base.Component::hasEventHandlers|


*yii.web.ErrorHandler::on*					 public
 See |yii.base.Component::on|


*yii.web.ErrorHandler::off*					 public
 See |yii.base.Component::off|


*yii.web.ErrorHandler::trigger* 				 public
 See |yii.base.Component::trigger|


*yii.web.ErrorHandler::getBehavior*				 public
 See |yii.base.Component::getBehavior|


*yii.web.ErrorHandler::getBehaviors*				 public
 See |yii.base.Component::getBehaviors|


*yii.web.ErrorHandler::attachBehavior*				 public
 See |yii.base.Component::attachBehavior|


*yii.web.ErrorHandler::attachBehaviors* 			 public
 See |yii.base.Component::attachBehaviors|


*yii.web.ErrorHandler::detachBehavior*				 public
 See |yii.base.Component::detachBehavior|


*yii.web.ErrorHandler::detachBehaviors* 			 public
 See |yii.base.Component::detachBehaviors|


*yii.web.ErrorHandler::ensureBehaviors* 			 public
 See |yii.base.Component::ensureBehaviors|


*yii.web.ErrorHandler::register*				 public
 See |yii.base.ErrorHandler::register|


*yii.web.ErrorHandler::handleException* 			 public
 See |yii.base.ErrorHandler::handleException|


*yii.web.ErrorHandler::handleError*				 public
 See |yii.base.ErrorHandler::handleError|


*yii.web.ErrorHandler::handleFatalError*			 public
 See |yii.base.ErrorHandler::handleFatalError|


*yii.web.ErrorHandler::renderException* 			 protected
>
 renderException($exception)
<
(void)


    [$exception] (\Exception) The exception to be rendered.


*yii.web.ErrorHandler::logException*				 protected
 See |yii.base.ErrorHandler::logException|


*yii.web.ErrorHandler::clearOutput*				 public
 See |yii.base.ErrorHandler::clearOutput|


*yii.web.ErrorHandler::convertExceptionToError* 		 public
 See |yii.base.ErrorHandler::convertExceptionToError|


*yii.web.ErrorHandler::convertExceptionToString*		 public
 See |yii.base.ErrorHandler::convertExceptionToString|


*yii.web.ErrorHandler::convertExceptionToArray* 		 protected
>
 convertExceptionToArray($exception)
<
(array) The array representation of the exception.


    [$exception] (\Exception) The exception being converted


*yii.web.ErrorHandler::htmlEncode*				 public
>
 htmlEncode($text)
<
(string) Encoded original text.


    [$text] (string) To encode.


*yii.web.ErrorHandler::addTypeLinks*				 public
>
 addTypeLinks($code)
<
(string) Linkified with HTML type/class name.


    [$code] (string) Type/class name to be linkified.


*yii.web.ErrorHandler::renderFile*				 public
>
 renderFile($_file_, $_params_)
<
(string) The rendering result


    [$_file_] (string) The view file.
    [$_params_] (array) The parameters (name-value pairs) that will be
    extracted and made available in the view file.


*yii.web.ErrorHandler::renderPreviousExceptions*		 public
>
 renderPreviousExceptions($exception)
<
(string) HTML content of the rendered previous exceptions. Empty string if
there are none.


    [$exception] (\Exception) The exception whose precursors should be
    rendered.


*yii.web.ErrorHandler::renderCallStackItem*			 public
>
 renderCallStackItem($file, $line, $class, $method, $index)
<
(string) HTML content of the rendered call stack element.


    [$file] (string|null) Name where call has happened.
    [$line] (integer|null) Number on which call has happened.
    [$class] (string|null) Called class name.
    [$method] (string|null) Called function/method name.
    [$index] (integer) Number of the call stack element.


*yii.web.ErrorHandler::renderRequest*				 public
>
 renderRequest()
<
(string) The rendering result




*yii.web.ErrorHandler::isCoreFile*				 public
>
 isCoreFile($file)
<
(boolean) Whether given name of the file belongs to the framework.


    [$file] (string) Name to be checked.


*yii.web.ErrorHandler::createHttpStatusLink*			 public
>
 createHttpStatusLink($statusCode, $statusDescription)
<
(string) Generated HTML with HTTP status code information.


    [$statusCode] (integer) To be used to generate information link.
    [$statusDescription] (string) Description to display after the the status
    code.


*yii.web.ErrorHandler::createServerInformationLink*		 public
>
 createServerInformationLink()
<
(string) Server software information hyperlink.




*yii.web.ErrorHandler::createFrameworkVersionLink*		 public
>
 createFrameworkVersionLink()
<
(string) Framework version information hyperlink.





 vim:tw=78:ts=8:ft=help:norl:
