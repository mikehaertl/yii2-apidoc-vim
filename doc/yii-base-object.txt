
*yii/base/Object*  
=================

SUBCLASSES
------------------------------------------------------------------------------

|yii/di/ServiceLocator|
|yii/di/Container|
|yii/captcha/CaptchaAction|
|yii/captcha/CaptchaValidator|
|yii/captcha/Captcha|
|yii/captcha/CaptchaAsset|
|yii/mutex/FileMutex|
|yii/mutex/Mutex|
|yii/mutex/MysqlMutex|
|yii/mutex/DbMutex|
|yii/base/Request|
|yii/base/Controller|
|yii/base/Behavior|
|yii/base/Application|
|yii/base/Component|
|yii/base/ViewRenderer|
|yii/base/InlineAction|
|yii/base/Widget|
|yii/base/Action|
|yii/base/Formatter|
|yii/base/ModelEvent|
|yii/base/Theme|
|yii/base/ActionEvent|
|yii/base/MailEvent|
|yii/base/DynamicModel|
|yii/base/Response|
|yii/base/ErrorHandler|
|yii/base/View|
|yii/base/Model|
|yii/base/ActionFilter|
|yii/base/Event|
|yii/base/Module|
|yii/base/ViewEvent|
|yii/db/Command|
|yii/db/ColumnSchema|
|yii/db/DataReader|
|yii/db/Transaction|
|yii/db/Migration|
|yii/db/BatchQueryResult|
|yii/db/TableSchema|
|yii/db/ActiveQuery|
|yii/db/QueryBuilder|
|yii/db/Query|
|yii/db/Expression|
|yii/db/sqlite/QueryBuilder|
|yii/db/sqlite/Schema|
|yii/db/mssql/TableSchema|
|yii/db/mssql/QueryBuilder|
|yii/db/mssql/Schema|
|yii/db/mysql/QueryBuilder|
|yii/db/mysql/Schema|
|yii/db/ActiveRecord|
|yii/db/Connection|
|yii/db/pgsql/QueryBuilder|
|yii/db/pgsql/Schema|
|yii/db/oci/QueryBuilder|
|yii/db/oci/Schema|
|yii/db/BaseActiveRecord|
|yii/db/cubrid/QueryBuilder|
|yii/db/cubrid/Schema|
|yii/db/Schema|
|yii/test/Fixture|
|yii/test/DbFixture|
|yii/test/InitDbFixture|
|yii/test/ActiveFixture|
|yii/test/BaseActiveFixture|
|yii/i18n/GettextFile|
|yii/i18n/PhpMessageSource|
|yii/i18n/GettextMoFile|
|yii/i18n/MessageFormatter|
|yii/i18n/Formatter|
|yii/i18n/MessageSource|
|yii/i18n/GettextMessageSource|
|yii/i18n/I18N|
|yii/i18n/GettextPoFile|
|yii/i18n/DbMessageSource|
|yii/i18n/MissingTranslationEvent|
|yii/console/Request|
|yii/console/Controller|
|yii/console/Application|
|yii/console/controllers/HelpController|
|yii/console/controllers/CacheController|
|yii/console/controllers/MessageController|
|yii/console/controllers/AssetController|
|yii/console/controllers/FixtureController|
|yii/console/controllers/MigrateController|
|yii/console/Response|
|yii/console/ErrorHandler|
|yii/rbac/Item|
|yii/rbac/DbManager|
|yii/rbac/Rule|
|yii/rbac/PhpManager|
|yii/rbac/Assignment|
|yii/rbac/Role|
|yii/rbac/Permission|
|yii/rbac/BaseManager|
|yii/web/Request|
|yii/web/Controller|
|yii/web/AssetManager|
|yii/web/Application|
|yii/web/CookieCollection|
|yii/web/UrlManager|
|yii/web/ErrorAction|
|yii/web/ViewAction|
|yii/web/JsExpression|
|yii/web/GroupUrlRule|
|yii/web/AssetConverter|
|yii/web/Cookie|
|yii/web/User|
|yii/web/CacheSession|
|yii/web/AssetBundle|
|yii/web/Link|
|yii/web/Session|
|yii/web/HeaderCollection|
|yii/web/CompositeUrlRule|
|yii/web/JqueryAsset|
|yii/web/UploadedFile|
|yii/web/DbSession|
|yii/web/YiiAsset|
|yii/web/HtmlResponseFormatter|
|yii/web/UserEvent|
|yii/web/Response|
|yii/web/JsonResponseFormatter|
|yii/web/UrlRule|
|yii/web/ErrorHandler|
|yii/web/View|
|yii/web/XmlResponseFormatter|
|yii/rest/Controller|
|yii/rest/ActiveController|
|yii/rest/ViewAction|
|yii/rest/OptionsAction|
|yii/rest/IndexAction|
|yii/rest/Action|
|yii/rest/UpdateAction|
|yii/rest/CreateAction|
|yii/rest/Serializer|
|yii/rest/UrlRule|
|yii/rest/DeleteAction|
|yii/validators/DefaultValueValidator|
|yii/validators/BooleanValidator|
|yii/validators/CompareValidator|
|yii/validators/RegularExpressionValidator|
|yii/validators/RangeValidator|
|yii/validators/StringValidator|
|yii/validators/FileValidator|
|yii/validators/NumberValidator|
|yii/validators/Validator|
|yii/validators/DateValidator|
|yii/validators/ExistValidator|
|yii/validators/FilterValidator|
|yii/validators/PunycodeAsset|
|yii/validators/UniqueValidator|
|yii/validators/InlineValidator|
|yii/validators/ValidationAsset|
|yii/validators/SafeValidator|
|yii/validators/UrlValidator|
|yii/validators/ImageValidator|
|yii/validators/RequiredValidator|
|yii/validators/EmailValidator|
|yii/mail/BaseMailer|
|yii/mail/BaseMessage|
|yii/caching/XCache|
|yii/caching/FileDependency|
|yii/caching/DummyCache|
|yii/caching/MemCacheServer|
|yii/caching/WinCache|
|yii/caching/DbCache|
|yii/caching/ApcCache|
|yii/caching/ZendDataCache|
|yii/caching/ChainedDependency|
|yii/caching/Cache|
|yii/caching/MemCache|
|yii/caching/ExpressionDependency|
|yii/caching/GroupDependency|
|yii/caching/DbDependency|
|yii/caching/FileCache|
|yii/caching/Dependency|
|yii/log/DbTarget|
|yii/log/SyslogTarget|
|yii/log/FileTarget|
|yii/log/Target|
|yii/log/Logger|
|yii/log/EmailTarget|
|yii/log/Dispatcher|
|yii/data/SqlDataProvider|
|yii/data/ArrayDataProvider|
|yii/data/Pagination|
|yii/data/Sort|
|yii/data/BaseDataProvider|
|yii/data/ActiveDataProvider|
|yii/widgets/Breadcrumbs|
|yii/widgets/ActiveField|
|yii/widgets/ContentDecorator|
|yii/widgets/ListView|
|yii/widgets/DetailView|
|yii/widgets/ActiveForm|
|yii/widgets/InputWidget|
|yii/widgets/ActiveFormAsset|
|yii/widgets/MaskedInputAsset|
|yii/widgets/MaskedInput|
|yii/widgets/Menu|
|yii/widgets/Spaceless|
|yii/widgets/BaseListView|
|yii/widgets/LinkSorter|
|yii/widgets/PjaxAsset|
|yii/widgets/Block|
|yii/widgets/FragmentCache|
|yii/widgets/Pjax|
|yii/widgets/LinkPager|
|yii/behaviors/AttributeBehavior|
|yii/behaviors/TimestampBehavior|
|yii/behaviors/BlameableBehavior|
|yii/filters/RateLimiter|
|yii/filters/AccessRule|
|yii/filters/auth/HttpBearerAuth|
|yii/filters/auth/AuthMethod|
|yii/filters/auth/CompositeAuth|
|yii/filters/auth/QueryParamAuth|
|yii/filters/auth/HttpBasicAuth|
|yii/filters/AccessControl|
|yii/filters/HttpCache|
|yii/filters/PageCache|
|yii/filters/ContentNegotiator|
|yii/filters/VerbFilter|
|yii/grid/GridView|
|yii/grid/Column|
|yii/grid/CheckboxColumn|
|yii/grid/DataColumn|
|yii/grid/GridViewAsset|
|yii/grid/ActionColumn|
|yii/grid/SerialColumn|
|yii/sphinx/Command|
|yii/sphinx/ColumnSchema|
|yii/sphinx/ActiveQuery|
|yii/sphinx/QueryBuilder|
|yii/sphinx/IndexSchema|
|yii/sphinx/Query|
|yii/sphinx/ActiveRecord|
|yii/sphinx/Connection|
|yii/sphinx/Schema|
|yii/bootstrap/Button|
|yii/bootstrap/Alert|
|yii/bootstrap/ActiveField|
|yii/bootstrap/BootstrapThemeAsset|
|yii/bootstrap/ActiveForm|
|yii/bootstrap/Collapse|
|yii/bootstrap/Widget|
|yii/bootstrap/Carousel|
|yii/bootstrap/ButtonDropdown|
|yii/bootstrap/Tabs|
|yii/bootstrap/Progress|
|yii/bootstrap/Modal|
|yii/bootstrap/Dropdown|
|yii/bootstrap/Nav|
|yii/bootstrap/BootstrapAsset|
|yii/bootstrap/ButtonGroup|
|yii/bootstrap/BootstrapPluginAsset|
|yii/bootstrap/NavBar|
|yii/gii/components/ActiveField|
|yii/gii/controllers/DefaultController|
|yii/gii/CodeFile|
|yii/gii/GiiAsset|
|yii/gii/Generator|
|yii/gii/generators/crud/Generator|
|yii/gii/generators/form/Generator|
|yii/gii/generators/model/Generator|
|yii/gii/generators/controller/Generator|
|yii/gii/generators/module/Generator|
|yii/gii/generators/extension/Generator|
|yii/gii/Module|
|yii/debug/components/search/matchers/SameAs|
|yii/debug/components/search/matchers/LowerThan|
|yii/debug/components/search/matchers/Base|
|yii/debug/components/search/matchers/GreaterThan|
|yii/debug/components/search/Filter|
|yii/debug/models/search/Profile|
|yii/debug/models/search/Debug|
|yii/debug/models/search/Base|
|yii/debug/models/search/Log|
|yii/debug/models/search/Db|
|yii/debug/models/search/Mail|
|yii/debug/LogTarget|
|yii/debug/controllers/DefaultController|
|yii/debug/DebugAsset|
|yii/debug/Panel|
|yii/debug/Module|
|yii/debug/panels/MailPanel|
|yii/debug/panels/DbPanel|
|yii/debug/panels/ConfigPanel|
|yii/debug/panels/ProfilingPanel|
|yii/debug/panels/RequestPanel|
|yii/debug/panels/LogPanel|
|yii/redis/LuaScriptBuilder|
|yii/redis/Session|
|yii/redis/ActiveQuery|
|yii/redis/Cache|
|yii/redis/ActiveRecord|
|yii/redis/Connection|
|yii/twig/ViewRenderer|
|yii/smarty/ViewRenderer|
|yii/swiftmailer/Mailer|
|yii/swiftmailer/Message|
|yii/faker/FixtureController|
|yii/jui/CoreAsset|
|yii/jui/ThemeAsset|
|yii/jui/DatePickerRegionalAsset|
|yii/jui/ProgressBarAsset|
|yii/jui/Droppable|
|yii/jui/SpinnerAsset|
|yii/jui/SelectableAsset|
|yii/jui/EffectAsset|
|yii/jui/ButtonAsset|
|yii/jui/Widget|
|yii/jui/InputWidget|
|yii/jui/ProgressBar|
|yii/jui/Spinner|
|yii/jui/ResizableAsset|
|yii/jui/Tabs|
|yii/jui/Accordion|
|yii/jui/Resizable|
|yii/jui/TabsAsset|
|yii/jui/DraggableAsset|
|yii/jui/Menu|
|yii/jui/Selectable|
|yii/jui/SliderAsset|
|yii/jui/AutoComplete|
|yii/jui/TooltipAsset|
|yii/jui/DialogAsset|
|yii/jui/SliderInput|
|yii/jui/SortableAsset|
|yii/jui/DatePickerAsset|
|yii/jui/Draggable|
|yii/jui/Dialog|
|yii/jui/AccordionAsset|
|yii/jui/Sortable|
|yii/jui/Slider|
|yii/jui/MenuAsset|
|yii/jui/DatePicker|
|yii/jui/AutoCompleteAsset|
|yii/jui/DroppableAsset|
|yii/elasticsearch/Command|
|yii/elasticsearch/ActiveQuery|
|yii/elasticsearch/QueryBuilder|
|yii/elasticsearch/Query|
|yii/elasticsearch/DebugAction|
|yii/elasticsearch/ActiveRecord|
|yii/elasticsearch/Connection|
|yii/elasticsearch/DebugPanel|
|yii/codeception/BasePage|
|yii/mongodb/file/ActiveQuery|
|yii/mongodb/file/Query|
|yii/mongodb/file/ActiveRecord|
|yii/mongodb/file/Collection|
|yii/mongodb/Session|
|yii/mongodb/ActiveQuery|
|yii/mongodb/ActiveFixture|
|yii/mongodb/Query|
|yii/mongodb/Cache|
|yii/mongodb/ActiveRecord|
|yii/mongodb/Connection|
|yii/mongodb/Collection|
|yii/mongodb/Database|
|yii/apidoc/components/BaseController|
|yii/apidoc/commands/ApiController|
|yii/apidoc/commands/GuideController|
|yii/apidoc/models/TraitDoc|
|yii/apidoc/models/ParamDoc|
|yii/apidoc/models/PropertyDoc|
|yii/apidoc/models/TypeDoc|
|yii/apidoc/models/Context|
|yii/apidoc/models/ClassDoc|
|yii/apidoc/models/FunctionDoc|
|yii/apidoc/models/BaseDoc|
|yii/apidoc/models/EventDoc|
|yii/apidoc/models/MethodDoc|
|yii/apidoc/models/InterfaceDoc|
|yii/apidoc/models/ConstDoc|
|yii/apidoc/templates/bootstrap/ApiRenderer|
|yii/apidoc/templates/bootstrap/SideNavWidget|
|yii/apidoc/templates/bootstrap/assets/JsSearchAsset|
|yii/apidoc/templates/bootstrap/assets/AssetBundle|
|yii/apidoc/templates/bootstrap/GuideRenderer|
|yii/apidoc/templates/online/ApiRenderer|
|yii/apidoc/templates/html/ApiRenderer|
|yii/apidoc/templates/html/GuideRenderer|
|yii/apidoc/renderers/BaseRenderer|
|yii/apidoc/renderers/ApiRenderer|
|yii/apidoc/renderers/GuideRenderer|
|yii/authclient/BaseClient|
|yii/authclient/OpenId|
|yii/authclient/BaseOAuth|
|yii/authclient/OAuthToken|
|yii/authclient/AuthAction|
|yii/authclient/clients/Facebook|
|yii/authclient/clients/YandexOAuth|
|yii/authclient/clients/LinkedIn|
|yii/authclient/clients/GoogleOpenId|
|yii/authclient/clients/GoogleOAuth|
|yii/authclient/clients/Live|
|yii/authclient/clients/GitHub|
|yii/authclient/clients/YandexOpenId|
|yii/authclient/clients/Twitter|
|yii/authclient/OAuth2|
|yii/authclient/widgets/AuthChoiceAsset|
|yii/authclient/widgets/AuthChoice|
|yii/authclient/Collection|
|yii/authclient/OAuth1|
|yii/authclient/signature/PlainText|
|yii/authclient/signature/HmacSha1|
|yii/authclient/signature/RsaSha1|
|yii/authclient/signature/BaseMethod|

DESCRIPTION
------------------------------------------------------------------------------

 A property is defined by a getter method (e.g. 'getLabel'), and/or a setter
 method (e.g. 'setLabel'). For example, the following getter and setter
 methods define a property named 'label':

   private $_label;

   public function getLabel()
   {
       return $this->_label;
   }

   public function setLabel($value)
   {
       $this->_label = $value;
   }

 Property names are *case-insensitive*.

 A property can be accessed like a member variable of an object. Reading or
 writing a property will cause the invocation of the corresponding getter or
 setter method. For example,

   // equivalent to $label = $object->getLabel();
   $label = $object->label;
   // equivalent to $object->setLabel('abc');
   $object->label = 'abc';

 If a property has only a getter method and has no setter method, it is
 considered as *read-only*. In this case, trying to modify the property value
 will cause an exception.

 One can call 'hasProperty()', 'canGetProperty()' and/or 'canSetProperty()' to
 check the existence of a property.

 Besides the property feature, Object also introduces an important object
 initialization life cycle. In particular, creating an new instance of Object
 or its derived class will involve the following life cycles sequentially:

 1. the class constructor is invoked; 2. object properties are initialized
 according to the given configuration; 3. the 'init()' method is invoked.

 In the above, both Step 2 and 3 occur at the end of the class constructor. It
 is recommended that you perform object initialization in the 'init()' method
 because at that stage, the object configuration is already applied.

 In order to ensure the above life cycles, if a child class of Object needs to
 override the constructor, it should be done like the following:

   public function __construct($param1, $param2, ..., $config = [])
   {
       ...
       parent::__construct($config);
   }

 That is, a '$config' parameter (defaults to '[]') should be declared as the
 last parameter of the constructor, and the parent implementation should be
 called at the end of the constructor.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/base/Object::className*				public
>
 className()
<
(string) The fully qualified name of this class.




*yii/base/Object::__construct*				public
>
 __construct($config='[]')
<
(void)

 The default implementation does two things:

 - Initializes the object with the given configuration '$config'. - Call
 'init()'.

 If this method is overridden in a child class, it is recommended that

 - the last parameter of the constructor is a configuration array, like
 '$config' here. - call the parent implementation at the end of the
 constructor.
    [$config] (array) Name-value pairs that will be used to initialize the
    object properties


*yii/base/Object::init*					public
>
 init()
<
(void)

 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.


*yii/base/Object::__get*					public
>
 __get($name)
<
(mixed) The property value

 Do not call this method directly as it is a PHP magic method that will be
 implicitly called when executing '$value = $object->property;'.
    [$name] (string) The property name


*yii/base/Object::__set*					public
>
 __set($name, $value)
<
(void)

 Do not call this method directly as it is a PHP magic method that will be
 implicitly called when executing '$object->property = $value;'.
    [$name] (string) The property name or the event name
    [$value] (mixed) The property value


*yii/base/Object::__isset*				public
>
 __isset($name)
<
(boolean) Whether the named property is set (not null).

 Do not call this method directly as it is a PHP magic method that will be
 implicitly called when executing 'isset($object->property)'.

 Note that if the property is not defined, false will be returned.
    [$name] (string) The property name or the event name


*yii/base/Object::__unset*				public
>
 __unset($name)
<
(void)

 Do not call this method directly as it is a PHP magic method that will be
 implicitly called when executing 'unset($object->property)'.

 Note that if the property is not defined, this method will do nothing. If the
 property is read-only, it will throw an exception.
    [$name] (string) The property name


*yii/base/Object::__call*					public
>
 __call($name, $params)
<
(mixed) The method return value

 Do not call this method directly as it is a PHP magic method that will be
 implicitly called when an unknown method is being invoked.
    [$name] (string) The method name
    [$params] (array) Method parameters


*yii/base/Object::hasProperty*				public
>
 hasProperty($name, $checkVars='true')
<
(boolean) Whether the property is defined

 A property is defined if:

 - the class has a getter or setter method associated with the specified name 
  (in this case, property name is case-insensitive); - the class has a member
 variable with the specified name (when '$checkVars' is true);
    [$name] (string) The property name
    [$checkVars] (boolean) Whether to treat member variables as properties


*yii/base/Object::canGetProperty*				public
>
 canGetProperty($name, $checkVars='true')
<
(boolean) Whether the property can be read

 A property is readable if:

 - the class has a getter method associated with the specified name   (in this
 case, property name is case-insensitive); - the class has a member variable
 with the specified name (when '$checkVars' is true);
    [$name] (string) The property name
    [$checkVars] (boolean) Whether to treat member variables as properties


*yii/base/Object::canSetProperty*				public
>
 canSetProperty($name, $checkVars='true')
<
(boolean) Whether the property can be written

 A property is writable if:

 - the class has a setter method associated with the specified name   (in this
 case, property name is case-insensitive); - the class has a member variable
 with the specified name (when '$checkVars' is true);
    [$name] (string) The property name
    [$checkVars] (boolean) Whether to treat member variables as properties


*yii/base/Object::hasMethod*				public
>
 hasMethod($name)
<
(boolean) Whether the property is defined

 The default implementation is a call to php function 'method_exists()'. You
 may override this method when you implemented the php magic method
 '__call()'.
    [$name] (string) The property name



 vim:tw=78:ts=8:ft=help:norl:
