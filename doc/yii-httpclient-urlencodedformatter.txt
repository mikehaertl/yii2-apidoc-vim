
*yii/httpclient/UrlEncodedFormatter*   >> |yii/base/BaseObject|
====================================


PROPERTY DETAILS
------------------------------------------------------------------------------


$encodingType				*yii/httpclient/UrlEncodedFormatter::$encodingType*

 (int) URL encoding type. Possible values are:  
   - PHP_QUERY_RFC1738 - encoding is performed per 'RFC 1738' and the
   'application/x-www-form-urlencoded' media type,    which implies that
 spaces are encoded as plus (+) signs. This is most common encoding type used
 by most web    applications.  
   - PHP_QUERY_RFC3986 - then encoding is performed according to 'RFC
   3986', and spaces will be percent encoded (%20).    This encoding type is
 required by OpenID and OAuth protocols.

$charset				*yii/httpclient/UrlEncodedFormatter::$charset*

 (string) The content charset. If not set, it will use the value of
 '\yii\base\Application::charset'.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|


*yii/httpclient/UrlEncodedFormatter::format*		public
>
 format($request)
<
return (\yii\httpclient\Request) Formatted request.

 Formats given HTTP request message.







    [$request] (\yii\httpclient\Request) HTTP request instance.



 vim:tw=78:ts=8:ft=help:norl:
