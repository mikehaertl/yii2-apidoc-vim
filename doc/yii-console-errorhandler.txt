
*yii\console\ErrorHandler*   >> yii\base\ErrorHandler
==========================

 ErrorHandler is configured as an application component in
 [[\yii\base\Application]] by default. You can access that instance via
 'Yii::$app->errorHandler'.


PROPERTY DETAILS
------------------------------------------------------------------------------

<$discardExistingOutput>		*yii.console.ErrorHandler::$discardExistingOutput*
 See |yii.base.ErrorHandler::$discardExistingOutput|

<$memoryReserveSize>			*yii.console.ErrorHandler::$memoryReserveSize*
 See |yii.base.ErrorHandler::$memoryReserveSize|

<$exception>				*yii.console.ErrorHandler::$exception*
 See |yii.base.ErrorHandler::$exception|

<$behaviors>				*yii.console.ErrorHandler::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii.console.ErrorHandler::className*				 public
 See |yii.base.Object::className|


*yii.console.ErrorHandler::__construct* 			 public
 See |yii.base.Object::__construct|


*yii.console.ErrorHandler::init*				 public
 See |yii.base.Object::init|


*yii.console.ErrorHandler::__get*				 public
 See |yii.base.Component::__get|


*yii.console.ErrorHandler::__set*				 public
 See |yii.base.Component::__set|


*yii.console.ErrorHandler::__isset*				 public
 See |yii.base.Component::__isset|


*yii.console.ErrorHandler::__unset*				 public
 See |yii.base.Component::__unset|


*yii.console.ErrorHandler::__call*				 public
 See |yii.base.Component::__call|


*yii.console.ErrorHandler::hasProperty* 			 public
 See |yii.base.Component::hasProperty|


*yii.console.ErrorHandler::canGetProperty*			 public
 See |yii.base.Component::canGetProperty|


*yii.console.ErrorHandler::canSetProperty*			 public
 See |yii.base.Component::canSetProperty|


*yii.console.ErrorHandler::hasMethod*				 public
 See |yii.base.Component::hasMethod|


*yii.console.ErrorHandler::__clone*				 public
 See |yii.base.Component::__clone|


*yii.console.ErrorHandler::behaviors*				 public
 See |yii.base.Component::behaviors|


*yii.console.ErrorHandler::hasEventHandlers*			 public
 See |yii.base.Component::hasEventHandlers|


*yii.console.ErrorHandler::on*					 public
 See |yii.base.Component::on|


*yii.console.ErrorHandler::off* 				 public
 See |yii.base.Component::off|


*yii.console.ErrorHandler::trigger*				 public
 See |yii.base.Component::trigger|


*yii.console.ErrorHandler::getBehavior* 			 public
 See |yii.base.Component::getBehavior|


*yii.console.ErrorHandler::getBehaviors*			 public
 See |yii.base.Component::getBehaviors|


*yii.console.ErrorHandler::attachBehavior*			 public
 See |yii.base.Component::attachBehavior|


*yii.console.ErrorHandler::attachBehaviors*			 public
 See |yii.base.Component::attachBehaviors|


*yii.console.ErrorHandler::detachBehavior*			 public
 See |yii.base.Component::detachBehavior|


*yii.console.ErrorHandler::detachBehaviors*			 public
 See |yii.base.Component::detachBehaviors|


*yii.console.ErrorHandler::ensureBehaviors*			 public
 See |yii.base.Component::ensureBehaviors|


*yii.console.ErrorHandler::register*				 public
 See |yii.base.ErrorHandler::register|


*yii.console.ErrorHandler::handleException*			 public
 See |yii.base.ErrorHandler::handleException|


*yii.console.ErrorHandler::handleError* 			 public
 See |yii.base.ErrorHandler::handleError|


*yii.console.ErrorHandler::handleFatalError*			 public
 See |yii.base.ErrorHandler::handleFatalError|


*yii.console.ErrorHandler::renderException*			 protected
>
 renderException($exception)
<
(void)


    [$exception] (\Exception) The exception to be rendered.


*yii.console.ErrorHandler::logException*			 protected
 See |yii.base.ErrorHandler::logException|


*yii.console.ErrorHandler::clearOutput* 			 public
 See |yii.base.ErrorHandler::clearOutput|


*yii.console.ErrorHandler::convertExceptionToError*		 public
 See |yii.base.ErrorHandler::convertExceptionToError|


*yii.console.ErrorHandler::convertExceptionToString*		 public
 See |yii.base.ErrorHandler::convertExceptionToString|


*yii.console.ErrorHandler::formatMessage*			 protected
>
 formatMessage($message, $format='[\\yii\\helpers\\Console::FG_RED,\\yii\\helpers\\Console::BOLD]')
<
(string) The colorized message.


    [$message] (string) The message to colorize.
    [$format] (array) The message format.



 vim:tw=78:ts=8:ft=help:norl:
