
*yii/console/controllers/AssetController*   >> |yii/console/Controller|
=========================================

DESCRIPTION
------------------------------------------------------------------------------

 Usage: 1. Create a configuration file using the 'template' action:

    yii asset/template /path/to/myapp/config.php

 2. Edit the created config file, adjusting it for your web application needs.
 3. Run the 'compress' action, using created config:

    yii asset /path/to/myapp/config.php
 /path/to/myapp/config/assets_compressed.php

 4. Adjust your web application config to use compressed assets.

 Note: in the console environment some path aliases like '@webroot' and '@web'
 may not exist, so corresponding paths inside the configuration should be
 specified directly.

 Note: by default this command relies on an external tools to perform actual
 files compression, check 'jsCompressor' and 'cssCompressor' for more details.


PROPERTY DETAILS
------------------------------------------------------------------------------

$id					*yii/console/controllers/AssetController::$id*
 See |yii/base/Controller::$id|

$module					*yii/console/controllers/AssetController::$module*
 See |yii/base/Controller::$module|

$defaultAction				*yii/console/controllers/AssetController::$defaultAction*
 (string) Controller default action ID.

$layout					*yii/console/controllers/AssetController::$layout*
 See |yii/base/Controller::$layout|

$action					*yii/console/controllers/AssetController::$action*
 See |yii/base/Controller::$action|

$interactive				*yii/console/controllers/AssetController::$interactive*
 See |yii/console/Controller::$interactive|

$color					*yii/console/controllers/AssetController::$color*
 See |yii/console/Controller::$color|

$bundles				*yii/console/controllers/AssetController::$bundles*
 (array) List of asset bundles to be compressed.

$targets				*yii/console/controllers/AssetController::$targets*
 (array) List of asset bundles, which represents output compressed files. You
 can specify the name of the output compressed file using 'css' and 'js' keys:
 For example:

   yii help [command name]

 File names can contain placeholder "{hash}", which will be filled by the hash
 of the resulting file.

$jsCompressor				*yii/console/controllers/AssetController::$jsCompressor*
 (string|callable) JavaScript file compressor. If a string, it is treated as
 shell command template, which should contain placeholders {from} 
   - source file name - and {to} - output file name. Otherwise, it is treated
 as PHP callback, which should perform the compression.

 Default value relies on usage of "Closure Compiler"

$cssCompressor				*yii/console/controllers/AssetController::$cssCompressor*
 (string|callable) CSS file compressor. If a string, it is treated as shell
 command template, which should contain placeholders {from} 
   - source file name - and {to} - output file name. Otherwise, it is treated
 as PHP callback, which should perform the compression.

 Default value relies on usage of "YUI Compressor"

$behaviors				*yii/console/controllers/AssetController::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

$modules				*yii/console/controllers/AssetController::$modules*
 (\yii\base\Module[]) All ancestor modules that this controller is located
 within.

$uniqueId				*yii/console/controllers/AssetController::$uniqueId*
 (string) The controller ID that is prefixed with the module ID (if any).

$route					*yii/console/controllers/AssetController::$route*
 (string) The route (module ID, controller ID and action ID) of the current
 request.

$view					*yii/console/controllers/AssetController::$view*
 (\yii\base\View|\yii\web\View) The view object that can be used to render
 views or view files.

$viewPath				*yii/console/controllers/AssetController::$viewPath*
 (string) The directory containing the view files for this controller.

$assetManager				*yii/console/controllers/AssetController::$assetManager*
 (\yii\web\AssetManager) Asset manager instance.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/console/controllers/AssetController::className*	public
 See |yii/base/Object::className|


*yii/console/controllers/AssetController::__construct*	public
 See |yii/base/Controller::__construct|


*yii/console/controllers/AssetController::init*		public
 See |yii/base/Object::init|


*yii/console/controllers/AssetController::__get*		public
 See |yii/base/Component::__get|


*yii/console/controllers/AssetController::__set*		public
 See |yii/base/Component::__set|


*yii/console/controllers/AssetController::__isset*	public
 See |yii/base/Component::__isset|


*yii/console/controllers/AssetController::__unset*	public
 See |yii/base/Component::__unset|


*yii/console/controllers/AssetController::__call*		public
 See |yii/base/Component::__call|


*yii/console/controllers/AssetController::hasProperty*	public
 See |yii/base/Component::hasProperty|


*yii/console/controllers/AssetController::canGetProperty*	public
 See |yii/base/Component::canGetProperty|


*yii/console/controllers/AssetController::canSetProperty*	public
 See |yii/base/Component::canSetProperty|


*yii/console/controllers/AssetController::hasMethod*	public
 See |yii/base/Component::hasMethod|


*yii/console/controllers/AssetController::__clone*	public
 See |yii/base/Component::__clone|


*yii/console/controllers/AssetController::behaviors*	public
 See |yii/base/Component::behaviors|


*yii/console/controllers/AssetController::hasEventHandlers*public
 See |yii/base/Component::hasEventHandlers|


*yii/console/controllers/AssetController::on*		public
 See |yii/base/Component::on|


*yii/console/controllers/AssetController::off*		public
 See |yii/base/Component::off|


*yii/console/controllers/AssetController::trigger*	public
 See |yii/base/Component::trigger|


*yii/console/controllers/AssetController::getBehavior*	public
 See |yii/base/Component::getBehavior|


*yii/console/controllers/AssetController::getBehaviors*	public
 See |yii/base/Component::getBehaviors|


*yii/console/controllers/AssetController::attachBehavior*	public
 See |yii/base/Component::attachBehavior|


*yii/console/controllers/AssetController::attachBehaviors*public
 See |yii/base/Component::attachBehaviors|


*yii/console/controllers/AssetController::detachBehavior*	public
 See |yii/base/Component::detachBehavior|


*yii/console/controllers/AssetController::detachBehaviors*public
 See |yii/base/Component::detachBehaviors|


*yii/console/controllers/AssetController::ensureBehaviors*public
 See |yii/base/Component::ensureBehaviors|


*yii/console/controllers/AssetController::actions*	public
 See |yii/base/Controller::actions|


*yii/console/controllers/AssetController::runAction*	public
 See |yii/console/Controller::runAction|


*yii/console/controllers/AssetController::run*		public
 See |yii/base/Controller::run|


*yii/console/controllers/AssetController::bindActionParams*public
 See |yii/console/Controller::bindActionParams|


*yii/console/controllers/AssetController::createAction*	public
 See |yii/base/Controller::createAction|


*yii/console/controllers/AssetController::beforeAction*	public
 See |yii/base/Controller::beforeAction|


*yii/console/controllers/AssetController::afterAction*	public
 See |yii/base/Controller::afterAction|


*yii/console/controllers/AssetController::getModules*	public
 See |yii/base/Controller::getModules|


*yii/console/controllers/AssetController::getUniqueId*	public
 See |yii/base/Controller::getUniqueId|


*yii/console/controllers/AssetController::getRoute*	public
 See |yii/base/Controller::getRoute|


*yii/console/controllers/AssetController::render*		public
 See |yii/base/Controller::render|


*yii/console/controllers/AssetController::renderPartial*	public
 See |yii/base/Controller::renderPartial|


*yii/console/controllers/AssetController::renderFile*	public
 See |yii/base/Controller::renderFile|


*yii/console/controllers/AssetController::getView*	public
 See |yii/base/Controller::getView|


*yii/console/controllers/AssetController::setView*	public
 See |yii/base/Controller::setView|


*yii/console/controllers/AssetController::getViewPath*	public
 See |yii/base/Controller::getViewPath|


*yii/console/controllers/AssetController::findLayoutFile*	public
 See |yii/base/Controller::findLayoutFile|


*yii/console/controllers/AssetController::isColorEnabled*	public
 See |yii/console/Controller::isColorEnabled|


*yii/console/controllers/AssetController::ansiFormat*	public
 See |yii/console/Controller::ansiFormat|


*yii/console/controllers/AssetController::stdout*		public
 See |yii/console/Controller::stdout|


*yii/console/controllers/AssetController::stderr*		public
 See |yii/console/Controller::stderr|


*yii/console/controllers/AssetController::prompt*		public
 See |yii/console/Controller::prompt|


*yii/console/controllers/AssetController::confirm*	public
 See |yii/console/Controller::confirm|


*yii/console/controllers/AssetController::select*		public
 See |yii/console/Controller::select|


*yii/console/controllers/AssetController::options*	public
 See |yii/console/Controller::options|


*yii/console/controllers/AssetController::getAssetManager*public
>
 getAssetManager()
<
(\yii\web\AssetManager) Asset manager instance.



*yii/console/controllers/AssetController::setAssetManager*public
>
 setAssetManager($assetManager)
<
(void)

    [$assetManager] (\yii\web\AssetManager|array) Asset manager instance or
    its array configuration.


*yii/console/controllers/AssetController::actionCompress*	public
>
 actionCompress($configFile, $bundleFile)
<
(void)

 During the process new asset bundle configuration file will be created. You
 should replace your original asset bundle configuration with this file in
 order to use compressed files.
    [$configFile] (string) Configuration file name.
    [$bundleFile] (string) Output asset bundles configuration file name.


*yii/console/controllers/AssetController::loadConfiguration*protected
>
 loadConfiguration($configFile)
<
(void)

    [$configFile] (string) Configuration file name.


*yii/console/controllers/AssetController::loadBundles*	protected
>
 loadBundles($bundles)
<
(\yii\web\AssetBundle[]) List of source asset bundles.

    [$bundles] (string[]) List of asset bundle names


*yii/console/controllers/AssetController::loadDependency*	protected
>
 loadDependency($bundle, $result)
<
(void)

    [$bundle] (\yii\web\AssetBundle) Bundle instance
    [$result] (array) Already loaded bundles list.


*yii/console/controllers/AssetController::loadTargets*	protected
>
 loadTargets($targets, $bundles)
<
(\yii\web\AssetBundle[]) List of output asset bundles.

    [$targets] (array) Output asset bundles configuration.
    [$bundles] (\yii\web\AssetBundle[]) List of source asset bundles.


*yii/console/controllers/AssetController::buildTarget*	protected
>
 buildTarget($target, $type, $bundles)
<
(void)

    [$target] (\yii\web\AssetBundle) Output asset bundle
    [$type] (string) Either 'js' or 'css'.
    [$bundles] (\yii\web\AssetBundle[]) Source asset bundles.


*yii/console/controllers/AssetController::adjustDependency*protected
>
 adjustDependency($targets, $bundles)
<
(\yii\web\AssetBundle[]) Output asset bundles.

    [$targets] (\yii\web\AssetBundle[]) Output asset bundles.
    [$bundles] (\yii\web\AssetBundle[]) Source asset bundles.


*yii/console/controllers/AssetController::registerBundle*	protected
>
 registerBundle($bundles, $name, $registered)
<
(void)

    [$bundles] (\yii\web\AssetBundle[]) Asset bundles list.
    [$name] (string) Bundle name.
    [$registered] (array) Stores already registered names.


*yii/console/controllers/AssetController::saveTargets*	protected
>
 saveTargets($targets, $bundleFile)
<
(void)

    [$targets] (\yii\web\AssetBundle[]) List of asset bundles to be saved.
    [$bundleFile] (string) Output file name.


*yii/console/controllers/AssetController::compressJsFiles*protected
>
 compressJsFiles($inputFiles, $outputFile)
<
(void)

    [$inputFiles] (array) List of source file names.
    [$outputFile] (string) Output file name.


*yii/console/controllers/AssetController::compressCssFiles*protected
>
 compressCssFiles($inputFiles, $outputFile)
<
(void)

    [$inputFiles] (array) List of source file names.
    [$outputFile] (string) Output file name.


*yii/console/controllers/AssetController::combineJsFiles*	public
>
 combineJsFiles($inputFiles, $outputFile)
<
(void)

    [$inputFiles] (array) Source file names.
    [$outputFile] (string) Output file name.


*yii/console/controllers/AssetController::combineCssFiles*public
>
 combineCssFiles($inputFiles, $outputFile)
<
(void)

    [$inputFiles] (array) Source file names.
    [$outputFile] (string) Output file name.


*yii/console/controllers/AssetController::adjustCssUrl*	protected
>
 adjustCssUrl($cssContent, $inputFilePath, $outputFilePath)
<
(string) Adjusted CSS content.

    [$cssContent] (string) Source CSS content.
    [$inputFilePath] (string) Input CSS file name.
    [$outputFilePath] (string) Output CSS file name.


*yii/console/controllers/AssetController::actionTemplate*	public
>
 actionTemplate($configFile)
<
(void)

    [$configFile] (string) Output file name.



 vim:tw=78:ts=8:ft=help:norl:
