
*yii/bootstrap/BaseHtml*   >> |yii/helpers/Html|
========================

SUBCLASSES
------------------------------------------------------------------------------

|yii/bootstrap/Html|

DESCRIPTION
------------------------------------------------------------------------------

 Do not use BaseHtml. Use 'Html' instead.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/helpers/BaseHtml::encode|
 |yii/helpers/BaseHtml::decode|
 |yii/helpers/BaseHtml::tag|
 |yii/helpers/BaseHtml::beginTag|
 |yii/helpers/BaseHtml::endTag|
 |yii/helpers/BaseHtml::style|
 |yii/helpers/BaseHtml::script|
 |yii/helpers/BaseHtml::cssFile|
 |yii/helpers/BaseHtml::jsFile|
 |yii/helpers/BaseHtml::csrfMetaTags|
 |yii/helpers/BaseHtml::beginForm|
 |yii/helpers/BaseHtml::endForm|
 |yii/helpers/BaseHtml::a|
 |yii/helpers/BaseHtml::mailto|
 |yii/helpers/BaseHtml::img|
 |yii/helpers/BaseHtml::label|
 |yii/helpers/BaseHtml::button|
 |yii/helpers/BaseHtml::submitButton|
 |yii/helpers/BaseHtml::resetButton|
 |yii/helpers/BaseHtml::input|
 |yii/helpers/BaseHtml::buttonInput|
 |yii/helpers/BaseHtml::submitInput|
 |yii/helpers/BaseHtml::resetInput|
 |yii/helpers/BaseHtml::textInput|
 |yii/helpers/BaseHtml::hiddenInput|
 |yii/helpers/BaseHtml::passwordInput|
 |yii/helpers/BaseHtml::fileInput|
 |yii/helpers/BaseHtml::textarea|
 |yii/helpers/BaseHtml::radio|
 |yii/helpers/BaseHtml::checkbox|
 |yii/helpers/BaseHtml::booleanInput|
 |yii/helpers/BaseHtml::dropDownList|
 |yii/helpers/BaseHtml::listBox|
 |yii/helpers/BaseHtml::ul|
 |yii/helpers/BaseHtml::ol|
 |yii/helpers/BaseHtml::activeLabel|
 |yii/helpers/BaseHtml::activeHint|
 |yii/helpers/BaseHtml::errorSummary|
 |yii/helpers/BaseHtml::activeInput|
 |yii/helpers/BaseHtml::activeTextInput|
 |yii/helpers/BaseHtml::setActivePlaceholder|
 |yii/helpers/BaseHtml::activeHiddenInput|
 |yii/helpers/BaseHtml::activePasswordInput|
 |yii/helpers/BaseHtml::activeFileInput|
 |yii/helpers/BaseHtml::activeTextarea|
 |yii/helpers/BaseHtml::activeRadio|
 |yii/helpers/BaseHtml::activeCheckbox|
 |yii/helpers/BaseHtml::activeBooleanInput|
 |yii/helpers/BaseHtml::activeDropDownList|
 |yii/helpers/BaseHtml::activeListBox|
 |yii/helpers/BaseHtml::activeCheckboxList|
 |yii/helpers/BaseHtml::activeRadioList|
 |yii/helpers/BaseHtml::activeListInput|
 |yii/helpers/BaseHtml::renderSelectOptions|
 |yii/helpers/BaseHtml::renderTagAttributes|
 |yii/helpers/BaseHtml::addCssClass|
 |yii/helpers/BaseHtml::removeCssClass|
 |yii/helpers/BaseHtml::addCssStyle|
 |yii/helpers/BaseHtml::removeCssStyle|
 |yii/helpers/BaseHtml::cssStyleFromArray|
 |yii/helpers/BaseHtml::cssStyleToArray|
 |yii/helpers/BaseHtml::getAttributeName|
 |yii/helpers/BaseHtml::getAttributeValue|
 |yii/helpers/BaseHtml::getInputName|
 |yii/helpers/BaseHtml::getInputId|
 |yii/helpers/BaseHtml::escapeJsRegularExpression|


*yii/bootstrap/BaseHtml::checkboxList*			public
>
 checkboxList($name, $selection='null', $items='[]', $options='[]')
<
return (string) The generated checkbox list

 Generates a list of checkboxes.



 A checkbox list allows multiple selection, like 'listBox()'. As a result, the
 corresponding submitted value is an array.



    [$name] (string) The name attribute of each checkbox.
    [$selection] (string|array|null) The selected value(s). String for single
    or array for multiple selection(s).
    [$items] (array) The data item used to generate the checkboxes. The array
    keys are the checkbox values, while the array values are the corresponding
    labels.
    [$options] (array) Options (name => config) for the checkbox list
    container tag. The following options are specially handled:


      - tag: string|false, the tag name of the container element. False to
      render checkbox without container.   See also 'tag()'. 
      - unselect: string, the value that should be submitted when none of
      the checkboxes is selected.   By setting this option, a hidden input
    will be generated. 
      - disabled: boolean, whether the generated by unselect option hidden
      input should be disabled. Defaults to false.   This option is available
    since version 2.0.16. 
      - encode: boolean, whether to HTML-encode the checkbox labels.
      Defaults to true.   This option is ignored if 'item' option is set. 
      - separator: string, the HTML code that separates items. 
      - itemOptions: array, the options for generating the checkbox tag
      using 'checkbox()'. 
      - item: callable, a callback that can be used to customize the
      generation of the HTML code   corresponding to a single item in $items.
    The signature of this callback must be:

        function ($index, $label, $name, $checked, $value)

    where $index is the zero-based index of the checkbox in the whole list;
    $label   is the label for the checkbox; and $name, $value and $checked
    represent the name,   value and the checked status of the checkbox input,
    respectively.

    See 'renderTagAttributes()' for details on how attributes are being
    rendered.


*yii/bootstrap/BaseHtml::radioList*			public
>
 radioList($name, $selection='null', $items='[]', $options='[]')
<
return (string) The generated radio button list

 Generates a list of radio buttons.



 A radio button list is like a checkbox list, except that it only allows
 single selection.



    [$name] (string) The name attribute of each radio button.
    [$selection] (string|array|null) The selected value(s). String for single
    or array for multiple selection(s).
    [$items] (array) The data item used to generate the radio buttons. The
    array keys are the radio button values, while the array values are the
    corresponding labels.
    [$options] (array) Options (name => config) for the radio button list
    container tag. The following options are specially handled:


      - tag: string|false, the tag name of the container element. False to
      render radio buttons without container.   See also 'tag()'. 
      - unselect: string, the value that should be submitted when none of
      the radio buttons is selected.   By setting this option, a hidden input
    will be generated. 
      - disabled: boolean, whether the generated by unselect option hidden
      input should be disabled. Defaults to false.   This option is available
    since version 2.0.16. 
      - encode: boolean, whether to HTML-encode the checkbox labels.
      Defaults to true.   This option is ignored if 'item' option is set. 
      - separator: string, the HTML code that separates items. 
      - itemOptions: array, the options for generating the radio button
      tag using 'radio()'. 
      - item: callable, a callback that can be used to customize the
      generation of the HTML code   corresponding to a single item in $items.
    The signature of this callback must be:

        function ($index, $label, $name, $checked, $value)

    where $index is the zero-based index of the radio button in the whole
    list; $label   is the label for the radio button; and $name, $value and
    $checked represent the name,   value and the checked status of the radio
    button input, respectively.

    See 'renderTagAttributes()' for details on how attributes are being
    rendered.


*yii/bootstrap/BaseHtml::error*				public
>
 error($model, $attribute, $options='[]')
<
return (string) The generated label tag

 Generates a tag that contains the first validation error of the specified
 model attribute.



 Note that even if there is no validation error, this method will still return
 an empty error tag.



    [$model] (\yii\base\Model) The model object
    [$attribute] (string) The attribute name or expression. See
    'getAttributeName()' for the format about attribute expression.
    [$options] (array) The tag options in terms of name-value pairs. The
    values will be HTML-encoded using 'encode()'. If a value is null, the
    corresponding attribute will not be rendered.

    The following options are specially handled:


      - tag: this specifies the tag name. If not set, "div" will be used.  
    See also 'tag()'. 
      - encode: boolean, if set to false then the error message won't be
      encoded. 
      - errorSource (since 2.0.14): \Closure|callable, callback that will
      be called to obtain an error message.   The signature of the callback
    must be: 'function ($model, $attribute)' and return a string.   When not
    set, the '$model->getFirstError()' method will be called.

    See 'renderTagAttributes()' for details on how attributes are being
    rendered.


*yii/bootstrap/BaseHtml::icon*				public
>
 icon($name, $options='[]')
<
return (string) Icon HTML.

 Composes icon HTML for bootstrap Glyphicons.

    [$name] (string) Icon short name, for example: 'star'
    [$options] (array) The tag options in terms of name-value pairs. These
    will be rendered as the attributes of the resulting tag. There are also a
    special options:


      - tag: string, tag to be rendered, by default 'span' is used. 
      - prefix: string, prefix which should be used to compose tag class,
      by default 'glyphicon glyphicon-' is used.


*yii/bootstrap/BaseHtml::staticControl*			public
>
 staticControl($value, $options='[]')
<
return (string) Generated HTML

 Renders Bootstrap static form control.

 By default value will be HTML-encoded using 'encode()', you may control this
 behavior via 'encode' option.

    [$value] (string) Static control value.
    [$options] (array) The tag options in terms of name-value pairs. These
    will be rendered as the attributes of the resulting tag. There are also a
    special options:


      - encode: bool, whether value should be HTML-encoded or not.


*yii/bootstrap/BaseHtml::activeStaticControl*		public
>
 activeStaticControl($model, $attribute, $options='[]')
<
return (string) Generated HTML

 Generates a Bootstrap static form control for the given model attribute.

    [$model] (\yii\base\Model) The model object.
    [$attribute] (string) The attribute name or expression. See
    'getAttributeName()' for the format about attribute expression.
    [$options] (array) The tag options in terms of name-value pairs. See
    'staticControl()' for details.



 vim:tw=78:ts=8:ft=help:norl:
