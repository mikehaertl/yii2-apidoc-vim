
*yii/apidoc/models/TypeDoc*   >> |yii/apidoc/models/BaseDoc|
===========================

SUBCLASSES
------------------------------------------------------------------------------

|yii/apidoc/models/TraitDoc|
|yii/apidoc/models/InterfaceDoc|
|yii/apidoc/models/ClassDoc|


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/apidoc/models/BaseDoc::$phpDocContext|
 |yii/apidoc/models/BaseDoc::$name|
 |yii/apidoc/models/BaseDoc::$sourceFile|
 |yii/apidoc/models/BaseDoc::$startLine|
 |yii/apidoc/models/BaseDoc::$endLine|
 |yii/apidoc/models/BaseDoc::$shortDescription|
 |yii/apidoc/models/BaseDoc::$description|
 |yii/apidoc/models/BaseDoc::$since|
 |yii/apidoc/models/BaseDoc::$deprecatedSince|
 |yii/apidoc/models/BaseDoc::$deprecatedReason|
 |yii/apidoc/models/BaseDoc::$tags|


$authors				*yii/apidoc/models/TypeDoc::$authors*

 ()

$methods				*yii/apidoc/models/TypeDoc::$methods*

 (\yii\apidoc\models\MethodDoc[])

$properties				*yii/apidoc/models/TypeDoc::$properties*

 (\yii\apidoc\models\PropertyDoc[])

$namespace				*yii/apidoc/models/TypeDoc::$namespace*

 ()



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/apidoc/models/BaseDoc::hasTag|
 |yii/apidoc/models/BaseDoc::removeTag|
 |yii/apidoc/models/BaseDoc::getFirstTag|
 |yii/apidoc/models/BaseDoc::extractFirstSentence|
 |yii/apidoc/models/BaseDoc::mbUcFirst|


*yii/apidoc/models/TypeDoc::__construct*			public
>
 __construct($reflector='null', $context='null', $config='[]')
<
return (void)

    [$reflector] (\phpDocumentor\Reflection\InterfaceReflector) 
    [$context] (\yii\apidoc\models\Context) 
    [$config] (array) 


*yii/apidoc/models/TypeDoc::findSubject*			public
>
 findSubject($subjectName)
<
return (null|\yii\apidoc\models\MethodDoc|\yii\apidoc\models\PropertyDoc) 

 Finds subject (method or property) by name

 If there is a property with the same as a method, the method will be returned
 if the name is not stated explicitly by prefixing with '$'.

 Example for method 'attributes()' and property '$attributes' which both may
 exist:


   - '$subjectName = '$attributes'' finds a property or nothing. 
   - '$subjectName = 'attributes()'' finds a method or nothing. 
   - '$subjectName = 'attributes'' finds the method if it exists, if
   not it will find the property.

    [$subjectName] () 


*yii/apidoc/models/TypeDoc::getNativeMethods*		public
>
 getNativeMethods()
<
return (\yii\apidoc\models\MethodDoc[]) 



*yii/apidoc/models/TypeDoc::getPublicMethods*		public
>
 getPublicMethods()
<
return (\yii\apidoc\models\MethodDoc[]) 



*yii/apidoc/models/TypeDoc::getProtectedMethods*		public
>
 getProtectedMethods()
<
return (\yii\apidoc\models\MethodDoc[]) 



*yii/apidoc/models/TypeDoc::getNativeProperties*		public
>
 getNativeProperties()
<
return (\yii\apidoc\models\PropertyDoc[]) 



*yii/apidoc/models/TypeDoc::getPublicProperties*		public
>
 getPublicProperties()
<
return (\yii\apidoc\models\PropertyDoc[]) 



*yii/apidoc/models/TypeDoc::getProtectedProperties*	public
>
 getProtectedProperties()
<
return (\yii\apidoc\models\PropertyDoc[]) 




 vim:tw=78:ts=8:ft=help:norl:
