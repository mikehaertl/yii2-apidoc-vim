
*yii/validators/UrlValidator*   >> |yii/validators/Validator|
=============================

DESCRIPTION
------------------------------------------------------------------------------

 Note that this validator only checks if the URL scheme and host part are
 correct. It does not check the remaining parts of a URL.


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/UrlValidator::$builtInValidators*

 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/UrlValidator::$attributes*

 See |yii/validators/Validator::$attributes|

$message				*yii/validators/UrlValidator::$message*

 See |yii/validators/Validator::$message|

$on					*yii/validators/UrlValidator::$on*

 See |yii/validators/Validator::$on|

$except					*yii/validators/UrlValidator::$except*

 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/UrlValidator::$skipOnError*

 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/UrlValidator::$skipOnEmpty*

 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/UrlValidator::$enableClientValidation*

 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/UrlValidator::$isEmpty*

 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/UrlValidator::$when*

 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/UrlValidator::$whenClient*

 See |yii/validators/Validator::$whenClient|

$pattern				*yii/validators/UrlValidator::$pattern*

 (string) The regular expression used to validate the attribute value. The
 pattern may contain a '{schemes}' token that will be replaced by a regular
 expression which represents the 'validSchemes'.

$validSchemes				*yii/validators/UrlValidator::$validSchemes*

 (array) List of URI schemes which should be considered valid. By default,
 http and https are considered to be valid schemes.

$defaultScheme				*yii/validators/UrlValidator::$defaultScheme*

 (string) The default URI scheme. If the input doesn't contain the scheme
 part, the default scheme will be prepended to it (thus changing the input).
 Defaults to null, meaning a URL must contain the scheme part.

$enableIDN				*yii/validators/UrlValidator::$enableIDN*

 (bool) Whether validation process should take into account IDN
 (internationalized domain names). Defaults to false meaning that validation
 of URLs containing IDN will always fail. Note that in order to use IDN
 validation you have to install and enable 'intl' PHP extension, otherwise an
 exception would be thrown.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/validators/UrlValidator::className*			public

 See |yii/base/BaseObject::className|


*yii/validators/UrlValidator::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/validators/UrlValidator::init*			public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/validators/UrlValidator::__get*			public

 See |yii/base/Component::__get|


*yii/validators/UrlValidator::__set*			public

 See |yii/base/Component::__set|


*yii/validators/UrlValidator::__isset*			public

 See |yii/base/Component::__isset|


*yii/validators/UrlValidator::__unset*			public

 See |yii/base/Component::__unset|


*yii/validators/UrlValidator::__call*			public

 See |yii/base/Component::__call|


*yii/validators/UrlValidator::hasProperty*		public

 See |yii/base/Component::hasProperty|


*yii/validators/UrlValidator::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/validators/UrlValidator::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/validators/UrlValidator::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/validators/UrlValidator::__clone*			public

 See |yii/base/Component::__clone|


*yii/validators/UrlValidator::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/validators/UrlValidator::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/validators/UrlValidator::on*				public

 See |yii/base/Component::on|


*yii/validators/UrlValidator::off*			public

 See |yii/base/Component::off|


*yii/validators/UrlValidator::trigger*			public

 See |yii/base/Component::trigger|


*yii/validators/UrlValidator::getBehavior*		public

 See |yii/base/Component::getBehavior|


*yii/validators/UrlValidator::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/validators/UrlValidator::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/validators/UrlValidator::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/validators/UrlValidator::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/validators/UrlValidator::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/validators/UrlValidator::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/validators/UrlValidator::createValidator*		public

 See |yii/validators/Validator::createValidator|


*yii/validators/UrlValidator::validateAttributes*		public

 See |yii/validators/Validator::validateAttributes|


*yii/validators/UrlValidator::validateAttribute*		public
>
 validateAttribute($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 


*yii/validators/UrlValidator::validate*			public

 See |yii/validators/Validator::validate|


*yii/validators/UrlValidator::validateValue*		protected
>
 validateValue($value)
<
return (void)

 {@inheritdoc}

    [$value] () 


*yii/validators/UrlValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($model, $attribute, $view)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 
    [$view] () 


*yii/validators/UrlValidator::getClientOptions*		public
>
 getClientOptions($model, $attribute)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$attribute] () 


*yii/validators/UrlValidator::isActive*			public

 See |yii/validators/Validator::isActive|


*yii/validators/UrlValidator::addError*			public

 See |yii/validators/Validator::addError|


*yii/validators/UrlValidator::isEmpty*			public

 See |yii/validators/Validator::isEmpty|


*yii/validators/UrlValidator::formatMessage*		protected

 See |yii/validators/Validator::formatMessage|


*yii/validators/UrlValidator::getAttributeNames*		public

 See |yii/validators/Validator::getAttributeNames|



 vim:tw=78:ts=8:ft=help:norl:
