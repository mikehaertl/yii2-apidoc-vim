
*yii/test/Fixture*   >> |yii/base/Component|
==================

SUBCLASSES
------------------------------------------------------------------------------

|yii/test/InitDbFixture|
|yii/test/ActiveFixture|
|yii/test/BaseActiveFixture|
|yii/test/DbFixture|
|yii/test/ArrayFixture|
|yii/elasticsearch/ActiveFixture|
|yii/sphinx/ActiveFixture|

DESCRIPTION
------------------------------------------------------------------------------

 Each fixture instance represents a particular aspect of a test environment.
 For example, you may use 'UserFixture' to initialize the user database table
 with a set of known data. You may load the fixture when running every test
 method so that the user table always contains the fixed data and thus allows
 your test predictable and repeatable.

 A fixture may depend on other fixtures, specified via the 'depends' property.
 When a fixture is being loaded, its dependent fixtures will be automatically
 loaded BEFORE the fixture; and when the fixture is being unloaded, its
 dependent fixtures will be unloaded AFTER the fixture.

 You should normally override 'load()' to specify how to set up a fixture; and
 override 'unload()' for clearing up a fixture.


PROPERTY DETAILS
------------------------------------------------------------------------------

$depends				*yii/test/Fixture::$depends*

 (array) The fixtures that this fixture depends on. This must be a list of the
 dependent fixture class names.

$behaviors				*yii/test/Fixture::$behaviors*

 See |yii/base/Component::$behaviors|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/test/Fixture::className*				public

 See |yii/base/Object::className|


*yii/test/Fixture::__construct*				public

 See |yii/base/Object::__construct|


*yii/test/Fixture::init*					public

 See |yii/base/Object::init|


*yii/test/Fixture::__get*					public

 See |yii/base/Component::__get|


*yii/test/Fixture::__set*					public

 See |yii/base/Component::__set|


*yii/test/Fixture::__isset*				public

 See |yii/base/Component::__isset|


*yii/test/Fixture::__unset*				public

 See |yii/base/Component::__unset|


*yii/test/Fixture::__call*				public

 See |yii/base/Component::__call|


*yii/test/Fixture::hasProperty*				public

 See |yii/base/Component::hasProperty|


*yii/test/Fixture::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/test/Fixture::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/test/Fixture::hasMethod*				public

 See |yii/base/Component::hasMethod|


*yii/test/Fixture::__clone*				public

 See |yii/base/Component::__clone|


*yii/test/Fixture::behaviors*				public

 See |yii/base/Component::behaviors|


*yii/test/Fixture::hasEventHandlers*			public

 See |yii/base/Component::hasEventHandlers|


*yii/test/Fixture::on*					public

 See |yii/base/Component::on|


*yii/test/Fixture::off*					public

 See |yii/base/Component::off|


*yii/test/Fixture::trigger*				public

 See |yii/base/Component::trigger|


*yii/test/Fixture::getBehavior*				public

 See |yii/base/Component::getBehavior|


*yii/test/Fixture::getBehaviors*				public

 See |yii/base/Component::getBehaviors|


*yii/test/Fixture::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/test/Fixture::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/test/Fixture::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/test/Fixture::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/test/Fixture::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/test/Fixture::load*					public
>
 load()
<
return (void)

 This method is called before performing every test method. You should
 override this method with concrete implementation about how to set up the
 fixture.


*yii/test/Fixture::beforeLoad*				public
>
 beforeLoad()
<
return (void)



*yii/test/Fixture::afterLoad*				public
>
 afterLoad()
<
return (void)



*yii/test/Fixture::unload*				public
>
 unload()
<
return (void)

 This method is called after every test method finishes. You may override this
 method to perform necessary cleanup work for the fixture.


*yii/test/Fixture::beforeUnload*				public
>
 beforeUnload()
<
return (void)



*yii/test/Fixture::afterUnload*				public
>
 afterUnload()
<
return (void)




 vim:tw=78:ts=8:ft=help:norl:
