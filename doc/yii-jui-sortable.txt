
*yii/jui/Sortable*   >> |yii/jui/Widget|
==================

DESCRIPTION
------------------------------------------------------------------------------

 For example:

   echo Sortable::widget([
       'items' => [
           'Item 1',
           ['content' => 'Item2'],
           [
               'content' => 'Item3',
               'options' => ['tag' => 'li'],
           ],
       ],
       'options' => ['tag' => 'ul'],
       'itemOptions' => ['tag' => 'li'],
       'clientOptions' => ['cursor' => 'move'],
   ]);




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Widget::$counter|
 |yii/base/Widget::$autoIdPrefix|
 |yii/base/Widget::$stack|
 |yii/jui/Widget::$clientOptions|
 |yii/jui/Widget::$clientEvents|
 |yii/base/Component::$behaviors|
 |yii/base/Widget::$id|
 |yii/base/Widget::$view|
 |yii/base/Widget::$viewPath|


$options				*yii/jui/Sortable::$options*

 (array) The HTML attributes for the widget container tag. The following
 special options are recognized:


   - tag: string, defaults to "ul", the tag name of the container tag
   of this widget.

$clientEventMap				*yii/jui/Sortable::$clientEventMap*

 (array) 

 Event names mapped to what should be specified in '.on()'. If empty, it is
 assumed that event passed to clientEvents is prefixed with widget name.



$items					*yii/jui/Sortable::$items*

 (array) List of sortable items. Each item can be a string representing the
 item content or an array of the following structure:

   [
       'content' => 'item content',
       // the HTML attributes of the item container tag. This will overwrite
 "itemOptions".
       'options' => [],
   ]



$itemOptions				*yii/jui/Sortable::$itemOptions*

 (array) List of HTML attributes for the item container tags. This will be
 overwritten by the "options" set in individual 'items'. The following special
 options are recognized:


   - tag: string, defaults to "li", the tag name of the item container
   tags.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Widget::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Widget::begin|
 |yii/base/Widget::end|
 |yii/base/Widget::widget|
 |yii/base/Widget::getId|
 |yii/base/Widget::setId|
 |yii/base/Widget::getView|
 |yii/base/Widget::setView|
 |yii/base/Widget::render|
 |yii/base/Widget::renderFile|
 |yii/base/Widget::getViewPath|
 |yii/base/Widget::beforeRun|
 |yii/base/Widget::afterRun|
 |yii/jui/Widget::registerClientOptions|
 |yii/jui/Widget::registerClientEvents|
 |yii/jui/Widget::registerWidget|


*yii/jui/Sortable::run*					public
>
 run()
<
return (void)

 Renders the widget.


*yii/jui/Sortable::renderItems*				public
>
 renderItems()
<
return (string) The rendering result.

 Renders sortable items as specified on 'items'.



 vim:tw=78:ts=8:ft=help:norl:
