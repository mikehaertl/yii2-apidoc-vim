
*yii/jui/Sortable*   >> |yii/jui/Widget|
==================

DESCRIPTION
------------------------------------------------------------------------------

 For example:

   echo Sortable::widget([
       'items' => [
           'Item 1',
           ['content' => 'Item2'],
           [
               'content' => 'Item3',
               'options' => ['tag' => 'li'],
           ],
       ],
       'options' => ['tag' => 'ul'],
       'itemOptions' => ['tag' => 'li'],
       'clientOptions' => ['cursor' => 'move'],
   ]);




PROPERTY DETAILS
------------------------------------------------------------------------------

$counter				*yii/jui/Sortable::$counter*

 See |yii/base/Widget::$counter|

$autoIdPrefix				*yii/jui/Sortable::$autoIdPrefix*

 See |yii/base/Widget::$autoIdPrefix|

$stack					*yii/jui/Sortable::$stack*

 See |yii/base/Widget::$stack|

$options				*yii/jui/Sortable::$options*

 (array) The HTML attributes for the widget container tag. The following
 special options are recognized:


   - tag: string, defaults to "ul", the tag name of the container tag
   of this widget.

$clientOptions				*yii/jui/Sortable::$clientOptions*

 See |yii/jui/Widget::$clientOptions|

$clientEvents				*yii/jui/Sortable::$clientEvents*

 See |yii/jui/Widget::$clientEvents|

$clientEventMap				*yii/jui/Sortable::$clientEventMap*

 (array) Event names mapped to what should be specified in '.on()'. If empty,
 it is assumed that event passed to clientEvents is prefixed with widget name.

 Event names mapped to what should be specified in '.on()'. If empty, it is
 assumed that event passed to clientEvents is prefixed with widget name.



$items					*yii/jui/Sortable::$items*

 (array) List of sortable items. Each item can be a string representing the
 item content or an array of the following structure:

   [
       'content' => 'item content',
       // the HTML attributes of the item container tag. This will overwrite
 "itemOptions".
       'options' => [],
   ]



$itemOptions				*yii/jui/Sortable::$itemOptions*

 (array) List of HTML attributes for the item container tags. This will be
 overwritten by the "options" set in individual 'items'. The following special
 options are recognized:


   - tag: string, defaults to "li", the tag name of the item container
   tags.

$behaviors				*yii/jui/Sortable::$behaviors*

 See |yii/base/Component::$behaviors|

$id					*yii/jui/Sortable::$id*

 See |yii/base/Widget::$id|

$view					*yii/jui/Sortable::$view*

 See |yii/base/Widget::$view|

$viewPath				*yii/jui/Sortable::$viewPath*

 See |yii/base/Widget::$viewPath|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/jui/Sortable::className*				public

 See |yii/base/Object::className|


*yii/jui/Sortable::__construct*				public

 See |yii/base/Object::__construct|


*yii/jui/Sortable::init*					public

 See |yii/base/Object::init|


*yii/jui/Sortable::__get*					public

 See |yii/base/Component::__get|


*yii/jui/Sortable::__set*					public

 See |yii/base/Component::__set|


*yii/jui/Sortable::__isset*				public

 See |yii/base/Component::__isset|


*yii/jui/Sortable::__unset*				public

 See |yii/base/Component::__unset|


*yii/jui/Sortable::__call*				public

 See |yii/base/Component::__call|


*yii/jui/Sortable::hasProperty*				public

 See |yii/base/Component::hasProperty|


*yii/jui/Sortable::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/jui/Sortable::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/jui/Sortable::hasMethod*				public

 See |yii/base/Component::hasMethod|


*yii/jui/Sortable::__clone*				public

 See |yii/base/Component::__clone|


*yii/jui/Sortable::behaviors*				public

 See |yii/base/Component::behaviors|


*yii/jui/Sortable::hasEventHandlers*			public

 See |yii/base/Component::hasEventHandlers|


*yii/jui/Sortable::on*					public

 See |yii/base/Component::on|


*yii/jui/Sortable::off*					public

 See |yii/base/Component::off|


*yii/jui/Sortable::trigger*				public

 See |yii/base/Component::trigger|


*yii/jui/Sortable::getBehavior*				public

 See |yii/base/Component::getBehavior|


*yii/jui/Sortable::getBehaviors*				public

 See |yii/base/Component::getBehaviors|


*yii/jui/Sortable::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/jui/Sortable::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/jui/Sortable::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/jui/Sortable::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/jui/Sortable::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/jui/Sortable::begin*					public

 See |yii/base/Widget::begin|


*yii/jui/Sortable::end*					public

 See |yii/base/Widget::end|


*yii/jui/Sortable::widget*				public

 See |yii/base/Widget::widget|


*yii/jui/Sortable::getId*					public

 See |yii/base/Widget::getId|


*yii/jui/Sortable::setId*					public

 See |yii/base/Widget::setId|


*yii/jui/Sortable::getView*				public

 See |yii/base/Widget::getView|


*yii/jui/Sortable::setView*				public

 See |yii/base/Widget::setView|


*yii/jui/Sortable::run*					public
>
 run()
<
return (void)



*yii/jui/Sortable::render*				public

 See |yii/base/Widget::render|


*yii/jui/Sortable::renderFile*				public

 See |yii/base/Widget::renderFile|


*yii/jui/Sortable::getViewPath*				public

 See |yii/base/Widget::getViewPath|


*yii/jui/Sortable::registerClientOptions*			protected

 See |yii/jui/Widget::registerClientOptions|


*yii/jui/Sortable::registerClientEvents*			protected

 See |yii/jui/Widget::registerClientEvents|


*yii/jui/Sortable::registerWidget*			protected

 See |yii/jui/Widget::registerWidget|


*yii/jui/Sortable::renderItems*				public
>
 renderItems()
<
return (string) The rendering result.




 vim:tw=78:ts=8:ft=help:norl:
