
*yii/queue/stomp/Queue*   >> |yii/queue/cli/Queue|
=======================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/queue/Queue::$strictJobType|
 |yii/queue/Queue::$serializer|
 |yii/queue/Queue::$ttr|
 |yii/queue/Queue::$attempts|
 |yii/queue/cli/Queue::$loopConfig|
 |yii/queue/cli/Queue::$commandOptions|
 |yii/queue/cli/Queue::$messageHandler|
 |yii/base/Component::$behaviors|
 |yii/queue/Queue::$workerPid|


$commandClass				*yii/queue/stomp/Queue::$commandClass*

 (string) Command class name

$host					*yii/queue/stomp/Queue::$host*

 (string|null)

$port					*yii/queue/stomp/Queue::$port*

 (string|null)

$user					*yii/queue/stomp/Queue::$user*

 (string|null)

$password				*yii/queue/stomp/Queue::$password*

 (string|null)

$vhost					*yii/queue/stomp/Queue::$vhost*

 (string|null)

$bufferSize				*yii/queue/stomp/Queue::$bufferSize*

 (int)

$connectionTimeout			*yii/queue/stomp/Queue::$connectionTimeout*

 (int)

$sync					*yii/queue/stomp/Queue::$sync*

 (bool)

$lazy					*yii/queue/stomp/Queue::$lazy*

 (bool|null)

$sslOn					*yii/queue/stomp/Queue::$sslOn*

 (bool|null)

$queueName				*yii/queue/stomp/Queue::$queueName*

 (string)

$readTimeOut				*yii/queue/stomp/Queue::$readTimeOut*

 (int)

$context				*yii/queue/stomp/Queue::$context*

 (\Enqueue\Stomp\StompContext)



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/queue/Queue::ttr|
 |yii/queue/Queue::delay|
 |yii/queue/Queue::priority|
 |yii/queue/Queue::push|
 |yii/queue/Queue::getWorkerPid|
 |yii/queue/Queue::handleMessage|
 |yii/queue/Queue::unserializeMessage|
 |yii/queue/Queue::handleError|
 |yii/queue/Queue::isWaiting|
 |yii/queue/Queue::isReserved|
 |yii/queue/Queue::isDone|
 |yii/queue/cli/Queue::getCommandId|
 |yii/queue/cli/Queue::bootstrap|
 |yii/queue/cli/Queue::runWorker|
 |yii/queue/cli/Queue::execute|


*yii/queue/stomp/Queue::init*				public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/queue/stomp/Queue::pushMessage*			protected
>
 pushMessage($message, $ttr, $delay, $priority)
<
return (string) Id of a job message







    [$message] (string) 
    [$ttr] (int) Time to reserve in seconds
    [$delay] (int) 
    [$priority] (mixed) 


*yii/queue/stomp/Queue::status*				public
>
 status($id)
<
return (int) Status code







    [$id] (string) Of a job message


*yii/queue/stomp/Queue::open*				protected
>
 open()
<
return (void)

 Opens connection.


*yii/queue/stomp/Queue::run*				public
>
 run($repeat, $timeout=0)
<
return (int|null) 

 Listens queue and runs each job.

    [$repeat] () 
    [$timeout] (int) 


*yii/queue/stomp/Queue::setMessageId*			protected
>
 setMessageId($message)
<
return (\Enqueue\Stomp\StompMessage) 

    [$message] (\Enqueue\Stomp\StompMessage) 


*yii/queue/stomp/Queue::close*				protected
>
 close()
<
return (void)

 Closes connection.


*yii/queue/stomp/Queue::redeliver*			protected
>
 redeliver($message)
<
return (void)

    [$message] (\Enqueue\Stomp\StompMessage) 



 vim:tw=78:ts=8:ft=help:norl:
