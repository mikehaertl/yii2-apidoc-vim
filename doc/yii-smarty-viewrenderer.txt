
*yii/smarty/ViewRenderer*   >> |yii/base/ViewRenderer|
=========================


PROPERTY DETAILS
------------------------------------------------------------------------------

$cachePath				*yii/smarty/ViewRenderer::$cachePath*
 (string) The directory or path alias pointing to where Smarty cache will be
 stored.

$compilePath				*yii/smarty/ViewRenderer::$compilePath*
 (string) The directory or path alias pointing to where Smarty compiled
 templates will be stored.

$pluginDirs				*yii/smarty/ViewRenderer::$pluginDirs*
 (array) Add additional directories to Smarty's search path for plugins.

$imports				*yii/smarty/ViewRenderer::$imports*
 (array) Class imports similar to the use tag

$widgets				*yii/smarty/ViewRenderer::$widgets*
 (array) Widget declarations

$options				*yii/smarty/ViewRenderer::$options*
 (array) Additional Smarty options

$extensionClass				*yii/smarty/ViewRenderer::$extensionClass*
 (string) Extension class name

$smarty					*yii/smarty/ViewRenderer::$smarty*
 (\Smarty) The Smarty object used for rendering

$behaviors				*yii/smarty/ViewRenderer::$behaviors*
 See |yii/base/Component::$behaviors|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/smarty/ViewRenderer::className*			public
 See |yii/base/Object::className|


*yii/smarty/ViewRenderer::__construct*			public
 See |yii/base/Object::__construct|


*yii/smarty/ViewRenderer::init*				public
>
 init()
<
(void)



*yii/smarty/ViewRenderer::__get*				public
 See |yii/base/Component::__get|


*yii/smarty/ViewRenderer::__set*				public
 See |yii/base/Component::__set|


*yii/smarty/ViewRenderer::__isset*			public
 See |yii/base/Component::__isset|


*yii/smarty/ViewRenderer::__unset*			public
 See |yii/base/Component::__unset|


*yii/smarty/ViewRenderer::__call*				public
>
 __call($method, $args)
<
(string) 

 Using a magic function call would not be necessary if Smarty would support
 closures. Smarty closure support is announced for 3.2, until its release
 magic function calls are used to pass the tag name to the callback.
    [$method] (string) 
    [$args] (array) 


*yii/smarty/ViewRenderer::hasProperty*			public
 See |yii/base/Component::hasProperty|


*yii/smarty/ViewRenderer::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/smarty/ViewRenderer::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/smarty/ViewRenderer::hasMethod*			public
 See |yii/base/Component::hasMethod|


*yii/smarty/ViewRenderer::__clone*			public
 See |yii/base/Component::__clone|


*yii/smarty/ViewRenderer::behaviors*			public
 See |yii/base/Component::behaviors|


*yii/smarty/ViewRenderer::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/smarty/ViewRenderer::on*				public
 See |yii/base/Component::on|


*yii/smarty/ViewRenderer::off*				public
 See |yii/base/Component::off|


*yii/smarty/ViewRenderer::trigger*			public
 See |yii/base/Component::trigger|


*yii/smarty/ViewRenderer::getBehavior*			public
 See |yii/base/Component::getBehavior|


*yii/smarty/ViewRenderer::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/smarty/ViewRenderer::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/smarty/ViewRenderer::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/smarty/ViewRenderer::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/smarty/ViewRenderer::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/smarty/ViewRenderer::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/smarty/ViewRenderer::render*				public
>
 render($view, $file, $params)
<
(string) The rendering result

 This method is invoked by 'View' whenever it tries to render a view. Child
 classes must implement this method to render the given view file.
    [$view] (\yii\web\View) The view object used for rendering the file.
    [$file] (string) The view file.
    [$params] (array) The parameters to be passed to the view file.


*yii/smarty/ViewRenderer::resolveTemplateDir*		protected
>
 resolveTemplateDir($dir)
<
(string) The resolved directory name

    [$dir] (string) Directory name to be resolved


*yii/smarty/ViewRenderer::aliasHandler*			public
>
 aliasHandler($type, $name, $content, $modified, $smarty)
<
(bool|string) Path to file or false if it's not found

    [$type] (string) 
    [$name] (string) 
    [$content] (string) 
    [$modified] (string) 
    [$smarty] (\Smarty) 



 vim:tw=78:ts=8:ft=help:norl:
