
*yii\validators\ImageValidator*   >> yii\validators\FileValidator
===============================




PROPERTY DETAILS
------------------------------------------------------------------------------

<$builtInValidators>			*yii.validators.ImageValidator::$builtInValidators*
 See |yii.validators.Validator::$builtInValidators|

<$attributes>				*yii.validators.ImageValidator::$attributes*
 See |yii.validators.Validator::$attributes|

<$message>				*yii.validators.ImageValidator::$message*
 See |yii.validators.FileValidator::$message|

<$on>					*yii.validators.ImageValidator::$on*
 See |yii.validators.Validator::$on|

<$except>				*yii.validators.ImageValidator::$except*
 See |yii.validators.Validator::$except|

<$skipOnError>				*yii.validators.ImageValidator::$skipOnError*
 See |yii.validators.Validator::$skipOnError|

<$skipOnEmpty>				*yii.validators.ImageValidator::$skipOnEmpty*
 See |yii.validators.Validator::$skipOnEmpty|

<$enableClientValidation>		*yii.validators.ImageValidator::$enableClientValidation*
 See |yii.validators.Validator::$enableClientValidation|

<$isEmpty>				*yii.validators.ImageValidator::$isEmpty*
 See |yii.validators.Validator::$isEmpty|

<$when> 				*yii.validators.ImageValidator::$when*
 See |yii.validators.Validator::$when|

<$whenClient>				*yii.validators.ImageValidator::$whenClient*
 See |yii.validators.Validator::$whenClient|

<$types>				*yii.validators.ImageValidator::$types*
 See |yii.validators.FileValidator::$types|

<$minSize>				*yii.validators.ImageValidator::$minSize*
 See |yii.validators.FileValidator::$minSize|

<$maxSize>				*yii.validators.ImageValidator::$maxSize*
 See |yii.validators.FileValidator::$maxSize|

<$maxFiles>				*yii.validators.ImageValidator::$maxFiles*
 See |yii.validators.FileValidator::$maxFiles|

<$uploadRequired>			*yii.validators.ImageValidator::$uploadRequired*
 See |yii.validators.FileValidator::$uploadRequired|

<$tooBig>				*yii.validators.ImageValidator::$tooBig*
 See |yii.validators.FileValidator::$tooBig|

<$tooSmall>				*yii.validators.ImageValidator::$tooSmall*
 See |yii.validators.FileValidator::$tooSmall|

<$wrongType>				*yii.validators.ImageValidator::$wrongType*
 See |yii.validators.FileValidator::$wrongType|

<$tooMany>				*yii.validators.ImageValidator::$tooMany*
 See |yii.validators.FileValidator::$tooMany|

<$notImage>				*yii.validators.ImageValidator::$notImage*
 (string) The error message used when the uploaded file is not an image. You
 may use the following tokens in the message:

 - {attribute}: the attribute name - {file}: the uploaded file name

<$minWidth>				*yii.validators.ImageValidator::$minWidth*
 (integer) The minimum width in pixels. Defaults to null, meaning no limit.

<$maxWidth>				*yii.validators.ImageValidator::$maxWidth*
 (integer) The maximum width in pixels. Defaults to null, meaning no limit.

<$minHeight>				*yii.validators.ImageValidator::$minHeight*
 (integer) The minimum height in pixels. Defaults to null, meaning no limit.

<$maxHeight>				*yii.validators.ImageValidator::$maxHeight*
 (integer) The maximum width in pixels. Defaults to null, meaning no limit.

<$mimeTypes>				*yii.validators.ImageValidator::$mimeTypes*
 (array|string) A list of file mime types that are allowed to be uploaded.
 This can be either an array or a string consisting of file mime types
 separated by space or comma (e.g. "image/jpeg, image/png"). Mime type names
 are case-insensitive. Defaults to null, meaning all mime types are allowed.

<$underWidth>				*yii.validators.ImageValidator::$underWidth*
 (string) The error message used when the image is under [[minWidth]]. You may
 use the following tokens in the message:

 - {attribute}: the attribute name - {file}: the uploaded file name - {limit}:
 the value of [[minWidth]]

<$overWidth>				*yii.validators.ImageValidator::$overWidth*
 (string) The error message used when the image is over [[maxWidth]]. You may
 use the following tokens in the message:

 - {attribute}: the attribute name - {file}: the uploaded file name - {limit}:
 the value of [[maxWidth]]

<$underHeight>				*yii.validators.ImageValidator::$underHeight*
 (string) The error message used when the image is under [[minHeight]]. You
 may use the following tokens in the message:

 - {attribute}: the attribute name - {file}: the uploaded file name - {limit}:
 the value of [[minHeight]]

<$overHeight>				*yii.validators.ImageValidator::$overHeight*
 (string) The error message used when the image is over [[maxHeight]]. You may
 use the following tokens in the message:

 - {attribute}: the attribute name - {file}: the uploaded file name - {limit}:
 the value of [[maxHeight]]

<$wrongMimeType>			*yii.validators.ImageValidator::$wrongMimeType*
 (string) The error message used when the file has an mime type that is not
 listed in [[mimeTypes]]. You may use the following tokens in the message:

 - {attribute}: the attribute name - {file}: the uploaded file name -
 {mimeTypes}: the value of [[mimeTypes]]

<$behaviors>				*yii.validators.ImageValidator::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

<$sizeLimit>				*yii.validators.ImageValidator::$sizeLimit*
 (integer) The size limit for uploaded files.



METHOD DETAILS
------------------------------------------------------------------------------

*yii.validators.ImageValidator::className*			 public
 See |yii.base.Object::className|


*yii.validators.ImageValidator::__construct*			 public
 See |yii.base.Object::__construct|


*yii.validators.ImageValidator::init*				 public
>
 init()
<
(void)




*yii.validators.ImageValidator::__get*				 public
 See |yii.base.Component::__get|


*yii.validators.ImageValidator::__set*				 public
 See |yii.base.Component::__set|


*yii.validators.ImageValidator::__isset*			 public
 See |yii.base.Component::__isset|


*yii.validators.ImageValidator::__unset*			 public
 See |yii.base.Component::__unset|


*yii.validators.ImageValidator::__call* 			 public
 See |yii.base.Component::__call|


*yii.validators.ImageValidator::hasProperty*			 public
 See |yii.base.Component::hasProperty|


*yii.validators.ImageValidator::canGetProperty* 		 public
 See |yii.base.Component::canGetProperty|


*yii.validators.ImageValidator::canSetProperty* 		 public
 See |yii.base.Component::canSetProperty|


*yii.validators.ImageValidator::hasMethod*			 public
 See |yii.base.Component::hasMethod|


*yii.validators.ImageValidator::__clone*			 public
 See |yii.base.Component::__clone|


*yii.validators.ImageValidator::behaviors*			 public
 See |yii.base.Component::behaviors|


*yii.validators.ImageValidator::hasEventHandlers*		 public
 See |yii.base.Component::hasEventHandlers|


*yii.validators.ImageValidator::on*				 public
 See |yii.base.Component::on|


*yii.validators.ImageValidator::off*				 public
 See |yii.base.Component::off|


*yii.validators.ImageValidator::trigger*			 public
 See |yii.base.Component::trigger|


*yii.validators.ImageValidator::getBehavior*			 public
 See |yii.base.Component::getBehavior|


*yii.validators.ImageValidator::getBehaviors*			 public
 See |yii.base.Component::getBehaviors|


*yii.validators.ImageValidator::attachBehavior* 		 public
 See |yii.base.Component::attachBehavior|


*yii.validators.ImageValidator::attachBehaviors*		 public
 See |yii.base.Component::attachBehaviors|


*yii.validators.ImageValidator::detachBehavior* 		 public
 See |yii.base.Component::detachBehavior|


*yii.validators.ImageValidator::detachBehaviors*		 public
 See |yii.base.Component::detachBehaviors|


*yii.validators.ImageValidator::ensureBehaviors*		 public
 See |yii.base.Component::ensureBehaviors|


*yii.validators.ImageValidator::createValidator*		 public
 See |yii.validators.Validator::createValidator|


*yii.validators.ImageValidator::validateAttributes*		 public
 See |yii.validators.Validator::validateAttributes|


*yii.validators.ImageValidator::validateAttribute*		 public
 See |yii.validators.FileValidator::validateAttribute|


*yii.validators.ImageValidator::validate*			 public
 See |yii.validators.Validator::validate|


*yii.validators.ImageValidator::validateValue*			 protected
>
 validateValue($file)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.


    [$file] () 


*yii.validators.ImageValidator::clientValidateAttribute*	 public
 See |yii.validators.Validator::clientValidateAttribute|


*yii.validators.ImageValidator::isActive*			 public
 See |yii.validators.Validator::isActive|


*yii.validators.ImageValidator::addError*			 public
 See |yii.validators.Validator::addError|


*yii.validators.ImageValidator::isEmpty*			 public
 See |yii.validators.FileValidator::isEmpty|


*yii.validators.ImageValidator::getSizeLimit*			 public
 See |yii.validators.FileValidator::getSizeLimit|


*yii.validators.ImageValidator::validateImage*			 protected
>
 validateImage($image)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.


    [$image] (\yii\web\UploadedFile) Uploaded file passed to check against a
    set of rules



 vim:tw=78:ts=8:ft=help:norl:
