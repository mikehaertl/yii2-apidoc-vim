
*yii/validators/ImageValidator*   >> |yii/validators/FileValidator|
===============================


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/ImageValidator::$builtInValidators*
 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/ImageValidator::$attributes*
 See |yii/validators/Validator::$attributes|

$message				*yii/validators/ImageValidator::$message*
 See |yii/validators/FileValidator::$message|

$on					*yii/validators/ImageValidator::$on*
 See |yii/validators/Validator::$on|

$except					*yii/validators/ImageValidator::$except*
 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/ImageValidator::$skipOnError*
 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/ImageValidator::$skipOnEmpty*
 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/ImageValidator::$enableClientValidation*
 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/ImageValidator::$isEmpty*
 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/ImageValidator::$when*
 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/ImageValidator::$whenClient*
 See |yii/validators/Validator::$whenClient|

$extensions				*yii/validators/ImageValidator::$extensions*
 See |yii/validators/FileValidator::$extensions|

$checkExtensionByMimeType		*yii/validators/ImageValidator::$checkExtensionByMimeType*
 See |yii/validators/FileValidator::$checkExtensionByMimeType|

$mimeTypes				*yii/validators/ImageValidator::$mimeTypes*
 See |yii/validators/FileValidator::$mimeTypes|

$minSize				*yii/validators/ImageValidator::$minSize*
 See |yii/validators/FileValidator::$minSize|

$maxSize				*yii/validators/ImageValidator::$maxSize*
 See |yii/validators/FileValidator::$maxSize|

$maxFiles				*yii/validators/ImageValidator::$maxFiles*
 See |yii/validators/FileValidator::$maxFiles|

$uploadRequired				*yii/validators/ImageValidator::$uploadRequired*
 See |yii/validators/FileValidator::$uploadRequired|

$tooBig					*yii/validators/ImageValidator::$tooBig*
 See |yii/validators/FileValidator::$tooBig|

$tooSmall				*yii/validators/ImageValidator::$tooSmall*
 See |yii/validators/FileValidator::$tooSmall|

$tooMany				*yii/validators/ImageValidator::$tooMany*
 See |yii/validators/FileValidator::$tooMany|

$wrongExtension				*yii/validators/ImageValidator::$wrongExtension*
 See |yii/validators/FileValidator::$wrongExtension|

$wrongMimeType				*yii/validators/ImageValidator::$wrongMimeType*
 See |yii/validators/FileValidator::$wrongMimeType|

$notImage				*yii/validators/ImageValidator::$notImage*
 (string) The error message used when the uploaded file is not an image. You
 may use the following tokens in the message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name

$minWidth				*yii/validators/ImageValidator::$minWidth*
 (integer) The minimum width in pixels. Defaults to null, meaning no limit.

$maxWidth				*yii/validators/ImageValidator::$maxWidth*
 (integer) The maximum width in pixels. Defaults to null, meaning no limit.

$minHeight				*yii/validators/ImageValidator::$minHeight*
 (integer) The minimum height in pixels. Defaults to null, meaning no limit.

$maxHeight				*yii/validators/ImageValidator::$maxHeight*
 (integer) The maximum width in pixels. Defaults to null, meaning no limit.

$underWidth				*yii/validators/ImageValidator::$underWidth*
 (string) The error message used when the image is under 'minWidth'. You may
 use the following tokens in the message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name 
   - {limit}: the value of 'minWidth'

$overWidth				*yii/validators/ImageValidator::$overWidth*
 (string) The error message used when the image is over 'maxWidth'. You may
 use the following tokens in the message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name 
   - {limit}: the value of 'maxWidth'

$underHeight				*yii/validators/ImageValidator::$underHeight*
 (string) The error message used when the image is under 'minHeight'. You may
 use the following tokens in the message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name 
   - {limit}: the value of 'minHeight'

$overHeight				*yii/validators/ImageValidator::$overHeight*
 (string) The error message used when the image is over 'maxHeight'. You may
 use the following tokens in the message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name 
   - {limit}: the value of 'maxHeight'

$behaviors				*yii/validators/ImageValidator::$behaviors*
 See |yii/base/Component::$behaviors|

$sizeLimit				*yii/validators/ImageValidator::$sizeLimit*
 See |yii/validators/FileValidator::$sizeLimit|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/validators/ImageValidator::className*		public
 See |yii/base/Object::className|


*yii/validators/ImageValidator::__construct*		public
 See |yii/base/Object::__construct|


*yii/validators/ImageValidator::init*			public
>
 init()
<
(void)

 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.


*yii/validators/ImageValidator::__get*			public
 See |yii/base/Component::__get|


*yii/validators/ImageValidator::__set*			public
 See |yii/base/Component::__set|


*yii/validators/ImageValidator::__isset*			public
 See |yii/base/Component::__isset|


*yii/validators/ImageValidator::__unset*			public
 See |yii/base/Component::__unset|


*yii/validators/ImageValidator::__call*			public
 See |yii/base/Component::__call|


*yii/validators/ImageValidator::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/validators/ImageValidator::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/validators/ImageValidator::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/validators/ImageValidator::hasMethod*		public
 See |yii/base/Component::hasMethod|


*yii/validators/ImageValidator::__clone*			public
 See |yii/base/Component::__clone|


*yii/validators/ImageValidator::behaviors*		public
 See |yii/base/Component::behaviors|


*yii/validators/ImageValidator::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/validators/ImageValidator::on*			public
 See |yii/base/Component::on|


*yii/validators/ImageValidator::off*			public
 See |yii/base/Component::off|


*yii/validators/ImageValidator::trigger*			public
 See |yii/base/Component::trigger|


*yii/validators/ImageValidator::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/validators/ImageValidator::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/validators/ImageValidator::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/validators/ImageValidator::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/validators/ImageValidator::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/validators/ImageValidator::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/validators/ImageValidator::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/validators/ImageValidator::createValidator*		public
 See |yii/validators/Validator::createValidator|


*yii/validators/ImageValidator::validateAttributes*	public
 See |yii/validators/Validator::validateAttributes|


*yii/validators/ImageValidator::validateAttribute*	public
 See |yii/validators/FileValidator::validateAttribute|


*yii/validators/ImageValidator::validate*			public
 See |yii/validators/Validator::validate|


*yii/validators/ImageValidator::validateValue*		protected
>
 validateValue($file)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.

 A validator class can implement this method to support data validation out of
 the context of a data model.
    [$file] () 


*yii/validators/ImageValidator::clientValidateAttribute*	public
>
 clientValidateAttribute($model, $attribute, $view)
<
(string) The client-side validation script. Null if the validator does not
support client-side validation.

 You may override this method to return the JavaScript validation code if the
 validator can support client-side validation.

 The following JavaScript variables are predefined and can be used in the
 validation code:


   - 'attribute': an object describing the the attribute being
   validated. 
   - 'value': the value being validated. 
   - 'messages': an array used to hold the validation error messages
   for the attribute. 
   - 'deferred': an array used to hold deferred objects for
   asynchronous validation 
   - '$form': a jQuery object containing the form element

 The 'attribute' object contains the following properties: 
   - 'id': a unique ID identifying the attribute (e.g.
   "loginform-username") in the form 
   - 'name': attribute name or expression (e.g. "[0]content" for
   tabular input) 
   - 'container': the jQuery selector of the container of the input
   field 
   - 'input': the jQuery selector of the input field under the context
   of the form 
   - 'error': the jQuery selector of the error tag under the context of
   the container 
   - 'status': status of the input field, 0: empty, not entered before,
   1: validated, 2: pending validation, 3: validating
    [$model] (\yii\base\Model) The data model being validated
    [$attribute] (string) The name of the attribute to be validated.
    [$view] (\yii\web\View) The view object that is going to be used to render
    views or view files containing a model form with this validator applied.


*yii/validators/ImageValidator::isActive*			public
 See |yii/validators/Validator::isActive|


*yii/validators/ImageValidator::addError*			public
 See |yii/validators/Validator::addError|


*yii/validators/ImageValidator::isEmpty*			public
 See |yii/validators/FileValidator::isEmpty|


*yii/validators/ImageValidator::getSizeLimit*		public
 See |yii/validators/FileValidator::getSizeLimit|


*yii/validators/ImageValidator::validateExtension*	protected
 See |yii/validators/FileValidator::validateExtension|


*yii/validators/ImageValidator::getClientOptions*		protected
>
 getClientOptions($model, $attribute)
<
(array) The client side validation options

    [$model] (\yii\base\Model) The model being validated
    [$attribute] (string) The attribute name being validated


*yii/validators/ImageValidator::validateImage*		protected
>
 validateImage($image)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.

    [$image] (\yii\web\UploadedFile) Uploaded file passed to check against a
    set of rules



 vim:tw=78:ts=8:ft=help:norl:
