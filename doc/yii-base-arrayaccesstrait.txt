
*yii/base/ArrayAccessTrait*  
===========================

DESCRIPTION
------------------------------------------------------------------------------

 Note that ArrayAccessTrait requires the class using it contain a property
 named 'data' which should be an array. The data will be exposed by
 ArrayAccessTrait to support accessing the class object like an array.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/base/ArrayAccessTrait::getIterator*			public
>
 getIterator()
<
(\ArrayIterator) An iterator for traversing the cookies in the collection.

 This method is required by the SPL interface '\IteratorAggregate'. It will be
 implicitly called when you use 'foreach' to traverse the collection.


*yii/base/ArrayAccessTrait::count*			public
>
 count()
<
(integer) Number of data elements.

 This method is required by Countable interface.


*yii/base/ArrayAccessTrait::offsetExists*			public
>
 offsetExists($offset)
<
(boolean) 

    [$offset] (mixed) The offset to check on


*yii/base/ArrayAccessTrait::offsetGet*			public
>
 offsetGet($offset)
<
(mixed) The element at the offset, null if no element is found at the offset

    [$offset] (integer) The offset to retrieve element.


*yii/base/ArrayAccessTrait::offsetSet*			public
>
 offsetSet($offset, $item)
<
(void)

    [$offset] (integer) The offset to set element
    [$item] (mixed) The element value


*yii/base/ArrayAccessTrait::offsetUnset*			public
>
 offsetUnset($offset)
<
(void)

    [$offset] (mixed) The offset to unset element



 vim:tw=78:ts=8:ft=help:norl:
