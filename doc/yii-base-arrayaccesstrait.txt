
*yii/base/ArrayAccessTrait*  
===========================

DESCRIPTION
------------------------------------------------------------------------------

 Note that ArrayAccessTrait requires the class using it contain a property
 named 'data' which should be an array. The data will be exposed by
 ArrayAccessTrait to support accessing the class object like an array.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/base/ArrayAccessTrait::getIterator*			public
>
 getIterator()
<
return (\ArrayIterator) An iterator for traversing the cookies in the collection.

 Returns an iterator for traversing the data.

 This method is required by the SPL interface '\IteratorAggregate'. It will be
 implicitly called when you use 'foreach' to traverse the collection.


*yii/base/ArrayAccessTrait::count*			public
>
 count()
<
return (int) Number of data elements.

 Returns the number of data items.

 This method is required by Countable interface.


*yii/base/ArrayAccessTrait::offsetExists*			public
>
 offsetExists($offset)
<
return (bool) 

 This method is required by the interface '\ArrayAccess'.

    [$offset] (mixed) The offset to check on


*yii/base/ArrayAccessTrait::offsetGet*			public
>
 offsetGet($offset)
<
return (mixed) The element at the offset, null if no element is found at the offset

 This method is required by the interface '\ArrayAccess'.

    [$offset] (int) The offset to retrieve element.


*yii/base/ArrayAccessTrait::offsetSet*			public
>
 offsetSet($offset, $item)
<
return (void)

 This method is required by the interface '\ArrayAccess'.

    [$offset] (int) The offset to set element
    [$item] (mixed) The element value


*yii/base/ArrayAccessTrait::offsetUnset*			public
>
 offsetUnset($offset)
<
return (void)

 This method is required by the interface '\ArrayAccess'.

    [$offset] (mixed) The offset to unset element



 vim:tw=78:ts=8:ft=help:norl:
