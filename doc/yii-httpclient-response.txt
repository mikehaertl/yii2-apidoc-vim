
*yii/httpclient/Response*   >> |yii/httpclient/Message|
=========================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/httpclient/Message::$client|
 |yii/base/Component::$behaviors|
 |yii/httpclient/Message::$headers|
 |yii/httpclient/Message::$content|
 |yii/httpclient/Message::$format|


$cookies				*yii/httpclient/Response::$cookies*

 (\yii\web\CookieCollection|\yii\web\Cookie[]) The cookie collection.

$data					*yii/httpclient/Response::$data*

 (mixed) Content data fields.

$statusCode				*yii/httpclient/Response::$statusCode*

 (string) Status code.

$isOk					*yii/httpclient/Response::$isOk*

 (bool) Whether response is OK.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/httpclient/Message::setHeaders|
 |yii/httpclient/Message::getHeaders|
 |yii/httpclient/Message::addHeaders|
 |yii/httpclient/Message::hasHeaders|
 |yii/httpclient/Message::setCookies|
 |yii/httpclient/Message::addCookies|
 |yii/httpclient/Message::hasCookies|
 |yii/httpclient/Message::setContent|
 |yii/httpclient/Message::getContent|
 |yii/httpclient/Message::hasContent|
 |yii/httpclient/Message::setData|
 |yii/httpclient/Message::addData|
 |yii/httpclient/Message::setFormat|
 |yii/httpclient/Message::getFormat|
 |yii/httpclient/Message::composeHeaderLines|
 |yii/httpclient/Message::toString|
 |yii/httpclient/Message::__toString|


*yii/httpclient/Response::getCookies*			public
>
 getCookies()
<
return (\yii\web\CookieCollection|\yii\web\Cookie[]) The cookie collection.

 Returns the cookie collection.



 The cookie collection contains the cookies associated with HTTP message.




*yii/httpclient/Response::getData*			public
>
 getData()
<
return (mixed) Content data fields.

 Returns the data fields, parsed from raw content.








*yii/httpclient/Response::defaultFormat*			protected
>
 defaultFormat()
<
return (string|null) Format name, 'null' 
  - if detection failed.

 Returns default format automatically detected from headers and content.


*yii/httpclient/Response::getStatusCode*			public
>
 getStatusCode()
<
return (string) Status code.

 Returns status code.


*yii/httpclient/Response::getIsOk*			public
>
 getIsOk()
<
return (bool) Whether response is OK.

 Checks if response status code is OK (status code = 20x)


*yii/httpclient/Response::detectFormatByHeaders*		protected
>
 detectFormatByHeaders($headers)
<
return (null|string) Format name, 'null' 
  - if detection failed.

 Detects format from headers.

    [$headers] (\yii\web\HeaderCollection) Source headers.


*yii/httpclient/Response::detectFormatByContent*		protected
>
 detectFormatByContent($content)
<
return (null|string) Format name, 'null' 
  - if detection failed.

 Detects response format from raw content.

    [$content] (string) Raw response content.



 vim:tw=78:ts=8:ft=help:norl:
