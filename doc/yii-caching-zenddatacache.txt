
*yii\caching\ZendDataCache*   >> yii\caching\Cache
===========================

 To use this application component, the [Zend Data Cache PHP
 extension](http://www.zend.com/en/products/server/) must be loaded.

 See [[Cache]] for common cache operations that ZendDataCache supports.


PROPERTY DETAILS
------------------------------------------------------------------------------

<$keyPrefix>				*yii\caching\ZendDataCache::$keyPrefix*
 See |yii\caching\Cache::$keyPrefix|

<$serializer>				*yii\caching\ZendDataCache::$serializer*
 See |yii\caching\Cache::$serializer|

<$behaviors>				*yii\caching\ZendDataCache::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii\caching\ZendDataCache::className*				 public
 See |yii\base\Object::className|


*yii\caching\ZendDataCache::__construct*			 public
 See |yii\base\Object::__construct|


*yii\caching\ZendDataCache::init*				 public
 See |yii\caching\Cache::init|


*yii\caching\ZendDataCache::__get*				 public
 See |yii\base\Component::__get|


*yii\caching\ZendDataCache::__set*				 public
 See |yii\base\Component::__set|


*yii\caching\ZendDataCache::__isset*				 public
 See |yii\base\Component::__isset|


*yii\caching\ZendDataCache::__unset*				 public
 See |yii\base\Component::__unset|


*yii\caching\ZendDataCache::__call*				 public
 See |yii\base\Component::__call|


*yii\caching\ZendDataCache::hasProperty*			 public
 See |yii\base\Component::hasProperty|


*yii\caching\ZendDataCache::canGetProperty*			 public
 See |yii\base\Component::canGetProperty|


*yii\caching\ZendDataCache::canSetProperty*			 public
 See |yii\base\Component::canSetProperty|


*yii\caching\ZendDataCache::hasMethod*				 public
 See |yii\base\Component::hasMethod|


*yii\caching\ZendDataCache::__clone*				 public
 See |yii\base\Component::__clone|


*yii\caching\ZendDataCache::behaviors*				 public
 See |yii\base\Component::behaviors|


*yii\caching\ZendDataCache::hasEventHandlers*			 public
 See |yii\base\Component::hasEventHandlers|


*yii\caching\ZendDataCache::on* 				 public
 See |yii\base\Component::on|


*yii\caching\ZendDataCache::off*				 public
 See |yii\base\Component::off|


*yii\caching\ZendDataCache::trigger*				 public
 See |yii\base\Component::trigger|


*yii\caching\ZendDataCache::getBehavior*			 public
 See |yii\base\Component::getBehavior|


*yii\caching\ZendDataCache::getBehaviors*			 public
 See |yii\base\Component::getBehaviors|


*yii\caching\ZendDataCache::attachBehavior*			 public
 See |yii\base\Component::attachBehavior|


*yii\caching\ZendDataCache::attachBehaviors*			 public
 See |yii\base\Component::attachBehaviors|


*yii\caching\ZendDataCache::detachBehavior*			 public
 See |yii\base\Component::detachBehavior|


*yii\caching\ZendDataCache::detachBehaviors*			 public
 See |yii\base\Component::detachBehaviors|


*yii\caching\ZendDataCache::ensureBehaviors*			 public
 See |yii\base\Component::ensureBehaviors|


*yii\caching\ZendDataCache::buildKey*				 protected
 See |yii\caching\Cache::buildKey|


*yii\caching\ZendDataCache::get*				 public
 See |yii\caching\Cache::get|


*yii\caching\ZendDataCache::exists*				 public
 See |yii\caching\Cache::exists|


*yii\caching\ZendDataCache::mget*				 public
 See |yii\caching\Cache::mget|


*yii\caching\ZendDataCache::set*				 public
 See |yii\caching\Cache::set|


*yii\caching\ZendDataCache::mset*				 public
 See |yii\caching\Cache::mset|


*yii\caching\ZendDataCache::madd*				 public
 See |yii\caching\Cache::madd|


*yii\caching\ZendDataCache::add*				 public
 See |yii\caching\Cache::add|


*yii\caching\ZendDataCache::delete*				 public
 See |yii\caching\Cache::delete|


*yii\caching\ZendDataCache::flush*				 public
 See |yii\caching\Cache::flush|


*yii\caching\ZendDataCache::getValue*				 protected
>
 getValue($key)
<
(string|boolean) The value stored in cache, false if the value is not in the
cache or expired.

 This is the implementation of the method declared in the parent class.
    [$key] (string) A unique key identifying the cached value


*yii\caching\ZendDataCache::setValue*				 protected
>
 setValue($key, $value, $duration)
<
(boolean) True if the value is successfully stored into cache, false otherwise

 This is the implementation of the method declared in the parent class.
    [$key] (string) The key identifying the value to be cached
    [$value] (string) The value to be cached
    [$duration] (integer) The number of seconds in which the cached value will
    expire. 0 means never expire.


*yii\caching\ZendDataCache::addValue*				 protected
>
 addValue($key, $value, $duration)
<
(boolean) True if the value is successfully stored into cache, false otherwise

 This is the implementation of the method declared in the parent class.
    [$key] (string) The key identifying the value to be cached
    [$value] (string) The value to be cached
    [$duration] (integer) The number of seconds in which the cached value will
    expire. 0 means never expire.


*yii\caching\ZendDataCache::deleteValue*			 protected
>
 deleteValue($key)
<
(boolean) If no error happens during deletion


    [$key] (string) The key of the value to be deleted


*yii\caching\ZendDataCache::flushValues*			 protected
>
 flushValues()
<
(boolean) Whether the flush operation was successful.

 This is the implementation of the method declared in the parent class.


*yii\caching\ZendDataCache::getValues*				 protected
 See |yii\caching\Cache::getValues|


*yii\caching\ZendDataCache::setValues*				 protected
 See |yii\caching\Cache::setValues|


*yii\caching\ZendDataCache::addValues*				 protected
 See |yii\caching\Cache::addValues|


*yii\caching\ZendDataCache::offsetExists*			 public
 See |yii\caching\Cache::offsetExists|


*yii\caching\ZendDataCache::offsetGet*				 public
 See |yii\caching\Cache::offsetGet|


*yii\caching\ZendDataCache::offsetSet*				 public
 See |yii\caching\Cache::offsetSet|


*yii\caching\ZendDataCache::offsetUnset*			 public
 See |yii\caching\Cache::offsetUnset|



 vim:tw=78:ts=8:ft=help:norl:
