
*yii/grid/CheckboxColumn*   >> |yii/grid/Column|
=========================

DESCRIPTION
------------------------------------------------------------------------------

 To add a CheckboxColumn to the 'GridView', add it to the
 'GridView::columns|columns' configuration as follows:

   'columns' => [
       // ...
       [
           'class' => 'yii\grid\CheckboxColumn',
           // you may configure additional properties here
       ],
   ]

 Users may click on the checkboxes to select rows of the grid. The selected
 rows may be obtained by calling the following JavaScript code:

 '''javascript var keys = $('#grid').yiiGridView('getSelectedRows'); // keys
 is an array consisting of the keys associated with the selected rows '''


PROPERTY DETAILS
------------------------------------------------------------------------------

$grid					*yii/grid/CheckboxColumn::$grid*
 See |yii/grid/Column::$grid|

$header					*yii/grid/CheckboxColumn::$header*
 See |yii/grid/Column::$header|

$footer					*yii/grid/CheckboxColumn::$footer*
 See |yii/grid/Column::$footer|

$content				*yii/grid/CheckboxColumn::$content*
 See |yii/grid/Column::$content|

$visible				*yii/grid/CheckboxColumn::$visible*
 See |yii/grid/Column::$visible|

$options				*yii/grid/CheckboxColumn::$options*
 See |yii/grid/Column::$options|

$headerOptions				*yii/grid/CheckboxColumn::$headerOptions*
 See |yii/grid/Column::$headerOptions|

$contentOptions				*yii/grid/CheckboxColumn::$contentOptions*
 See |yii/grid/Column::$contentOptions|

$footerOptions				*yii/grid/CheckboxColumn::$footerOptions*
 See |yii/grid/Column::$footerOptions|

$filterOptions				*yii/grid/CheckboxColumn::$filterOptions*
 See |yii/grid/Column::$filterOptions|

$name					*yii/grid/CheckboxColumn::$name*
 (string) The name of the input checkbox input fields. This will be appended
 with '[]' to ensure it is an array.

$checkboxOptions			*yii/grid/CheckboxColumn::$checkboxOptions*
 (array|\Closure) The HTML attributes for checkboxes. This can either be an
 array of attributes or an anonymous function ('Closure') that returns such an
 array. The signature of the function should be the following: 'function
 ($model, $key, $index, $column)'. Where '$model', '$key', and '$index' refer
 to the model, key and index of the row currently being rendered and '$column'
 is a reference to the 'CheckboxColumn' object. A function may be used to
 assign different attributes to different rows based on the data in that row.
 Specifically if you want to set a different value for the checkbox you can
 use this option in the following way (in this example using the 'name'
 attribute of the model):

   'checkboxOptions' => function ($model, $key, $index, $column) {
       return ['value' => $model->name];
   }



$multiple				*yii/grid/CheckboxColumn::$multiple*
 (boolean) Whether it is possible to select multiple rows. Defaults to 'true'.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/grid/CheckboxColumn::className*			public
 See |yii/base/Object::className|


*yii/grid/CheckboxColumn::__construct*			public
 See |yii/base/Object::__construct|


*yii/grid/CheckboxColumn::init*				public
>
 init()
<
(void)

 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.


*yii/grid/CheckboxColumn::__get*				public
 See |yii/base/Object::__get|


*yii/grid/CheckboxColumn::__set*				public
 See |yii/base/Object::__set|


*yii/grid/CheckboxColumn::__isset*			public
 See |yii/base/Object::__isset|


*yii/grid/CheckboxColumn::__unset*			public
 See |yii/base/Object::__unset|


*yii/grid/CheckboxColumn::__call*				public
 See |yii/base/Object::__call|


*yii/grid/CheckboxColumn::hasProperty*			public
 See |yii/base/Object::hasProperty|


*yii/grid/CheckboxColumn::canGetProperty*			public
 See |yii/base/Object::canGetProperty|


*yii/grid/CheckboxColumn::canSetProperty*			public
 See |yii/base/Object::canSetProperty|


*yii/grid/CheckboxColumn::hasMethod*			public
 See |yii/base/Object::hasMethod|


*yii/grid/CheckboxColumn::renderHeaderCell*		public
 See |yii/grid/Column::renderHeaderCell|


*yii/grid/CheckboxColumn::renderFooterCell*		public
 See |yii/grid/Column::renderFooterCell|


*yii/grid/CheckboxColumn::renderDataCell*			public
 See |yii/grid/Column::renderDataCell|


*yii/grid/CheckboxColumn::renderFilterCell*		public
 See |yii/grid/Column::renderFilterCell|


*yii/grid/CheckboxColumn::renderHeaderCellContent*	protected
>
 renderHeaderCellContent()
<
(string) The rendering result

 The default implementation simply renders 'header'. This method may be
 overridden to customize the rendering of the header cell.


*yii/grid/CheckboxColumn::renderFooterCellContent*	protected
 See |yii/grid/Column::renderFooterCellContent|


*yii/grid/CheckboxColumn::renderDataCellContent*		protected
>
 renderDataCellContent($model, $key, $index)
<
(string) The rendering result

    [$model] (mixed) The data model
    [$key] (mixed) The key associated with the data model
    [$index] (integer) The zero-based index of the data model among the models
    array returned by 'GridView::dataProvider'.


*yii/grid/CheckboxColumn::renderFilterCellContent*	protected
 See |yii/grid/Column::renderFilterCellContent|



 vim:tw=78:ts=8:ft=help:norl:
