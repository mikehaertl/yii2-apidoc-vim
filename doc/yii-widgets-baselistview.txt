
*yii/widgets/BaseListView*   >> |yii/base/Widget|
==========================

SUBCLASSES
------------------------------------------------------------------------------

|yii/widgets/ListView|
|yii/grid/GridView|


PROPERTY DETAILS
------------------------------------------------------------------------------

$counter				*yii/widgets/BaseListView::$counter*
 See |yii/base/Widget::$counter|

$autoIdPrefix				*yii/widgets/BaseListView::$autoIdPrefix*
 See |yii/base/Widget::$autoIdPrefix|

$stack					*yii/widgets/BaseListView::$stack*
 See |yii/base/Widget::$stack|

$options				*yii/widgets/BaseListView::$options*
 (array) The HTML attributes for the container tag of the list view. The "tag"
 element specifies the tag name of the container element and defaults to
 "div".

$dataProvider				*yii/widgets/BaseListView::$dataProvider*
 (\yii\data\DataProviderInterface) The data provider for the view. This
 property is required.

$pager					*yii/widgets/BaseListView::$pager*
 (array) The configuration for the pager widget. By default, 'LinkPager' will
 be used to render the pager. You can use a different widget class by
 configuring the "class" element.

$sorter					*yii/widgets/BaseListView::$sorter*
 (array) The configuration for the sorter widget. By default, 'LinkSorter'
 will be used to render the sorter. You can use a different widget class by
 configuring the "class" element.

$summary				*yii/widgets/BaseListView::$summary*
 (string) The HTML content to be displayed as the summary of the list view. If
 you do not want to show the summary, you may set it with an empty string.

 The following tokens will be replaced with the corresponding values:


   - '{begin}': the starting row number (1-based) currently being
   displayed 
   - '{end}': the ending row number (1-based) currently being displayed 
   - '{count}': the number of rows currently being displayed 
   - '{totalCount}': the total number of rows available 
   - '{page}': the page number (1-based) current being displayed 
   - '{pageCount}': the number of pages available

$summaryOptions				*yii/widgets/BaseListView::$summaryOptions*
 (array) The HTML attributes for the summary of the list view. The "tag"
 element specifies the tag name of the summary element and defaults to "div".

$showOnEmpty				*yii/widgets/BaseListView::$showOnEmpty*
 (boolean) Whether to show the list view if 'dataProvider' returns no data.

$emptyText				*yii/widgets/BaseListView::$emptyText*
 (string) The HTML content to be displayed when 'dataProvider' does not have
 any data.

$emptyTextOptions			*yii/widgets/BaseListView::$emptyTextOptions*
 (array) The HTML attributes for the emptyText of the list view. The "tag"
 element specifies the tag name of the emptyText element and defaults to
 "div".

$layout					*yii/widgets/BaseListView::$layout*
 (string) The layout that determines how different sections of the list view
 should be organized. The following tokens will be replaced with the
 corresponding section contents:


   - '{summary}': the summary section. See 'renderSummary()'. 
   - '{items}': the list items. See 'renderItems()'. 
   - '{sorter}': the sorter. See 'renderSorter()'. 
   - '{pager}': the pager. See 'renderPager()'.

$behaviors				*yii/widgets/BaseListView::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

$id					*yii/widgets/BaseListView::$id*
 (string) ID of the widget.

$view					*yii/widgets/BaseListView::$view*
 (\yii\web\View) The view object that can be used to render views or view
 files.

$viewPath				*yii/widgets/BaseListView::$viewPath*
 (string) The view path that may be prefixed to a relative view name.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/widgets/BaseListView::className*			public
 See |yii/base/Object::className|


*yii/widgets/BaseListView::__construct*			public
 See |yii/base/Object::__construct|


*yii/widgets/BaseListView::init*				public
>
 init()
<
(void)



*yii/widgets/BaseListView::__get*				public
 See |yii/base/Component::__get|


*yii/widgets/BaseListView::__set*				public
 See |yii/base/Component::__set|


*yii/widgets/BaseListView::__isset*			public
 See |yii/base/Component::__isset|


*yii/widgets/BaseListView::__unset*			public
 See |yii/base/Component::__unset|


*yii/widgets/BaseListView::__call*			public
 See |yii/base/Component::__call|


*yii/widgets/BaseListView::hasProperty*			public
 See |yii/base/Component::hasProperty|


*yii/widgets/BaseListView::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/widgets/BaseListView::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/widgets/BaseListView::hasMethod*			public
 See |yii/base/Component::hasMethod|


*yii/widgets/BaseListView::__clone*			public
 See |yii/base/Component::__clone|


*yii/widgets/BaseListView::behaviors*			public
 See |yii/base/Component::behaviors|


*yii/widgets/BaseListView::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/widgets/BaseListView::on*				public
 See |yii/base/Component::on|


*yii/widgets/BaseListView::off*				public
 See |yii/base/Component::off|


*yii/widgets/BaseListView::trigger*			public
 See |yii/base/Component::trigger|


*yii/widgets/BaseListView::getBehavior*			public
 See |yii/base/Component::getBehavior|


*yii/widgets/BaseListView::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/widgets/BaseListView::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/widgets/BaseListView::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/widgets/BaseListView::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/widgets/BaseListView::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/widgets/BaseListView::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/widgets/BaseListView::begin*				public
 See |yii/base/Widget::begin|


*yii/widgets/BaseListView::end*				public
 See |yii/base/Widget::end|


*yii/widgets/BaseListView::widget*			public
 See |yii/base/Widget::widget|


*yii/widgets/BaseListView::getId*				public
 See |yii/base/Widget::getId|


*yii/widgets/BaseListView::setId*				public
 See |yii/base/Widget::setId|


*yii/widgets/BaseListView::getView*			public
 See |yii/base/Widget::getView|


*yii/widgets/BaseListView::setView*			public
 See |yii/base/Widget::setView|


*yii/widgets/BaseListView::run*				public
>
 run()
<
(void)



*yii/widgets/BaseListView::render*			public
 See |yii/base/Widget::render|


*yii/widgets/BaseListView::renderFile*			public
 See |yii/base/Widget::renderFile|


*yii/widgets/BaseListView::getViewPath*			public
 See |yii/base/ViewContextInterface::getViewPath|


*yii/widgets/BaseListView::renderItems*			public
>
 renderItems()
<
(string) The rendering result.



*yii/widgets/BaseListView::renderSection*			public
>
 renderSection($name)
<
(string|boolean) The rendering result of the section, or false if the named
section is not supported.

 If the named section is not supported, false will be returned.
    [$name] (string) The section name, e.g., '{summary}', '{items}'.


*yii/widgets/BaseListView::renderEmpty*			public
>
 renderEmpty()
<
(string) The rendering result



*yii/widgets/BaseListView::renderSummary*			public
>
 renderSummary()
<
(void)



*yii/widgets/BaseListView::renderPager*			public
>
 renderPager()
<
(string) The rendering result



*yii/widgets/BaseListView::renderSorter*			public
>
 renderSorter()
<
(string) The rendering result




 vim:tw=78:ts=8:ft=help:norl:
