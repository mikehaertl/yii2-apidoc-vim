
*yii/caching/XCache*   >> |yii/caching/Cache|
====================

DESCRIPTION
------------------------------------------------------------------------------

 To use this application component, the [XCache PHP
 extension](http://xcache.lighttpd.net/) must be loaded. Also note that the
 'flush()' functionality will work correctly only if
 "xcache.admin.enable_auth" is set to "Off" in php.ini.

 See 'Cache' for common cache operations that XCache supports.


PROPERTY DETAILS
------------------------------------------------------------------------------

$keyPrefix				*yii/caching/XCache::$keyPrefix*
 See |yii/caching/Cache::$keyPrefix|

$serializer				*yii/caching/XCache::$serializer*
 See |yii/caching/Cache::$serializer|

$behaviors				*yii/caching/XCache::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii/caching/XCache::className*				public
 See |yii/base/Object::className|


*yii/caching/XCache::__construct*				public
 See |yii/base/Object::__construct|


*yii/caching/XCache::init*				public
 See |yii/base/Object::init|


*yii/caching/XCache::__get*				public
 See |yii/base/Component::__get|


*yii/caching/XCache::__set*				public
 See |yii/base/Component::__set|


*yii/caching/XCache::__isset*				public
 See |yii/base/Component::__isset|


*yii/caching/XCache::__unset*				public
 See |yii/base/Component::__unset|


*yii/caching/XCache::__call*				public
 See |yii/base/Component::__call|


*yii/caching/XCache::hasProperty*				public
 See |yii/base/Component::hasProperty|


*yii/caching/XCache::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/caching/XCache::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/caching/XCache::hasMethod*				public
 See |yii/base/Component::hasMethod|


*yii/caching/XCache::__clone*				public
 See |yii/base/Component::__clone|


*yii/caching/XCache::behaviors*				public
 See |yii/base/Component::behaviors|


*yii/caching/XCache::hasEventHandlers*			public
 See |yii/base/Component::hasEventHandlers|


*yii/caching/XCache::on*					public
 See |yii/base/Component::on|


*yii/caching/XCache::off*					public
 See |yii/base/Component::off|


*yii/caching/XCache::trigger*				public
 See |yii/base/Component::trigger|


*yii/caching/XCache::getBehavior*				public
 See |yii/base/Component::getBehavior|


*yii/caching/XCache::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/caching/XCache::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/caching/XCache::attachBehaviors*			public
 See |yii/base/Component::attachBehaviors|


*yii/caching/XCache::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/caching/XCache::detachBehaviors*			public
 See |yii/base/Component::detachBehaviors|


*yii/caching/XCache::ensureBehaviors*			public
 See |yii/base/Component::ensureBehaviors|


*yii/caching/XCache::buildKey*				public
 See |yii/caching/Cache::buildKey|


*yii/caching/XCache::get*					public
 See |yii/caching/Cache::get|


*yii/caching/XCache::exists*				public
>
 exists($key)
<
(boolean) True if a value exists in cache, false if the value is not in the
cache or expired.

 This can be faster than getting the value from the cache if the data is big.
 Note that this method does not check whether the dependency associated with
 the cached data, if there is any, has changed. So a call to 'get' may return
 false while exists returns true.
    [$key] (mixed) A key identifying the cached value. This can be a simple
    string or a complex data structure consisting of factors representing the
    key.


*yii/caching/XCache::mget*				public
 See |yii/caching/Cache::mget|


*yii/caching/XCache::set*					public
 See |yii/caching/Cache::set|


*yii/caching/XCache::mset*				public
 See |yii/caching/Cache::mset|


*yii/caching/XCache::madd*				public
 See |yii/caching/Cache::madd|


*yii/caching/XCache::add*					public
 See |yii/caching/Cache::add|


*yii/caching/XCache::delete*				public
 See |yii/caching/Cache::delete|


*yii/caching/XCache::flush*				public
 See |yii/caching/Cache::flush|


*yii/caching/XCache::getValue*				protected
>
 getValue($key)
<
(string|boolean) The value stored in cache, false if the value is not in the
cache or expired.

 This is the implementation of the method declared in the parent class.
    [$key] (string) A unique key identifying the cached value


*yii/caching/XCache::setValue*				protected
>
 setValue($key, $value, $duration)
<
(boolean) True if the value is successfully stored into cache, false otherwise

 This is the implementation of the method declared in the parent class.
    [$key] (string) The key identifying the value to be cached
    [$value] (string) The value to be cached
    [$duration] (integer) The number of seconds in which the cached value will
    expire. 0 means never expire.


*yii/caching/XCache::addValue*				protected
>
 addValue($key, $value, $duration)
<
(boolean) True if the value is successfully stored into cache, false otherwise

 This is the implementation of the method declared in the parent class.
    [$key] (string) The key identifying the value to be cached
    [$value] (string) The value to be cached
    [$duration] (integer) The number of seconds in which the cached value will
    expire. 0 means never expire.


*yii/caching/XCache::deleteValue*				protected
>
 deleteValue($key)
<
(boolean) If no error happens during deletion

    [$key] (string) The key of the value to be deleted


*yii/caching/XCache::flushValues*				protected
>
 flushValues()
<
(boolean) Whether the flush operation was successful.

 This is the implementation of the method declared in the parent class.


*yii/caching/XCache::getValues*				protected
 See |yii/caching/Cache::getValues|


*yii/caching/XCache::setValues*				protected
 See |yii/caching/Cache::setValues|


*yii/caching/XCache::addValues*				protected
 See |yii/caching/Cache::addValues|


*yii/caching/XCache::offsetExists*			public
 See |yii/caching/Cache::offsetExists|


*yii/caching/XCache::offsetGet*				public
 See |yii/caching/Cache::offsetGet|


*yii/caching/XCache::offsetSet*				public
 See |yii/caching/Cache::offsetSet|


*yii/caching/XCache::offsetUnset*				public
 See |yii/caching/Cache::offsetUnset|



 vim:tw=78:ts=8:ft=help:norl:
