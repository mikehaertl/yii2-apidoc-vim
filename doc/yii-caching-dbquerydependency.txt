
*yii/caching/DbQueryDependency*   >> |yii/caching/Dependency|
===============================

DESCRIPTION
------------------------------------------------------------------------------

 If the query result changes, the dependency is considered as changed. The
 query is specified via the 'query' property.

 Object of any class which matches 'QueryInterface' can be used, so this
 dependency can be used not only with regular relational databases but with
 MongoDB, Redis and so on as well.

 For more details and usage information on Cache, see the [guide article on
 caching](guide:caching-overview).


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/caching/Dependency::$data|
 |yii/caching/Dependency::$reusable|


$db					*yii/caching/DbQueryDependency::$db*

 (string|array|object) The application component ID of the database
 connection, connection object or its array configuration. This field can be
 left blank, allowing query to determine connection automatically.

$query					*yii/caching/DbQueryDependency::$query*

 (\yii\db\QueryInterface) The query which result is used to determine if the
 dependency has been changed. Actual query method to be invoked is determined
 by 'method'.

$method					*yii/caching/DbQueryDependency::$method*

 (string|callable) Method which should be invoked in over the 'query' object.

 If specified as a string an own query method with such name will be invoked,
 passing 'db' value as its first argument. For example: 'exists', 'all'.

 This field can be specified as a PHP callback of following signature:

   function (QueryInterface $query, mixed $db) {
       //return mixed;
   }

 If not set 
   - 'QueryInterface::one()' will be used.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/caching/Dependency::evaluateDependency|
 |yii/caching/Dependency::getHasChanged|
 |yii/caching/Dependency::isChanged|
 |yii/caching/Dependency::resetReusableData|
 |yii/caching/Dependency::generateReusableHash|


*yii/caching/DbQueryDependency::generateDependencyData*	protected
>
 generateDependencyData($cache)
<
return (mixed) The data needed to determine if dependency has been changed.

 Generates the data needed to determine if dependency is changed.

 This method returns the query result.

    [$cache] (\yii\caching\CacheInterface) The cache component that is
    currently evaluating this dependency



 vim:tw=78:ts=8:ft=help:norl:
