
*yii/bootstrap/Dropdown*   >> |yii/bootstrap/Widget|
========================

DESCRIPTION
------------------------------------------------------------------------------

 For example,

   <div class="dropdown">
       <a href="#" data-toggle="dropdown" class="dropdown-toggle">Label <b
 class="caret"></b></a>
       <?php
           echo Dropdown::widget([
               'items' => [
                   ['label' => 'DropdownA', 'url' => '/'],
                   ['label' => 'DropdownB', 'url' => '#'],
               ],
           ]);
       ?>
   </div>




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Widget::$counter|
 |yii/base/Widget::$autoIdPrefix|
 |yii/base/Widget::$stack|
 |yii/bootstrap/BootstrapWidgetTrait::$clientOptions|
 |yii/bootstrap/BootstrapWidgetTrait::$clientEvents|
 |yii/bootstrap/Widget::$options|


$items					*yii/bootstrap/Dropdown::$items*

 (array) List of menu items in the dropdown. Each array element can be either
 an HTML string, or an array representing a single menu with the following
 structure:


   - label: string, required, the label of the item link. 
   - encode: bool, optional, whether to HTML-encode item label. 
   - url: string|array, optional, the URL of the item link. This will
   be processed by '\yii\helpers\Url::to()'.   If not set, the item will be
 treated as a menu header when the item has no sub-menu. 
   - visible: bool, optional, whether this menu item is visible.
   Defaults to true. 
   - linkOptions: array, optional, the HTML attributes of the item
   link. 
   - options: array, optional, the HTML attributes of the item. 
   - items: array, optional, the submenu items. The structure is the
   same as this property.   Note that Bootstrap doesn't support dropdown
 submenu. You have to add your own CSS styles to support it. 
   - submenuOptions: array, optional, the HTML attributes for sub-menu
   container tag. If specified it will be   merged with 'submenuOptions'.

 To insert divider use '<li role="presentation" class="divider"></li>'.

$encodeLabels				*yii/bootstrap/Dropdown::$encodeLabels*

 (bool) Whether the labels for header items should be HTML-encoded.

$submenuOptions				*yii/bootstrap/Dropdown::$submenuOptions*

 (array|null) The HTML attributes for sub-menu container tags. If not set 
   - 'options' value will be used for it.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Widget::begin|
 |yii/base/Widget::end|
 |yii/base/Widget::widget|
 |yii/base/Widget::getId|
 |yii/base/Widget::setId|
 |yii/bootstrap/BootstrapWidgetTrait::getView|
 |yii/base/Widget::setView|
 |yii/base/Widget::render|
 |yii/base/Widget::renderFile|
 |yii/base/Widget::getViewPath|
 |yii/base/Widget::beforeRun|
 |yii/base/Widget::afterRun|
 |yii/bootstrap/BootstrapWidgetTrait::registerPlugin|
 |yii/bootstrap/BootstrapWidgetTrait::registerClientEvents|


*yii/bootstrap/Dropdown::init*				public
>
 init()
<
return (void)

 Initializes the widget.

 If you override this method, make sure you call the parent implementation
 first.


*yii/bootstrap/Dropdown::run*				public
>
 run()
<
return (void)

 Renders the widget.


*yii/bootstrap/Dropdown::renderItems*			protected
>
 renderItems($items, $options='[]')
<
return (string) The rendering result.

 Renders menu items.

    [$items] (array) The menu items to be rendered
    [$options] (array) The container HTML attributes



 vim:tw=78:ts=8:ft=help:norl:
