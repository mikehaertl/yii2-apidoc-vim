
*yii/debug/models/search/Base*   >> |yii/base/Model|
==============================

SUBCLASSES
------------------------------------------------------------------------------

|yii/debug/models/search/Profile|
|yii/debug/models/search/Debug|
|yii/debug/models/search/Log|
|yii/debug/models/search/Db|
|yii/debug/models/search/Mail|


PROPERTY DETAILS
------------------------------------------------------------------------------

$behaviors				*yii/debug/models/search/Base::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

$validators				*yii/debug/models/search/Base::$validators*
 (\ArrayObject|\yii\validators\Validator[]) All the validators declared in the
 model.

$activeValidators			*yii/debug/models/search/Base::$activeValidators*
 (\yii\validators\Validator[]) The validators applicable to the current
 'scenario'.

$errors					*yii/debug/models/search/Base::$errors*
 (array) Errors for all attributes or the specified attribute. Empty array is
 returned if no error. Note that when returning errors for all attributes, the
 result is a two-dimensional array, like the following:

   // $params refers to validation parameters given in the rule
   function validatorName($attribute, $params)



$firstErrors				*yii/debug/models/search/Base::$firstErrors*
 (array) The first errors. The array keys are the attribute names, and the
 array values are the corresponding error messages. An empty array will be
 returned if there is no error.

$attributes				*yii/debug/models/search/Base::$attributes*
 (array) Attribute values (name => value).

$scenario				*yii/debug/models/search/Base::$scenario*
 (string) The scenario that this model is in. Defaults to 'SCENARIO_DEFAULT'.

$iterator				*yii/debug/models/search/Base::$iterator*
 (\ArrayIterator) An iterator for traversing the items in the list.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/debug/models/search/Base::className*			public
 See |yii/base/Object::className|


*yii/debug/models/search/Base::__construct*		public
 See |yii/base/Object::__construct|


*yii/debug/models/search/Base::init*			public
 See |yii/base/Object::init|


*yii/debug/models/search/Base::__get*			public
 See |yii/base/Component::__get|


*yii/debug/models/search/Base::__set*			public
 See |yii/base/Component::__set|


*yii/debug/models/search/Base::__isset*			public
 See |yii/base/Component::__isset|


*yii/debug/models/search/Base::__unset*			public
 See |yii/base/Component::__unset|


*yii/debug/models/search/Base::__call*			public
 See |yii/base/Component::__call|


*yii/debug/models/search/Base::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/debug/models/search/Base::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/debug/models/search/Base::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/debug/models/search/Base::hasMethod*			public
 See |yii/base/Component::hasMethod|


*yii/debug/models/search/Base::__clone*			public
 See |yii/base/Component::__clone|


*yii/debug/models/search/Base::behaviors*			public
 See |yii/base/Component::behaviors|


*yii/debug/models/search/Base::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/debug/models/search/Base::on*			public
 See |yii/base/Component::on|


*yii/debug/models/search/Base::off*			public
 See |yii/base/Component::off|


*yii/debug/models/search/Base::trigger*			public
 See |yii/base/Component::trigger|


*yii/debug/models/search/Base::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/debug/models/search/Base::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/debug/models/search/Base::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/debug/models/search/Base::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/debug/models/search/Base::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/debug/models/search/Base::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/debug/models/search/Base::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/debug/models/search/Base::fields*			public
 See |yii/base/ArrayableTrait::fields|


*yii/debug/models/search/Base::extraFields*		public
 See |yii/base/ArrayableTrait::extraFields|


*yii/debug/models/search/Base::toArray*			public
 See |yii/base/ArrayableTrait::toArray|


*yii/debug/models/search/Base::resolveFields*		protected
 See |yii/base/ArrayableTrait::resolveFields|


*yii/debug/models/search/Base::rules*			public
 See |yii/base/Model::rules|


*yii/debug/models/search/Base::scenarios*			public
 See |yii/base/Model::scenarios|


*yii/debug/models/search/Base::formName*			public
 See |yii/base/Model::formName|


*yii/debug/models/search/Base::attributes*		public
 See |yii/base/Model::attributes|


*yii/debug/models/search/Base::attributeLabels*		public
 See |yii/base/Model::attributeLabels|


*yii/debug/models/search/Base::validate*			public
 See |yii/base/Model::validate|


*yii/debug/models/search/Base::beforeValidate*		public
 See |yii/base/Model::beforeValidate|


*yii/debug/models/search/Base::afterValidate*		public
 See |yii/base/Model::afterValidate|


*yii/debug/models/search/Base::getValidators*		public
 See |yii/base/Model::getValidators|


*yii/debug/models/search/Base::getActiveValidators*	public
 See |yii/base/Model::getActiveValidators|


*yii/debug/models/search/Base::createValidators*		public
 See |yii/base/Model::createValidators|


*yii/debug/models/search/Base::isAttributeRequired*	public
 See |yii/base/Model::isAttributeRequired|


*yii/debug/models/search/Base::isAttributeSafe*		public
 See |yii/base/Model::isAttributeSafe|


*yii/debug/models/search/Base::isAttributeActive*		public
 See |yii/base/Model::isAttributeActive|


*yii/debug/models/search/Base::getAttributeLabel*		public
 See |yii/base/Model::getAttributeLabel|


*yii/debug/models/search/Base::hasErrors*			public
 See |yii/base/Model::hasErrors|


*yii/debug/models/search/Base::getErrors*			public
 See |yii/base/Model::getErrors|


*yii/debug/models/search/Base::getFirstErrors*		public
 See |yii/base/Model::getFirstErrors|


*yii/debug/models/search/Base::getFirstError*		public
 See |yii/base/Model::getFirstError|


*yii/debug/models/search/Base::addError*			public
 See |yii/base/Model::addError|


*yii/debug/models/search/Base::clearErrors*		public
 See |yii/base/Model::clearErrors|


*yii/debug/models/search/Base::generateAttributeLabel*	public
 See |yii/base/Model::generateAttributeLabel|


*yii/debug/models/search/Base::getAttributes*		public
 See |yii/base/Model::getAttributes|


*yii/debug/models/search/Base::setAttributes*		public
 See |yii/base/Model::setAttributes|


*yii/debug/models/search/Base::onUnsafeAttribute*		public
 See |yii/base/Model::onUnsafeAttribute|


*yii/debug/models/search/Base::getScenario*		public
 See |yii/base/Model::getScenario|


*yii/debug/models/search/Base::setScenario*		public
 See |yii/base/Model::setScenario|


*yii/debug/models/search/Base::safeAttributes*		public
 See |yii/base/Model::safeAttributes|


*yii/debug/models/search/Base::activeAttributes*		public
 See |yii/base/Model::activeAttributes|


*yii/debug/models/search/Base::load*			public
 See |yii/base/Model::load|


*yii/debug/models/search/Base::loadMultiple*		public
 See |yii/base/Model::loadMultiple|


*yii/debug/models/search/Base::validateMultiple*		public
 See |yii/base/Model::validateMultiple|


*yii/debug/models/search/Base::getIterator*		public
 See |yii/base/Model::getIterator|


*yii/debug/models/search/Base::offsetExists*		public
 See |yii/base/Model::offsetExists|


*yii/debug/models/search/Base::offsetGet*			public
 See |yii/base/Model::offsetGet|


*yii/debug/models/search/Base::offsetSet*			public
 See |yii/base/Model::offsetSet|


*yii/debug/models/search/Base::offsetUnset*		public
 See |yii/base/Model::offsetUnset|


*yii/debug/models/search/Base::addCondition*		public
>
 addCondition($filter, $attribute, $partial='false')
<
(void)

    [$filter] (\yii\debug\components\search\Filter) Filter instance
    [$attribute] (string) Attribute to filter
    [$partial] (boolean) If partial match should be used



 vim:tw=78:ts=8:ft=help:norl:
