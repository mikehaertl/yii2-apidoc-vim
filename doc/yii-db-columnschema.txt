
*yii/db/ColumnSchema*   >> |yii/base/Object|
=====================

DESCRIPTION
------------------------------------------------------------------------------




PROPERTY DETAILS
------------------------------------------------------------------------------

$name					*yii/db/ColumnSchema::$name*
 (string) Name of this column (without quotes).

$allowNull				*yii/db/ColumnSchema::$allowNull*
 (boolean) Whether this column can be null.

$type					*yii/db/ColumnSchema::$type*
 (string) Abstract type of this column. Possible abstract types include:
 string, text, boolean, smallint, integer, bigint, float, decimal, datetime,
 timestamp, time, date, binary, and money.

$phpType				*yii/db/ColumnSchema::$phpType*
 (string) The PHP type of this column. Possible PHP types include: string,
 boolean, integer, double.

$dbType					*yii/db/ColumnSchema::$dbType*
 (string) The DB type of this column. Possible DB types vary according to the
 type of DBMS.

$defaultValue				*yii/db/ColumnSchema::$defaultValue*
 (mixed) Default value of this column

$enumValues				*yii/db/ColumnSchema::$enumValues*
 (array) Enumerable values. This is set only if the column is declared to be
 an enumerable type.

$size					*yii/db/ColumnSchema::$size*
 (integer) Display size of the column.

$precision				*yii/db/ColumnSchema::$precision*
 (integer) Precision of the column data, if it is numeric.

$scale					*yii/db/ColumnSchema::$scale*
 (integer) Scale of the column data, if it is numeric.

$isPrimaryKey				*yii/db/ColumnSchema::$isPrimaryKey*
 (boolean) Whether this column is a primary key

$autoIncrement				*yii/db/ColumnSchema::$autoIncrement*
 (boolean) Whether this column is auto-incremental

$unsigned				*yii/db/ColumnSchema::$unsigned*
 (boolean) Whether this column is unsigned. This is only meaningful when
 'type' is 'smallint', 'integer' or 'bigint'.

$comment				*yii/db/ColumnSchema::$comment*
 (string) Comment of this column. Not all DBMS support this.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/db/ColumnSchema::className*				public
 See |yii/base/Object::className|


*yii/db/ColumnSchema::__construct*			public
 See |yii/base/Object::__construct|


*yii/db/ColumnSchema::init*				public
 See |yii/base/Object::init|


*yii/db/ColumnSchema::__get*				public
 See |yii/base/Object::__get|


*yii/db/ColumnSchema::__set*				public
 See |yii/base/Object::__set|


*yii/db/ColumnSchema::__isset*				public
 See |yii/base/Object::__isset|


*yii/db/ColumnSchema::__unset*				public
 See |yii/base/Object::__unset|


*yii/db/ColumnSchema::__call*				public
 See |yii/base/Object::__call|


*yii/db/ColumnSchema::hasProperty*			public
 See |yii/base/Object::hasProperty|


*yii/db/ColumnSchema::canGetProperty*			public
 See |yii/base/Object::canGetProperty|


*yii/db/ColumnSchema::canSetProperty*			public
 See |yii/base/Object::canSetProperty|


*yii/db/ColumnSchema::hasMethod*				public
 See |yii/base/Object::hasMethod|


*yii/db/ColumnSchema::typecast*				public
>
 typecast($value)
<
(mixed) Converted value

 If the value is null or an 'Expression', it will not be converted.
    [$value] (mixed) Input value



 vim:tw=78:ts=8:ft=help:norl:
