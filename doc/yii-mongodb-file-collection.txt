
*yii/mongodb/file/Collection*   >> |yii/mongodb/Collection|
=============================

DESCRIPTION
------------------------------------------------------------------------------

 A file collection object is usually created by calling
 'Database::getFileCollection()' or 'Connection::getFileCollection()'.

 File collection inherits all interface from regular '\yii\mongo\Collection',
 adding methods to store files.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/mongodb/Collection::$name|
 |yii/mongodb/Collection::$fullName|


$database				*yii/mongodb/file/Collection::$database*

 (\yii\mongodb\Database) MongoDB database instance.

$prefix					*yii/mongodb/file/Collection::$prefix*

 (string) Prefix of this file collection.

$chunkCollection			*yii/mongodb/file/Collection::$chunkCollection*

 (\yii\mongodb\Collection) Mongo collection instance.

$fileCollection				*yii/mongodb/file/Collection::$fileCollection*

 (\yii\mongodb\Collection) Mongo collection instance.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/mongodb/Collection::getFullName|
 |yii/mongodb/Collection::listIndexes|
 |yii/mongodb/Collection::createIndexes|
 |yii/mongodb/Collection::dropIndexes|
 |yii/mongodb/Collection::createIndex|
 |yii/mongodb/Collection::dropIndex|
 |yii/mongodb/Collection::dropAllIndexes|
 |yii/mongodb/Collection::findOne|
 |yii/mongodb/Collection::findAndModify|
 |yii/mongodb/Collection::insert|
 |yii/mongodb/Collection::batchInsert|
 |yii/mongodb/Collection::update|
 |yii/mongodb/Collection::save|
 |yii/mongodb/Collection::count|
 |yii/mongodb/Collection::distinct|
 |yii/mongodb/Collection::aggregate|
 |yii/mongodb/Collection::group|
 |yii/mongodb/Collection::mapReduce|


*yii/mongodb/file/Collection::drop*			public
>
 drop()
<
return (bool) Whether the operation successful.

 Drops this collection.








*yii/mongodb/file/Collection::find*			public
>
 find($condition='[]', $fields='[]', $options='[]')
<
return (\yii\mongodb\file\Cursor) Cursor for the search results

 Returns a cursor for the search results.



 In order to perform "find" queries use 'Query' class.



    [$condition] (array) Query condition
    [$fields] (array) Fields to be selected
    [$options] (array) Query options (available since 2.1).


*yii/mongodb/file/Collection::remove*			public
>
 remove($condition='[]', $options='[]')
<
return (int|bool) Number of updated documents or whether operation was successful.

 Removes data from the collection.







    [$condition] (array) Description of records to remove.
    [$options] (array) List of options in format: optionName => optionValue.


*yii/mongodb/file/Collection::getPrefix*			public
>
 getPrefix()
<
return (string) Prefix of this file collection.



*yii/mongodb/file/Collection::setPrefix*			public
>
 setPrefix($prefix)
<
return (void)

    [$prefix] (string) Prefix of this file collection.


*yii/mongodb/file/Collection::createUpload*		public
>
 createUpload($options='[]')
<
return (\yii\mongodb\file\Upload) File upload instance.

 Creates upload command.

    [$options] (array) Upload options.


*yii/mongodb/file/Collection::createDownload*		public
>
 createDownload($document)
<
return (\yii\mongodb\file\Download) File download instance.

 Creates download command.

    [$document] (array|\MongoDB\BSON\ObjectID) File document ot be downloaded.


*yii/mongodb/file/Collection::getChunkCollection*		public
>
 getChunkCollection($refresh='false')
<
return (\yii\mongodb\Collection) Mongo collection instance.

 Returns the MongoDB collection for the file chunks.

    [$refresh] (bool) Whether to reload the collection instance even if it is
    found in the cache.


*yii/mongodb/file/Collection::getFileCollection*		public
>
 getFileCollection($refresh='false')
<
return (\yii\mongodb\Collection) Mongo collection instance.

 Returns the MongoDB collection for the files.

    [$refresh] (bool) Whether to reload the collection instance even if it is
    found in the cache.


*yii/mongodb/file/Collection::insertFile*			public
>
 insertFile($filename, $metadata='[]', $options='[]')
<
return (mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Creates new file in GridFS collection from given local filesystem file.

 Additional attributes can be added file document using $metadata.

    [$filename] (string) Name of the file to store.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::insertFileContent*		public
>
 insertFileContent($bytes, $metadata='[]', $options='[]')
<
return (mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Creates new file in GridFS collection with specified content.

 Additional attributes can be added file document using $metadata.

    [$bytes] (string) String of bytes to store.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::insertUploads*		public
>
 insertUploads($name, $metadata='[]', $options='[]')
<
return (mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Creates new file in GridFS collection from uploaded file.

 Additional attributes can be added file document using $metadata.

    [$name] (string) Name of the uploaded file to store. This should
    correspond to the file field's name attribute in the HTML form.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::get*			public
>
 get($id)
<
return (\yii\mongodb\file\Download|null) Found file, or null if file does not exist

 Retrieves the file with given _id.

    [$id] (mixed) _id of the file to find.


*yii/mongodb/file/Collection::delete*			public
>
 delete($id)
<
return (bool) Whether the operation was successful.

 Deletes the file with given _id.

    [$id] (mixed) _id of the file to find.


*yii/mongodb/file/Collection::ensureIndexes*		public
>
 ensureIndexes($force='false')
<
return ($this) Self reference.

 Makes sure that indexes, which are crucial for the file processing, exist at
 this collection and 'chunkCollection'.

 The check result is cached per collection instance.

    [$force] (bool) Whether to ignore internal collection instance cache.



 vim:tw=78:ts=8:ft=help:norl:
