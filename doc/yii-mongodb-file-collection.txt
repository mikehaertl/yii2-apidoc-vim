
*yii/mongodb/file/Collection*   >> |yii/mongodb/Collection|
=============================

DESCRIPTION
------------------------------------------------------------------------------

 A file collection object is usually created by calling
 'Database::getFileCollection()' or 'Connection::getFileCollection()'.

 File collection inherits all interface from regular '\yii\mongo\Collection',
 adding methods to store files.


PROPERTY DETAILS
------------------------------------------------------------------------------

$mongoCollection			*yii/mongodb/file/Collection::$mongoCollection*
 (\MongoGridFS) Mongo GridFS collection instance.

$name					*yii/mongodb/file/Collection::$name*
 (string) Name of this collection.

$fullName				*yii/mongodb/file/Collection::$fullName*
 (string) Full name of this collection, including database name.

$lastError				*yii/mongodb/file/Collection::$lastError*
 (array) Last error information.

$chunkCollection			*yii/mongodb/file/Collection::$chunkCollection*
 (\yii\mongodb\Collection) Mongo collection instance.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/mongodb/file/Collection::className*			public
 See |yii/base/Object::className|


*yii/mongodb/file/Collection::__construct*		public
 See |yii/base/Object::__construct|


*yii/mongodb/file/Collection::init*			public
 See |yii/base/Object::init|


*yii/mongodb/file/Collection::__get*			public
 See |yii/base/Object::__get|


*yii/mongodb/file/Collection::__set*			public
 See |yii/base/Object::__set|


*yii/mongodb/file/Collection::__isset*			public
 See |yii/base/Object::__isset|


*yii/mongodb/file/Collection::__unset*			public
 See |yii/base/Object::__unset|


*yii/mongodb/file/Collection::__call*			public
 See |yii/base/Object::__call|


*yii/mongodb/file/Collection::hasProperty*		public
 See |yii/base/Object::hasProperty|


*yii/mongodb/file/Collection::canGetProperty*		public
 See |yii/base/Object::canGetProperty|


*yii/mongodb/file/Collection::canSetProperty*		public
 See |yii/base/Object::canSetProperty|


*yii/mongodb/file/Collection::hasMethod*			public
 See |yii/base/Object::hasMethod|


*yii/mongodb/file/Collection::getName*			public
 See |yii/mongodb/Collection::getName|


*yii/mongodb/file/Collection::getFullName*		public
 See |yii/mongodb/Collection::getFullName|


*yii/mongodb/file/Collection::getLastError*		public
 See |yii/mongodb/Collection::getLastError|


*yii/mongodb/file/Collection::composeLogToken*		protected
 See |yii/mongodb/Collection::composeLogToken|


*yii/mongodb/file/Collection::encodeLogData*		protected
 See |yii/mongodb/Collection::encodeLogData|


*yii/mongodb/file/Collection::processLogData*		protected
 See |yii/mongodb/Collection::processLogData|


*yii/mongodb/file/Collection::drop*			public
 See |yii/mongodb/Collection::drop|


*yii/mongodb/file/Collection::createIndex*		public
 See |yii/mongodb/Collection::createIndex|


*yii/mongodb/file/Collection::dropIndex*			public
 See |yii/mongodb/Collection::dropIndex|


*yii/mongodb/file/Collection::normalizeIndexKeys*		protected
 See |yii/mongodb/Collection::normalizeIndexKeys|


*yii/mongodb/file/Collection::dropAllIndexes*		public
 See |yii/mongodb/Collection::dropAllIndexes|


*yii/mongodb/file/Collection::find*			public
 See |yii/mongodb/Collection::find|


*yii/mongodb/file/Collection::findOne*			public
 See |yii/mongodb/Collection::findOne|


*yii/mongodb/file/Collection::findAndModify*		public
 See |yii/mongodb/Collection::findAndModify|


*yii/mongodb/file/Collection::insert*			public
 See |yii/mongodb/Collection::insert|


*yii/mongodb/file/Collection::batchInsert*		public
 See |yii/mongodb/Collection::batchInsert|


*yii/mongodb/file/Collection::update*			public
 See |yii/mongodb/Collection::update|


*yii/mongodb/file/Collection::save*			public
 See |yii/mongodb/Collection::save|


*yii/mongodb/file/Collection::remove*			public
>
 remove($condition='[]', $options='[]')
<
(integer|boolean) Number of updated documents or whether operation was
successful.

    [$condition] (array) Description of records to remove.
    [$options] (array) List of options in format: optionName => optionValue.


*yii/mongodb/file/Collection::distinct*			public
 See |yii/mongodb/Collection::distinct|


*yii/mongodb/file/Collection::aggregate*			public
 See |yii/mongodb/Collection::aggregate|


*yii/mongodb/file/Collection::group*			public
 See |yii/mongodb/Collection::group|


*yii/mongodb/file/Collection::mapReduce*			public
 See |yii/mongodb/Collection::mapReduce|


*yii/mongodb/file/Collection::fullTextSearch*		public
 See |yii/mongodb/Collection::fullTextSearch|


*yii/mongodb/file/Collection::tryResultError*		protected
 See |yii/mongodb/Collection::tryResultError|


*yii/mongodb/file/Collection::tryLastError*		protected
 See |yii/mongodb/Collection::tryLastError|


*yii/mongodb/file/Collection::normalizeConditionKeyword*	protected
 See |yii/mongodb/Collection::normalizeConditionKeyword|


*yii/mongodb/file/Collection::ensureMongoId*		protected
 See |yii/mongodb/Collection::ensureMongoId|


*yii/mongodb/file/Collection::buildCondition*		public
 See |yii/mongodb/Collection::buildCondition|


*yii/mongodb/file/Collection::buildHashCondition*		public
 See |yii/mongodb/Collection::buildHashCondition|


*yii/mongodb/file/Collection::buildAndCondition*		public
 See |yii/mongodb/Collection::buildAndCondition|


*yii/mongodb/file/Collection::buildOrCondition*		public
 See |yii/mongodb/Collection::buildOrCondition|


*yii/mongodb/file/Collection::buildBetweenCondition*	public
 See |yii/mongodb/Collection::buildBetweenCondition|


*yii/mongodb/file/Collection::buildInCondition*		public
 See |yii/mongodb/Collection::buildInCondition|


*yii/mongodb/file/Collection::buildRegexCondition*	public
 See |yii/mongodb/Collection::buildRegexCondition|


*yii/mongodb/file/Collection::buildLikeCondition*		public
 See |yii/mongodb/Collection::buildLikeCondition|


*yii/mongodb/file/Collection::getChunkCollection*		public
>
 getChunkCollection($refresh='false')
<
(\yii\mongodb\Collection) Mongo collection instance.

    [$refresh] (boolean) Whether to reload the collection instance even if it
    is found in the cache.


*yii/mongodb/file/Collection::insertFile*			public
>
 insertFile($filename, $metadata='[]', $options='[]')
<
(mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Additional attributes can be added file document using $metadata.
    [$filename] (string) Name of the file to store.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::insertFileContent*		public
>
 insertFileContent($bytes, $metadata='[]', $options='[]')
<
(mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Additional attributes can be added file document using $metadata.
    [$bytes] (string) String of bytes to store.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::insertUploads*		public
>
 insertUploads($name, $metadata='[]')
<
(mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Additional attributes can be added file document using $metadata.
    [$name] (string) Name of the uploaded file to store. This should
    correspond to the file field's name attribute in the HTML form.
    [$metadata] (array) Other metadata fields to include in the file document.


*yii/mongodb/file/Collection::get*			public
>
 get($id)
<
(\MongoGridFSFile|null) Found file, or null if file does not exist

    [$id] (mixed) _id of the file to find.


*yii/mongodb/file/Collection::delete*			public
>
 delete($id)
<
(boolean) Whether the operation was successful.

    [$id] (mixed) _id of the file to find.



 vim:tw=78:ts=8:ft=help:norl:
