
*yii/mongodb/file/Collection*   >> |yii/mongodb/Collection|
=============================

DESCRIPTION
------------------------------------------------------------------------------

 A file collection object is usually created by calling
 'Database::getFileCollection()' or 'Connection::getFileCollection()'.

 File collection inherits all interface from regular '\yii\mongo\Collection',
 adding methods to store files.


PROPERTY DETAILS
------------------------------------------------------------------------------

$database				*yii/mongodb/file/Collection::$database*

 (\yii\mongodb\Database) MongoDB database instance.

$name					*yii/mongodb/file/Collection::$name*

 See |yii/mongodb/Collection::$name|



METHOD DETAILS
------------------------------------------------------------------------------


*yii/mongodb/file/Collection::className*			public

 See |yii/base/BaseObject::className|


*yii/mongodb/file/Collection::__construct*		public

 See |yii/base/BaseObject::__construct|


*yii/mongodb/file/Collection::init*			public

 See |yii/base/BaseObject::init|


*yii/mongodb/file/Collection::__get*			public

 See |yii/base/BaseObject::__get|


*yii/mongodb/file/Collection::__set*			public

 See |yii/base/BaseObject::__set|


*yii/mongodb/file/Collection::__isset*			public

 See |yii/base/BaseObject::__isset|


*yii/mongodb/file/Collection::__unset*			public

 See |yii/base/BaseObject::__unset|


*yii/mongodb/file/Collection::__call*			public

 See |yii/base/BaseObject::__call|


*yii/mongodb/file/Collection::hasProperty*		public

 See |yii/base/BaseObject::hasProperty|


*yii/mongodb/file/Collection::canGetProperty*		public

 See |yii/base/BaseObject::canGetProperty|


*yii/mongodb/file/Collection::canSetProperty*		public

 See |yii/base/BaseObject::canSetProperty|


*yii/mongodb/file/Collection::hasMethod*			public

 See |yii/base/BaseObject::hasMethod|


*yii/mongodb/file/Collection::getFullName*		public

 See |yii/mongodb/Collection::getFullName|


*yii/mongodb/file/Collection::drop*			public
>
 drop()
<
return (void)

 {@inheritdoc}


*yii/mongodb/file/Collection::listIndexes*		public

 See |yii/mongodb/Collection::listIndexes|


*yii/mongodb/file/Collection::createIndexes*		public

 See |yii/mongodb/Collection::createIndexes|


*yii/mongodb/file/Collection::dropIndexes*		public

 See |yii/mongodb/Collection::dropIndexes|


*yii/mongodb/file/Collection::createIndex*		public

 See |yii/mongodb/Collection::createIndex|


*yii/mongodb/file/Collection::dropIndex*			public

 See |yii/mongodb/Collection::dropIndex|


*yii/mongodb/file/Collection::dropAllIndexes*		public

 See |yii/mongodb/Collection::dropAllIndexes|


*yii/mongodb/file/Collection::find*			public
>
 find($condition='[]', $fields='[]', $options='[]')
<
return (\yii\mongodb\file\Cursor) Cursor for the search results

 {@inheritdoc}

    [$condition] () 
    [$fields] () 
    [$options] () 


*yii/mongodb/file/Collection::findOne*			public

 See |yii/mongodb/Collection::findOne|


*yii/mongodb/file/Collection::findAndModify*		public

 See |yii/mongodb/Collection::findAndModify|


*yii/mongodb/file/Collection::insert*			public

 See |yii/mongodb/Collection::insert|


*yii/mongodb/file/Collection::batchInsert*		public

 See |yii/mongodb/Collection::batchInsert|


*yii/mongodb/file/Collection::update*			public

 See |yii/mongodb/Collection::update|


*yii/mongodb/file/Collection::save*			public

 See |yii/mongodb/Collection::save|


*yii/mongodb/file/Collection::remove*			public
>
 remove($condition='[]', $options='[]')
<
return (void)

 {@inheritdoc}

    [$condition] () 
    [$options] () 


*yii/mongodb/file/Collection::count*			public

 See |yii/mongodb/Collection::count|


*yii/mongodb/file/Collection::distinct*			public

 See |yii/mongodb/Collection::distinct|


*yii/mongodb/file/Collection::aggregate*			public

 See |yii/mongodb/Collection::aggregate|


*yii/mongodb/file/Collection::group*			public

 See |yii/mongodb/Collection::group|


*yii/mongodb/file/Collection::mapReduce*			public

 See |yii/mongodb/Collection::mapReduce|


*yii/mongodb/file/Collection::getPrefix*			public
>
 getPrefix()
<
return (string) Prefix of this file collection.



*yii/mongodb/file/Collection::setPrefix*			public
>
 setPrefix($prefix)
<
return (void)

    [$prefix] (string) Prefix of this file collection.


*yii/mongodb/file/Collection::createUpload*		public
>
 createUpload($options='[]')
<
return (\yii\mongodb\file\Upload) File upload instance.

 Creates upload command.

    [$options] (array) Upload options.


*yii/mongodb/file/Collection::createDownload*		public
>
 createDownload($document)
<
return (\yii\mongodb\file\Download) File download instance.

 Creates download command.

    [$document] (array|\MongoDB\BSON\ObjectID) File document ot be downloaded.


*yii/mongodb/file/Collection::getChunkCollection*		public
>
 getChunkCollection($refresh='false')
<
return (\yii\mongodb\Collection) Mongo collection instance.

 Returns the MongoDB collection for the file chunks.

    [$refresh] (bool) Whether to reload the collection instance even if it is
    found in the cache.


*yii/mongodb/file/Collection::getFileCollection*		public
>
 getFileCollection($refresh='false')
<
return (\yii\mongodb\Collection) Mongo collection instance.

 Returns the MongoDB collection for the files.

    [$refresh] (bool) Whether to reload the collection instance even if it is
    found in the cache.


*yii/mongodb/file/Collection::insertFile*			public
>
 insertFile($filename, $metadata='[]', $options='[]')
<
return (mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Creates new file in GridFS collection from given local filesystem file.

 Additional attributes can be added file document using $metadata.

    [$filename] (string) Name of the file to store.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::insertFileContent*		public
>
 insertFileContent($bytes, $metadata='[]', $options='[]')
<
return (mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Creates new file in GridFS collection with specified content.

 Additional attributes can be added file document using $metadata.

    [$bytes] (string) String of bytes to store.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::insertUploads*		public
>
 insertUploads($name, $metadata='[]', $options='[]')
<
return (mixed) The "_id" of the saved file document. This will be a generated
'\MongoId' unless an "_id" was explicitly specified in the metadata.

 Creates new file in GridFS collection from uploaded file.

 Additional attributes can be added file document using $metadata.

    [$name] (string) Name of the uploaded file to store. This should
    correspond to the file field's name attribute in the HTML form.
    [$metadata] (array) Other metadata fields to include in the file document.
    [$options] (array) List of options in format: optionName => optionValue


*yii/mongodb/file/Collection::get*			public
>
 get($id)
<
return (\yii\mongodb\file\Download|null) Found file, or null if file does not exist

 Retrieves the file with given _id.

    [$id] (mixed) _id of the file to find.


*yii/mongodb/file/Collection::delete*			public
>
 delete($id)
<
return (bool) Whether the operation was successful.

 Deletes the file with given _id.

    [$id] (mixed) _id of the file to find.


*yii/mongodb/file/Collection::ensureIndexes*		public
>
 ensureIndexes($force='false')
<
return ($this) Self reference.

 Makes sure that indexes, which are crucial for the file processing, exist at
 this collection and 'chunkCollection'.

 The check result is cached per collection instance.

    [$force] (bool) Whether to ignore internal collection instance cache.



 vim:tw=78:ts=8:ft=help:norl:
