
*yii/queue/sync/Queue*   >> |yii/queue/Queue|
======================


PROPERTY DETAILS
------------------------------------------------------------------------------

$strictJobType				*yii/queue/sync/Queue::$strictJobType*

 See |yii/queue/Queue::$strictJobType|

$serializer				*yii/queue/sync/Queue::$serializer*

 See |yii/queue/Queue::$serializer|

$ttr					*yii/queue/sync/Queue::$ttr*

 See |yii/queue/Queue::$ttr|

$attempts				*yii/queue/sync/Queue::$attempts*

 See |yii/queue/Queue::$attempts|

$handle					*yii/queue/sync/Queue::$handle*

 (bool)



METHOD DETAILS
------------------------------------------------------------------------------


*yii/queue/sync/Queue::className*				public

 See |yii/base/BaseObject::className|


*yii/queue/sync/Queue::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/queue/sync/Queue::init*				public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/queue/sync/Queue::__get*				public

 See |yii/base/Component::__get|


*yii/queue/sync/Queue::__set*				public

 See |yii/base/Component::__set|


*yii/queue/sync/Queue::__isset*				public

 See |yii/base/Component::__isset|


*yii/queue/sync/Queue::__unset*				public

 See |yii/base/Component::__unset|


*yii/queue/sync/Queue::__call*				public

 See |yii/base/Component::__call|


*yii/queue/sync/Queue::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/queue/sync/Queue::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/queue/sync/Queue::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/queue/sync/Queue::hasMethod*				public

 See |yii/base/Component::hasMethod|


*yii/queue/sync/Queue::__clone*				public

 See |yii/base/Component::__clone|


*yii/queue/sync/Queue::behaviors*				public

 See |yii/base/Component::behaviors|


*yii/queue/sync/Queue::hasEventHandlers*			public

 See |yii/base/Component::hasEventHandlers|


*yii/queue/sync/Queue::on*				public

 See |yii/base/Component::on|


*yii/queue/sync/Queue::off*				public

 See |yii/base/Component::off|


*yii/queue/sync/Queue::trigger*				public

 See |yii/base/Component::trigger|


*yii/queue/sync/Queue::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/queue/sync/Queue::getBehaviors*			public

 See |yii/base/Component::getBehaviors|


*yii/queue/sync/Queue::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/queue/sync/Queue::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/queue/sync/Queue::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/queue/sync/Queue::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/queue/sync/Queue::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/queue/sync/Queue::ttr*				public

 See |yii/queue/Queue::ttr|


*yii/queue/sync/Queue::delay*				public

 See |yii/queue/Queue::delay|


*yii/queue/sync/Queue::priority*				public

 See |yii/queue/Queue::priority|


*yii/queue/sync/Queue::push*				public

 See |yii/queue/Queue::push|


*yii/queue/sync/Queue::pushMessage*			protected
>
 pushMessage($message, $ttr, $delay, $priority)
<
return (string) Id of a job message







    [$message] (string) 
    [$ttr] (int) Time to reserve in seconds
    [$delay] (int) 
    [$priority] (mixed) 


*yii/queue/sync/Queue::getWorkerPid*			public

 See |yii/queue/Queue::getWorkerPid|


*yii/queue/sync/Queue::handleMessage*			protected

 See |yii/queue/Queue::handleMessage|


*yii/queue/sync/Queue::handleError*			public

 See |yii/queue/Queue::handleError|


*yii/queue/sync/Queue::isWaiting*				public

 See |yii/queue/Queue::isWaiting|


*yii/queue/sync/Queue::isReserved*			public

 See |yii/queue/Queue::isReserved|


*yii/queue/sync/Queue::isDone*				public

 See |yii/queue/Queue::isDone|


*yii/queue/sync/Queue::status*				public
>
 status($id)
<
return (int) Status code







    [$id] (string) Of a job message


*yii/queue/sync/Queue::run*				public
>
 run()
<
return (void)

 Runs all jobs from queue.



 vim:tw=78:ts=8:ft=help:norl:
