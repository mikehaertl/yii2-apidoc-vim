
*yii/apidoc/models/ClassDoc*   >> |yii/apidoc/models/TypeDoc|
============================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/apidoc/models/BaseDoc::$phpDocContext|
 |yii/apidoc/models/BaseDoc::$name|
 |yii/apidoc/models/BaseDoc::$sourceFile|
 |yii/apidoc/models/BaseDoc::$startLine|
 |yii/apidoc/models/BaseDoc::$endLine|
 |yii/apidoc/models/BaseDoc::$shortDescription|
 |yii/apidoc/models/BaseDoc::$description|
 |yii/apidoc/models/BaseDoc::$since|
 |yii/apidoc/models/BaseDoc::$deprecatedSince|
 |yii/apidoc/models/BaseDoc::$deprecatedReason|
 |yii/apidoc/models/BaseDoc::$tags|
 |yii/apidoc/models/TypeDoc::$authors|
 |yii/apidoc/models/TypeDoc::$methods|
 |yii/apidoc/models/TypeDoc::$properties|
 |yii/apidoc/models/TypeDoc::$namespace|


$parentClass				*yii/apidoc/models/ClassDoc::$parentClass*

 (string)

$isAbstract				*yii/apidoc/models/ClassDoc::$isAbstract*

 (bool)

$isFinal				*yii/apidoc/models/ClassDoc::$isFinal*

 (bool)

$interfaces				*yii/apidoc/models/ClassDoc::$interfaces*

 (string[])

$traits					*yii/apidoc/models/ClassDoc::$traits*

 (string[])

$subclasses				*yii/apidoc/models/ClassDoc::$subclasses*

 (string[])

$events					*yii/apidoc/models/ClassDoc::$events*

 (\yii\apidoc\models\EventDoc[])

$constants				*yii/apidoc/models/ClassDoc::$constants*

 (\yii\apidoc\models\ConstDoc[])



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/apidoc/models/BaseDoc::hasTag|
 |yii/apidoc/models/BaseDoc::removeTag|
 |yii/apidoc/models/BaseDoc::getFirstTag|
 |yii/apidoc/models/BaseDoc::extractFirstSentence|
 |yii/apidoc/models/BaseDoc::mbUcFirst|
 |yii/apidoc/models/TypeDoc::getNativeMethods|
 |yii/apidoc/models/TypeDoc::getPublicMethods|
 |yii/apidoc/models/TypeDoc::getProtectedMethods|
 |yii/apidoc/models/TypeDoc::getNativeProperties|
 |yii/apidoc/models/TypeDoc::getPublicProperties|
 |yii/apidoc/models/TypeDoc::getProtectedProperties|


*yii/apidoc/models/ClassDoc::__construct*			public
>
 __construct($reflector='null', $context='null', $config='[]')
<
return (void)







    [$reflector] (\phpDocumentor\Reflection\InterfaceReflector) 
    [$context] (\yii\apidoc\models\Context) 
    [$config] (array) 


*yii/apidoc/models/ClassDoc::findSubject*			public
>
 findSubject($subjectName)
<
return (null|\yii\apidoc\models\MethodDoc|\yii\apidoc\models\PropertyDoc) 

 Finds subject (method or property) by name



 If there is a property with the same as a method, the method will be returned
 if the name is not stated explicitly by prefixing with '$'.

 Example for method 'attributes()' and property '$attributes' which both may
 exist:


   - '$subjectName = '$attributes'' finds a property or nothing. 
   - '$subjectName = 'attributes()'' finds a method or nothing. 
   - '$subjectName = 'attributes'' finds the method if it exists, if
   not it will find the property.



    [$subjectName] () 


*yii/apidoc/models/ClassDoc::getNativeEvents*		public
>
 getNativeEvents()
<
return (\yii\apidoc\models\EventDoc[]) 




 vim:tw=78:ts=8:ft=help:norl:
