
*yii/debug/panels/UserPanel*   >> |yii/debug/Panel|
============================


PROPERTY DETAILS
------------------------------------------------------------------------------

$id					*yii/debug/panels/UserPanel::$id*

 See |yii/debug/Panel::$id|

$tag					*yii/debug/panels/UserPanel::$tag*

 See |yii/debug/Panel::$tag|

$module					*yii/debug/panels/UserPanel::$module*

 See |yii/debug/Panel::$module|

$data					*yii/debug/panels/UserPanel::$data*

 See |yii/debug/Panel::$data|

$actions				*yii/debug/panels/UserPanel::$actions*

 See |yii/debug/Panel::$actions|

$error					*yii/debug/panels/UserPanel::$error*

 See |yii/debug/Panel::$error|

$ruleUserSwitch				*yii/debug/panels/UserPanel::$ruleUserSwitch*

 (array) The rule which defines who allowed to switch user identity. Access
 Control Filter single rule. Ignore: actions, controllers, verbs. Settable:
 allow, roles, ips, matchCallback, denyCallback. By default deny for everyone.
 Recommendation: can allow for administrator or developer (if implement) role:
 ['allow' => true, 'roles' => ['admin''

$userSwitch				*yii/debug/panels/UserPanel::$userSwitch*

 (\yii\debug\models\UserSwitch) Object of switching users

$filterModel				*yii/debug/panels/UserPanel::$filterModel*

 (\yii\base\Model|\yii\debug\models\search\UserSearchInterface) Implements of
 User model with search method.

$filterColumns				*yii/debug/panels/UserPanel::$filterColumns*

 (array) Allowed columns for GridView.

$userComponent				*yii/debug/panels/UserPanel::$userComponent*

 (string|\yii\web\User) ID of the user component or a user object



METHOD DETAILS
------------------------------------------------------------------------------


*yii/debug/panels/UserPanel::className*			public

 See |yii/base/BaseObject::className|


*yii/debug/panels/UserPanel::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/debug/panels/UserPanel::init*			public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/debug/panels/UserPanel::__get*			public

 See |yii/base/Component::__get|


*yii/debug/panels/UserPanel::__set*			public

 See |yii/base/Component::__set|


*yii/debug/panels/UserPanel::__isset*			public

 See |yii/base/Component::__isset|


*yii/debug/panels/UserPanel::__unset*			public

 See |yii/base/Component::__unset|


*yii/debug/panels/UserPanel::__call*			public

 See |yii/base/Component::__call|


*yii/debug/panels/UserPanel::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/debug/panels/UserPanel::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/debug/panels/UserPanel::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/debug/panels/UserPanel::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/debug/panels/UserPanel::__clone*			public

 See |yii/base/Component::__clone|


*yii/debug/panels/UserPanel::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/debug/panels/UserPanel::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/debug/panels/UserPanel::on*				public

 See |yii/base/Component::on|


*yii/debug/panels/UserPanel::off*				public

 See |yii/base/Component::off|


*yii/debug/panels/UserPanel::trigger*			public

 See |yii/base/Component::trigger|


*yii/debug/panels/UserPanel::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/debug/panels/UserPanel::getBehaviors*		public

 See |yii/base/Component::getBehaviors|


*yii/debug/panels/UserPanel::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/debug/panels/UserPanel::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/debug/panels/UserPanel::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/debug/panels/UserPanel::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/debug/panels/UserPanel::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/debug/panels/UserPanel::getName*			public
>
 getName()
<
return (string) Name of the panel








*yii/debug/panels/UserPanel::getSummary*			public
>
 getSummary()
<
return (string) Content that is displayed at debug toolbar








*yii/debug/panels/UserPanel::getDetail*			public
>
 getDetail()
<
return (string) Content that is displayed in debugger detail view








*yii/debug/panels/UserPanel::save*			public
>
 save()
<
return (mixed) Data to be saved

 Saves data to be later used in debugger detail view.



 This method is called on every page where debugger is enabled.




*yii/debug/panels/UserPanel::load*			public

 See |yii/debug/Panel::load|


*yii/debug/panels/UserPanel::getUrl*			public

 See |yii/debug/Panel::getUrl|


*yii/debug/panels/UserPanel::getTraceLine*		public

 See |yii/debug/Panel::getTraceLine|


*yii/debug/panels/UserPanel::setError*			public

 See |yii/debug/Panel::setError|


*yii/debug/panels/UserPanel::getError*			public

 See |yii/debug/Panel::getError|


*yii/debug/panels/UserPanel::hasError*			public

 See |yii/debug/Panel::hasError|


*yii/debug/panels/UserPanel::isEnabled*			public
>
 isEnabled()
<
return (bool) 

 Is the panel enabled?








*yii/debug/panels/UserPanel::getUser*			public
>
 getUser()
<
return (\yii\web\User|null) 



*yii/debug/panels/UserPanel::getUsersFilterModel*		public
>
 getUsersFilterModel()
<
return (\yii\base\Model|\yii\debug\models\search\UserSearchInterface) 

 Get model for GridView -> FilterModel


*yii/debug/panels/UserPanel::getUserDataProvider*		public
>
 getUserDataProvider()
<
return (\yii\data\DataProviderInterface) 

 Get model for GridView -> DataProvider


*yii/debug/panels/UserPanel::canSearchUsers*		public
>
 canSearchUsers()
<
return (bool) 

 Check is available search of users


*yii/debug/panels/UserPanel::canSwitchUser*		public
>
 canSwitchUser()
<
return (bool) 

 Check can main user switch identity.


*yii/debug/panels/UserPanel::dataToString*		protected
>
 dataToString($data)
<
return (string) 

 Converts mixed data to string

    [$data] (mixed) 


*yii/debug/panels/UserPanel::identityData*		protected
>
 identityData($identity)
<
return (array) 

 Returns the array that should be set on '\yii\widgets\DetailView::model'

    [$identity] (\yii\web\IdentityInterface) 



 vim:tw=78:ts=8:ft=help:norl:
