
*yii/gii/Module*   >> |yii/base/Module|
================

DESCRIPTION
------------------------------------------------------------------------------

 To use Gii, include it as a module in the application configuration like the
 following:

   return [
       'bootstrap' => ['gii'],
       'modules' => [
           'gii' => ['class' => 'yii\gii\Module'],
       ],
   ]

 Because Gii generates new code files on the server, you should only use it on
 your own development machine. To prevent other people from using this module,
 by default, Gii can only be accessed by localhost. You may configure its
 'allowedIPs' property if you want to make it accessible on other machines.

 With the above configuration, you will be able to access GiiModule in your
 browser using the URL 'http://localhost/path/to/index.php?r=gii'

 If your application enables '\yii\web\UrlManager::enablePrettyUrl|pretty
 URLs', you can then access Gii via URL:
 'http://localhost/path/to/index.php/gii'


PROPERTY DETAILS
------------------------------------------------------------------------------


$controllerNamespace			*yii/gii/Module::$controllerNamespace*

 ()

$allowedIPs				*yii/gii/Module::$allowedIPs*

 (array) The list of IPs that are allowed to access this module. Each array
 element represents a single IP filter which can be either an IP address or an
 address with wildcard (e.g. 192.168.0.*) to represent a network segment. The
 default value is '['127.0.0.1', '::1']', which means the module can only be
 accessed by localhost.

$generators				*yii/gii/Module::$generators*

 (array|\yii\gii\Generator[]) A list of generator configurations or instances.
 The array keys are the generator IDs (e.g. "crud"), and the array elements
 are the corresponding generator configurations or the instances.

 After the module is initialized, this property will become an array of
 generator instances which are created based on the configurations previously
 taken by this property.

 Newly assigned generators will be merged with the 'coreGenerators()|core
 ones', and the former takes precedence in case when they have the same
 generator ID.

$newFileMode				*yii/gii/Module::$newFileMode*

 (int) The permission to be set for newly generated code files. This value
 will be used by PHP chmod function. Defaults to 0666, meaning the file is
 read-writable by all users.

$newDirMode				*yii/gii/Module::$newDirMode*

 (int) The permission to be set for newly generated directories. This value
 will be used by PHP chmod function. Defaults to 0777, meaning the directory
 can be read, written and executed by all users.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/gii/Module::bootstrap*				public
>
 bootstrap($app)
<
return (void)

    [$app] () 


*yii/gii/Module::beforeAction*				public
>
 beforeAction($action)
<
return (void)

    [$action] () 


*yii/gii/Module::resetGlobalSettings*			protected
>
 resetGlobalSettings()
<
return (void)

 Resets potentially incompatible global settings done in app config.


*yii/gii/Module::checkAccess*				protected
>
 checkAccess()
<
return (int) Whether the module can be accessed by the current user



*yii/gii/Module::coreGenerators*				protected
>
 coreGenerators()
<
return (array) The list of the core code generator configurations.

 Returns the list of the core code generator configurations.


*yii/gii/Module::defaultVersion*				protected
>
 defaultVersion()
<
return (void)




 vim:tw=78:ts=8:ft=help:norl:
