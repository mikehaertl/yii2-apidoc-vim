
*yii/queue/Queue*   >> |yii/base/Component|
=================

SUBCLASSES
------------------------------------------------------------------------------

|yii/queue/sync/Queue|
|yii/queue/gearman/Queue|
|yii/queue/db/Queue|
|yii/queue/redis/Queue|
|yii/queue/file/Queue|
|yii/queue/sqs/Queue|
|yii/queue/amqp_interop/Queue|
|yii/queue/amqp/Queue|
|yii/queue/beanstalk/Queue|
|yii/queue/cli/Queue|


PROPERTY DETAILS
------------------------------------------------------------------------------


$strictJobType				*yii/queue/Queue::$strictJobType*

 (bool) Whether to enable strict job type control. Note that in order to
 enable type control, a pushing job must be 'JobInterface' instance.

$serializer				*yii/queue/Queue::$serializer*

 (\yii\queue\serializers\SerializerInterface|array)

$ttr					*yii/queue/Queue::$ttr*

 (int) Default time to reserve a job

$attempts				*yii/queue/Queue::$attempts*

 (int) Default attempt count



METHOD DETAILS
------------------------------------------------------------------------------


*yii/queue/Queue::init*					public
>
 init()
<
return (void)



*yii/queue/Queue::ttr*					public
>
 ttr($value)
<
return ($this) 

 Sets TTR for job execute.

    [$value] (int|mixed) 


*yii/queue/Queue::delay*					public
>
 delay($value)
<
return ($this) 

 Sets delay for later execute.

    [$value] (int|mixed) 


*yii/queue/Queue::priority*				public
>
 priority($value)
<
return ($this) 

 Sets job priority.

    [$value] (mixed) 


*yii/queue/Queue::push*					public
>
 push($job)
<
return (string|null) Id of a job message

 Pushes job into queue.

    [$job] (\yii\queue\JobInterface|mixed) 


*yii/queue/Queue::pushMessage*				protected
>
 pushMessage($message, $ttr, $delay, $priority)
<
return (string) Id of a job message

    [$message] (string) 
    [$ttr] (int) Time to reserve in seconds
    [$delay] (int) 
    [$priority] (mixed) 


*yii/queue/Queue::getWorkerPid*				public
>
 getWorkerPid()
<
return (void)

 Uses for CLI drivers and gets process ID of a worker.


*yii/queue/Queue::handleMessage*				protected
>
 handleMessage($id, $message, $ttr, $attempt)
<
return (bool) 

    [$id] (string) Of a job message
    [$message] (string) 
    [$ttr] (int) Time to reserve
    [$attempt] (int) Number


*yii/queue/Queue::handleError*				public
>
 handleError($id, $job, $ttr, $attempt, $error)
<
return (bool) 

    [$id] (string|null) 
    [$job] (\yii\queue\JobInterface) 
    [$ttr] (int) 
    [$attempt] (int) 
    [$error] (\Exception|\Throwable) 


*yii/queue/Queue::isWaiting*				public
>
 isWaiting($id)
<
return (bool) 

    [$id] (string) Of a job message


*yii/queue/Queue::isReserved*				public
>
 isReserved($id)
<
return (bool) 

    [$id] (string) Of a job message


*yii/queue/Queue::isDone*					public
>
 isDone($id)
<
return (bool) 

    [$id] (string) Of a job message


*yii/queue/Queue::status*					public
>
 status($id)
<
return (int) Status code

    [$id] (string) Of a job message



 vim:tw=78:ts=8:ft=help:norl:
