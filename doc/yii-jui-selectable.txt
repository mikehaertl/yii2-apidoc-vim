
*yii/jui/Selectable*   >> |yii/jui/Widget|
====================

DESCRIPTION
------------------------------------------------------------------------------

 For example:

   echo Selectable::widget([
       'items' => [
           'Item 1',
           [
               'content' => 'Item2',
           ],
           [
               'content' => 'Item3',
               'options' => [
                   'tag' => 'li',
               ],
           ],
       ],
       'options' => [
           'tag' => 'ul',
       ],
       'itemOptions' => [
           'tag' => 'li',
       ],
       'clientOptions' => [
           'tolerance' => 'fit',
       ],
   ]);

 Selectable in begin mode.

   Selectable::begin([
       'clientOptions' => [
           'filter' => 'my-selectable-item',
           'tolerance' => 'touch',
       ],
   ]);

 <ul>      <li class="my-selectable-item">Item 1</li>      <li
 class="my-selectable-item">Item 2</li>      <li
 class="no-selectable-item">Item 3</li>      <li
 class="my-selectable-item">Item 4</li> </ul> <div>      <div>          <div
 class="my-selectable-item">Another item</div>      </div> </div>

   Selectable::end();




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Widget::$counter|
 |yii/base/Widget::$autoIdPrefix|
 |yii/base/Widget::$stack|
 |yii/jui/Widget::$clientOptions|
 |yii/jui/Widget::$clientEvents|
 |yii/jui/Widget::$clientEventMap|


$options				*yii/jui/Selectable::$options*

 (array) The HTML attributes for the widget container tag. The following
 special options are recognized:


   - tag: string, defaults to "ul", the tag name of the container tag
   of this widget.

$mode					*yii/jui/Selectable::$mode*

 (string) The mode used to render the widget.

$items					*yii/jui/Selectable::$items*

 (array) List of selectable items. Each item can be a string representing the
 item content or an array of the following structure:

   [
       'content' => 'item content',
       // the HTML attributes of the item container tag. This will overwrite
 "itemOptions".
       'options' => [],
   ]



$itemOptions				*yii/jui/Selectable::$itemOptions*

 (array) List of HTML attributes for the item container tags. This will be
 overwritten by the "options" set in individual 'items'. The following special
 options are recognized:


   - tag: string, defaults to "li", the tag name of the item container
   tags.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Widget::end|
 |yii/base/Widget::widget|
 |yii/base/Widget::getId|
 |yii/base/Widget::setId|
 |yii/base/Widget::getView|
 |yii/base/Widget::setView|
 |yii/base/Widget::render|
 |yii/base/Widget::renderFile|
 |yii/base/Widget::getViewPath|
 |yii/base/Widget::beforeRun|
 |yii/base/Widget::afterRun|
 |yii/jui/Widget::registerClientOptions|
 |yii/jui/Widget::registerClientEvents|
 |yii/jui/Widget::registerWidget|


*yii/jui/Selectable::init*				public
>
 init()
<
return (void)

 Initializes the widget.


*yii/jui/Selectable::begin*				public
>
 begin($config='[]')
<
return (static) The newly created widget instance

 Begins a widget.

 This method creates an instance of the calling class setting the MODE_BEGIN
 mode. Any item between 'begin()' and 'end()' which match the filter
 attribute, will be selectable. It will apply the configuration to the created
 instance. A matching 'end()' call should be called later. As some widgets may
 use output buffering, the 'end()' call should be made in the same view to
 avoid breaking the nesting of output buffers.

    [$config] (array) Name-value pairs that will be used to initialize the
    object properties


*yii/jui/Selectable::run*					public
>
 run()
<
return (void)

 Renders the widget.


*yii/jui/Selectable::renderItems*				public
>
 renderItems()
<
return (string) The rendering result.

 Renders selectable items as specified on 'items'.



 vim:tw=78:ts=8:ft=help:norl:
