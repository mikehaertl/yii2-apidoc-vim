
*yii/grid/DataColumn*   >> |yii/grid/Column|
=====================

DESCRIPTION
------------------------------------------------------------------------------

 It is used to show data columns and allows 'enableSorting|sorting' and
 'filter|filtering' them.

 A simple data column definition refers to an attribute in the data model of
 the GridView's data provider. The name of the attribute is specified by
 'attribute'.

 By setting 'value' and 'label', the header and cell content can be
 customized.

 A data column differentiates between the 'getDataCellValue|data cell value'
 and the 'renderDataCellContent|data cell content'. The cell value is an
 un-formatted value that may be used for calculation, while the actual cell
 content is a 'format|formatted' version of that value which may contain HTML
 markup.

 For more details and usage information on DataColumn, see the [guide article
 on data widgets](guide:output-data-widgets).


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/grid/Column::$grid|
 |yii/grid/Column::$header|
 |yii/grid/Column::$footer|
 |yii/grid/Column::$content|
 |yii/grid/Column::$visible|
 |yii/grid/Column::$options|
 |yii/grid/Column::$headerOptions|
 |yii/grid/Column::$contentOptions|
 |yii/grid/Column::$footerOptions|
 |yii/grid/Column::$filterOptions|


$attribute				*yii/grid/DataColumn::$attribute*

 (string) The attribute name associated with this column. When neither
 'content' nor 'value' is specified, the value of the specified attribute will
 be retrieved from each data model and displayed.

 Also, if 'label' is not specified, the label associated with the attribute
 will be displayed.

$label					*yii/grid/DataColumn::$label*

 (string) Label to be displayed in the 'header|header cell' and also to be
 used as the sorting link label when sorting is enabled for this column. If it
 is not set and the models provided by the GridViews data provider are
 instances of '\yii\db\ActiveRecord', the label will be determined using
 '\yii\db\ActiveRecord::getAttributeLabel()'. Otherwise
 '\yii\helpers\Inflector::camel2words()' will be used to get a label.

$encodeLabel				*yii/grid/DataColumn::$encodeLabel*

 (bool) Whether the header label should be HTML-encoded.

$value					*yii/grid/DataColumn::$value*

 (string|\Closure) An anonymous function or a string that is used to determine
 the value to display in the current column.

 If this is an anonymous function, it will be called for each row and the
 return value will be used as the value to display for every data model. The
 signature of this function should be: 'function ($model, $key, $index,
 $column)'. Where '$model', '$key', and '$index' refer to the model, key and
 index of the row currently being rendered and '$column' is a reference to the
 'DataColumn' object.

 You may also set this property to a string representing the attribute name to
 be displayed in this column. This can be used when the attribute to be
 displayed is different from the 'attribute' that is used for sorting and
 filtering.

 If this is not set, '$model[$attribute]' will be used to obtain the value,
 where '$attribute' is the value of 'attribute'.

$format					*yii/grid/DataColumn::$format*

 (string|array|\Closure) In which format should the value of each data model
 be displayed as (e.g. '"raw"', '"text"', '"html"', '['date', 'php:Y-m-d']').
 Supported formats are determined by the 'GridView::formatter|formatter' used
 by the 'GridView'. Default format is "text" which will format the value as an
 HTML-encoded plain text when '\yii\i18n\Formatter' is used as the
 'GridView::$formatter|formatter' of the GridView.

$enableSorting				*yii/grid/DataColumn::$enableSorting*

 (bool) Whether to allow sorting by this column. If true and 'attribute' is
 found in the sort definition of 'GridView::dataProvider', then the header
 cell of this column will contain a link that may trigger the sorting when
 being clicked.

$sortLinkOptions			*yii/grid/DataColumn::$sortLinkOptions*

 (array) The HTML attributes for the link tag in the header cell generated by
 '\yii\data\Sort::link' when sorting is enabled for this column.

$filter					*yii/grid/DataColumn::$filter*

 (string|array|null|false) The HTML code representing a filter input (e.g. a
 text field, a dropdown list) that is used for this data column. This property
 is effective only when 'GridView::filterModel' is set.


   - If this property is not set, a text field will be generated as the
   filter input with attributes defined   with 'filterInputOptions'. See
 '\yii\helpers\BaseHtml::activeInput' for details on how an active   input tag
 is generated. 
   - If this property is an array, a dropdown list will be generated
   that uses this property value as   the list options. 
   - If you don't want a filter for this data column, set this value to
   be false.

$filterInputOptions			*yii/grid/DataColumn::$filterInputOptions*

 (array) The HTML attributes for the filter input fields. This property is
 used in combination with the 'filter' property. When 'filter' is not set or
 is an array, this property will be used to render the HTML attributes for the
 generated filter input fields.

 Empty 'id' in the default value ensures that id would not be obtained from
 the model attribute thus providing better performance.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/grid/Column::renderHeaderCell|
 |yii/grid/Column::renderFooterCell|
 |yii/grid/Column::renderDataCell|
 |yii/grid/Column::renderFilterCell|
 |yii/grid/Column::renderFooterCellContent|


*yii/grid/DataColumn::renderHeaderCellContent*		protected
>
 renderHeaderCellContent()
<
return (void)

 {@inheritdoc}


*yii/grid/DataColumn::getHeaderCellLabel*			protected
>
 getHeaderCellLabel()
<
return (void)

 {@inheritdoc]


*yii/grid/DataColumn::renderDataCellContent*		protected
>
 renderDataCellContent($model, $key, $index)
<
return (void)

 {@inheritdoc}

    [$model] () 
    [$key] () 
    [$index] () 


*yii/grid/DataColumn::renderFilterCellContent*		protected
>
 renderFilterCellContent()
<
return (void)

 {@inheritdoc}


*yii/grid/DataColumn::getDataCellValue*			public
>
 getDataCellValue($model, $key, $index)
<
return (string) The data cell value

 Returns the data cell value.

    [$model] (mixed) The data model
    [$key] (mixed) The key associated with the data model
    [$index] (int) The zero-based index of the data model among the models
    array returned by 'GridView::dataProvider'.



 vim:tw=78:ts=8:ft=help:norl:
