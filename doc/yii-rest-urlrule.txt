
*yii/rest/UrlRule*   >> |yii/web/CompositeUrlRule|
==================

DESCRIPTION
------------------------------------------------------------------------------

 The simplest usage of UrlRule is to declare a rule like the following in the
 application configuration,

   [
       'class' => 'yii\rest\UrlRule',
       'controller' => 'user',
   ]

 The above code will create a whole set of URL rules supporting the following
 RESTful API endpoints:


   - ''PUT,PATCH users/<id>' => 'user/update'': update a user 
   - ''DELETE users/<id>' => 'user/delete'': delete a user 
   - ''GET,HEAD users/<id>' => 'user/view'': return the
   details/overview/options of a user 
   - ''POST users' => 'user/create'': create a new user 
   - ''GET,HEAD users' => 'user/index'': return a list/overview/options
   of users 
   - ''users/<id>' => 'user/options'': process all unhandled verbs of a
   user 
   - ''users' => 'user/options'': process all unhandled verbs of user
   collection

 You may configure 'only' and/or 'except' to disable some of the above rules.
 You may configure 'patterns' to completely redefine your own list of rules.
 You may configure 'controller' with multiple controller IDs to generate rules
 for all these controllers. For example, the following code will disable the
 'delete' rule and generate rules for both 'user' and 'post' controllers:

   [
       'class' => 'yii\rest\UrlRule',
       'controller' => ['user', 'post'],
       'except' => ['delete'],
   ]

 The property 'controller' is required and should represent one or multiple
 controller IDs. Each controller ID should be prefixed with the module ID if
 the controller is within a module. The controller ID used in the pattern will
 be automatically pluralized (e.g. 'user' becomes 'users' as shown in the
 above examples).

 For more details and usage information on UrlRule, see the [guide article on
 rest routing](guide:rest-routing).


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/web/CompositeUrlRule::$rules|
 |yii/web/CompositeUrlRule::$createStatus|
 |yii/web/CompositeUrlRule::$createUrlStatus|


$prefix					*yii/rest/UrlRule::$prefix*

 (string) The common prefix string shared by all patterns.

$suffix					*yii/rest/UrlRule::$suffix*

 (string) The suffix that will be assigned to '\yii\web\UrlRule::suffix' for
 every generated rule.

$controller				*yii/rest/UrlRule::$controller*

 (string|array) The controller ID (e.g. 'user', 'post-comment') that the rules
 in this composite rule are dealing with. It should be prefixed with the
 module ID if the controller is within a module (e.g. 'admin/user').

 By default, the controller ID will be pluralized automatically when it is put
 in the patterns of the generated rules. If you want to explicitly specify how
 the controller ID should appear in the patterns, you may use an array with
 the array key being as the controller ID in the pattern, and the array value
 the actual controller ID. For example, '['u' => 'user']'.

 You may also pass multiple controller IDs as an array. If this is the case,
 this composite rule will generate applicable URL rules for EVERY specified
 controller. For example, '['user', 'post']'.

$only					*yii/rest/UrlRule::$only*

 (array) List of acceptable actions. If not empty, only the actions within
 this array will have the corresponding URL rules created.

$except					*yii/rest/UrlRule::$except*

 (array) List of actions that should be excluded. Any action found in this
 array will NOT have its URL rules created.

$extraPatterns				*yii/rest/UrlRule::$extraPatterns*

 (array) Patterns for supporting extra actions in addition to those listed in
 'patterns'. The keys are the patterns and the values are the corresponding
 action IDs. These extra patterns will take precedence over 'patterns'.

$tokens					*yii/rest/UrlRule::$tokens*

 (array) List of tokens that should be replaced for each pattern. The keys are
 the token names, and the values are the corresponding replacements.

$patterns				*yii/rest/UrlRule::$patterns*

 (array) List of possible patterns and the corresponding actions for creating
 the URL rules. The keys are the patterns and the values are the corresponding
 actions. The format of patterns is 'Verbs Pattern', where 'Verbs' stands for
 a list of HTTP verbs separated by comma (without space). If 'Verbs' is not
 specified, it means all verbs are allowed. 'Pattern' is optional. It will be
 prefixed with 'prefix'/'controller'/, and tokens in it will be replaced by
 'tokens'.

$ruleConfig				*yii/rest/UrlRule::$ruleConfig*

 (array) The default configuration for creating each URL rule contained by
 this rule.

$pluralize				*yii/rest/UrlRule::$pluralize*

 (bool) Whether to automatically pluralize the URL names for controllers. If
 true, a controller ID will appear in plural form in URLs. For example, 'user'
 controller will appear as 'users' in URLs.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/web/CompositeUrlRule::iterateRules|
 |yii/web/CompositeUrlRule::getCreateUrlStatus|


*yii/rest/UrlRule::init*					public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/rest/UrlRule::createRules*				protected
>
 createRules()
<
return (\yii\web\UrlRuleInterface[]) The URL rules

 Creates the URL rules that should be contained within this composite rule.








*yii/rest/UrlRule::parseRequest*				public
>
 parseRequest($manager, $request)
<
return (array|bool) The parsing result. The route and the parameters are returned as
an array. If false, it means this rule cannot be used to parse this path info.

 Parses the given request and returns the corresponding route and parameters.







    [$manager] (\yii\web\UrlManager) The URL manager
    [$request] (\yii\web\Request) The request component


*yii/rest/UrlRule::createUrl*				public
>
 createUrl($manager, $route, $params)
<
return (string|bool) The created URL, or false if this rule cannot be used for
creating this URL.

 Creates a URL according to the given route and parameters.







    [$manager] (\yii\web\UrlManager) The URL manager
    [$route] (string) The route. It should not have slashes at the beginning
    or the end.
    [$params] (array) The parameters


*yii/rest/UrlRule::createRule*				protected
>
 createRule($pattern, $prefix, $action)
<
return (\yii\web\UrlRuleInterface) 

 Creates a URL rule using the given pattern and action.

    [$pattern] (string) 
    [$prefix] (string) 
    [$action] (string) 



 vim:tw=78:ts=8:ft=help:norl:
