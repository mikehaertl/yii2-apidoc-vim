
*yii/log/SyslogTarget*   >> |yii/log/Target|
======================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/log/Target::$categories|
 |yii/log/Target::$except|
 |yii/log/Target::$logVars|
 |yii/log/Target::$prefix|
 |yii/log/Target::$exportInterval|
 |yii/log/Target::$messages|
 |yii/log/Target::$microtime|


$identity				*yii/log/SyslogTarget::$identity*

 (string) Syslog identity

$facility				*yii/log/SyslogTarget::$facility*

 (int) Syslog facility.

$options				*yii/log/SyslogTarget::$options*

 (int) Openlog options. This is a bitfield passed as the '$option' parameter
 to [openlog()](http://php.net/openlog). Defaults to 'null' which means to use
 the default options 'LOG_ODELAY | LOG_PID'.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/log/Target::collect|
 |yii/log/Target::getContextMessage|
 |yii/log/Target::getLevels|
 |yii/log/Target::setLevels|
 |yii/log/Target::filterMessages|
 |yii/log/Target::getMessagePrefix|
 |yii/log/Target::setEnabled|
 |yii/log/Target::getEnabled|
 |yii/log/Target::getTime|


*yii/log/SyslogTarget::init*				public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/log/SyslogTarget::export*				public
>
 export()
<
return (void)

 Writes log messages to syslog.

 Starting from version 2.0.14, this method throws LogRuntimeException in case
 the log can not be exported.


*yii/log/SyslogTarget::formatMessage*			public
>
 formatMessage($message)
<
return (void)

 {@inheritdoc}

    [$message] () 



 vim:tw=78:ts=8:ft=help:norl:
