
*yii/console/widgets/Table*   >> |yii/base/Widget|
===========================

DESCRIPTION
------------------------------------------------------------------------------

 For example,

   $table = new Table();

   echo $table
       ->setHeaders(['test1', 'test2', 'test3'])
       ->setRows([
           ['col1', 'col2', 'col3'],
           ['col1', 'col2', ['col3-0', 'col3-1', 'col3-2']],
       ])
       ->run();

 or

 '''php echo Table::widget([     'headers' => ['test1', 'test2', 'test3'],    
 'rows' => [         ['col1', 'col2', 'col3'],         ['col1', 'col2',
 ['col3-0', 'col3-1', 'col3-2'',     ], ]);



METHOD DETAILS
------------------------------------------------------------------------------


*yii/console/widgets/Table::className*			public

 See |yii/base/BaseObject::className|


*yii/console/widgets/Table::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/console/widgets/Table::init*				public

 See |yii/base/Widget::init|


*yii/console/widgets/Table::__get*			public

 See |yii/base/Component::__get|


*yii/console/widgets/Table::__set*			public

 See |yii/base/Component::__set|


*yii/console/widgets/Table::__isset*			public

 See |yii/base/Component::__isset|


*yii/console/widgets/Table::__unset*			public

 See |yii/base/Component::__unset|


*yii/console/widgets/Table::__call*			public

 See |yii/base/Component::__call|


*yii/console/widgets/Table::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/console/widgets/Table::canGetProperty*		public

 See |yii/base/Component::canGetProperty|


*yii/console/widgets/Table::canSetProperty*		public

 See |yii/base/Component::canSetProperty|


*yii/console/widgets/Table::hasMethod*			public

 See |yii/base/Component::hasMethod|


*yii/console/widgets/Table::__clone*			public

 See |yii/base/Component::__clone|


*yii/console/widgets/Table::behaviors*			public

 See |yii/base/Component::behaviors|


*yii/console/widgets/Table::hasEventHandlers*		public

 See |yii/base/Component::hasEventHandlers|


*yii/console/widgets/Table::on*				public

 See |yii/base/Component::on|


*yii/console/widgets/Table::off*				public

 See |yii/base/Component::off|


*yii/console/widgets/Table::trigger*			public

 See |yii/base/Component::trigger|


*yii/console/widgets/Table::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/console/widgets/Table::getBehaviors*			public

 See |yii/base/Component::getBehaviors|


*yii/console/widgets/Table::attachBehavior*		public

 See |yii/base/Component::attachBehavior|


*yii/console/widgets/Table::attachBehaviors*		public

 See |yii/base/Component::attachBehaviors|


*yii/console/widgets/Table::detachBehavior*		public

 See |yii/base/Component::detachBehavior|


*yii/console/widgets/Table::detachBehaviors*		public

 See |yii/base/Component::detachBehaviors|


*yii/console/widgets/Table::ensureBehaviors*		public

 See |yii/base/Component::ensureBehaviors|


*yii/console/widgets/Table::begin*			public

 See |yii/base/Widget::begin|


*yii/console/widgets/Table::end*				public

 See |yii/base/Widget::end|


*yii/console/widgets/Table::widget*			public

 See |yii/base/Widget::widget|


*yii/console/widgets/Table::getId*			public

 See |yii/base/Widget::getId|


*yii/console/widgets/Table::setId*			public

 See |yii/base/Widget::setId|


*yii/console/widgets/Table::getView*			public

 See |yii/base/Widget::getView|


*yii/console/widgets/Table::setView*			public

 See |yii/base/Widget::setView|


*yii/console/widgets/Table::run*				public
>
 run()
<
return (string) The rendered table



*yii/console/widgets/Table::render*			public

 See |yii/base/Widget::render|


*yii/console/widgets/Table::renderFile*			public

 See |yii/base/Widget::renderFile|


*yii/console/widgets/Table::getViewPath*			public

 See |yii/base/Widget::getViewPath|


*yii/console/widgets/Table::beforeRun*			public

 See |yii/base/Widget::beforeRun|


*yii/console/widgets/Table::afterRun*			public

 See |yii/base/Widget::afterRun|


*yii/console/widgets/Table::setHeaders*			public
>
 setHeaders($headers)
<
return ($this) 

    [$headers] (array) Table headers


*yii/console/widgets/Table::setRows*			public
>
 setRows($rows)
<
return ($this) 

    [$rows] (array) Table rows


*yii/console/widgets/Table::setChars*			public
>
 setChars($chars)
<
return ($this) 

    [$chars] (array) Table chars


*yii/console/widgets/Table::setScreenWidth*		public
>
 setScreenWidth($width)
<
return ($this) 

    [$width] (int) Screen width


*yii/console/widgets/Table::setListPrefix*		public
>
 setListPrefix($listPrefix)
<
return ($this) 

    [$listPrefix] (string) List prefix


*yii/console/widgets/Table::renderRow*			protected
>
 renderRow($row, $spanLeft, $spanMiddle, $spanRight)
<
return (string) 

    [$row] (array) Row of data
    [$spanLeft] (string) Character for left border
    [$spanMiddle] (string) Character for middle border
    [$spanRight] (string) Character for right border


*yii/console/widgets/Table::renderSeparator*		protected
>
 renderSeparator($spanLeft, $spanMid, $spanMidMid, $spanRight)
<
return (string) The generated separator row

    [$spanLeft] (string) Character for left border
    [$spanMid] (string) Character for middle border
    [$spanMidMid] (string) Character for middle-middle border
    [$spanRight] (string) Character for right border


*yii/console/widgets/Table::calculateRowsSize*		protected
>
 calculateRowsSize()
<
return (void)



*yii/console/widgets/Table::calculateRowHeight*		protected
>
 calculateRowHeight($row)
<
return (int) Maximum row per cell

    [$row] (array) 


*yii/console/widgets/Table::getScreenWidth*		protected
>
 getScreenWidth()
<
return (int) Screen width




 vim:tw=78:ts=8:ft=help:norl:
