
*yii/mongodb/validators/MongoIdValidator*   >> |yii/validators/Validator|
=========================================

DESCRIPTION
------------------------------------------------------------------------------

 Attribute will be considered as valid, if it is an instance of '\MongoId' or
 a its string value.

 Usage example:

   class Customer extends yii\mongodb\ActiveRecord
   {
       ...
       public function rules()
       {
           return [
               ['_id', 'yii\mongodb\validators\MongoIdValidator']
           ];
       }
   }

 This validator may also serve as a filter, allowing conversion of Mongo ID
 value either to the plain string or to '\MongoId' instance. You can enable
 this feature via 'forceFormat'.


PROPERTY DETAILS
------------------------------------------------------------------------------


$forceFormat				*yii/mongodb/validators/MongoIdValidator::$forceFormat*

 (string|null) Specifies the format, which validated attribute value should be
 converted to in case validation was successful. valid values are: 
   - 'string' - enforce value converted to plain string. 
   - 'object' - enforce value converted to '\MongoId' instance.   If not set 
   - no conversion will be performed, leaving attribute value intact.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/mongodb/validators/MongoIdValidator::init*		public
>
 init()
<
return (void)



*yii/mongodb/validators/MongoIdValidator::validateAttribute*public
>
 validateAttribute($model, $attribute)
<
return (void)

    [$model] () 
    [$attribute] () 


*yii/mongodb/validators/MongoIdValidator::validateValue*	protected
>
 validateValue($value)
<
return (void)

    [$value] () 



 vim:tw=78:ts=8:ft=help:norl:
