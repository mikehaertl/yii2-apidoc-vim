
*yii/bootstrap/Progress*   >> |yii/bootstrap/Widget|
========================

DESCRIPTION
------------------------------------------------------------------------------

 For example,

   // default with label
   echo Progress::widget([
       'percent' => 60,
       'label' => 'test',
   ]);

   // styled
   echo Progress::widget([
       'percent' => 65,
       'barOptions' => ['class' => 'progress-bar-danger']
   ]);

   // striped
   echo Progress::widget([
       'percent' => 70,
       'barOptions' => ['class' => 'progress-bar-warning'],
       'options' => ['class' => 'progress-striped']
   ]);

   // striped animated
   echo Progress::widget([
       'percent' => 70,
       'barOptions' => ['class' => 'progress-bar-success'],
       'options' => ['class' => 'active progress-striped']
   ]);

   // stacked bars
   echo Progress::widget([
       'bars' => [
           ['percent' => 30, 'options' => ['class' => 'progress-bar-danger']],
           ['percent' => 30, 'label' => 'test', 'options' => ['class' =>
 'progress-bar-success']],
           ['percent' => 35, 'options' => ['class' =>
 'progress-bar-warning']],
       ]
   ]);




PROPERTY DETAILS
------------------------------------------------------------------------------

$counter				*yii/bootstrap/Progress::$counter*
 See |yii/base/Widget::$counter|

$autoIdPrefix				*yii/bootstrap/Progress::$autoIdPrefix*
 See |yii/base/Widget::$autoIdPrefix|

$stack					*yii/bootstrap/Progress::$stack*
 See |yii/base/Widget::$stack|

$options				*yii/bootstrap/Progress::$options*
 See |yii/bootstrap/Widget::$options|

$clientOptions				*yii/bootstrap/Progress::$clientOptions*
 See |yii/bootstrap/Widget::$clientOptions|

$clientEvents				*yii/bootstrap/Progress::$clientEvents*
 See |yii/bootstrap/Widget::$clientEvents|

$label					*yii/bootstrap/Progress::$label*
 (string) The button label.

$percent				*yii/bootstrap/Progress::$percent*
 (integer) The amount of progress as a percentage.

$barOptions				*yii/bootstrap/Progress::$barOptions*
 (array) The HTML attributes of the bar.

$bars					*yii/bootstrap/Progress::$bars*
 (array) A set of bars that are stacked together to form a single progress
 bar. Each bar is an array of the following structure:

   [
       // required, the amount of progress as a percentage.
       'percent' => 30,
       // optional, the label to be displayed on the bar
       'label' => '30%',
       // optional, array, additional HTML attributes for the bar tag
       'options' => [],
   ]



$behaviors				*yii/bootstrap/Progress::$behaviors*
 See |yii/base/Component::$behaviors|

$id					*yii/bootstrap/Progress::$id*
 See |yii/base/Widget::$id|

$view					*yii/bootstrap/Progress::$view*
 See |yii/base/Widget::$view|

$viewPath				*yii/bootstrap/Progress::$viewPath*
 See |yii/base/Widget::$viewPath|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/bootstrap/Progress::className*			public
 See |yii/base/Object::className|


*yii/bootstrap/Progress::__construct*			public
 See |yii/base/Object::__construct|


*yii/bootstrap/Progress::init*				public
>
 init()
<
(void)

 If you override this method, make sure you call the parent implementation
 first.


*yii/bootstrap/Progress::__get*				public
 See |yii/base/Component::__get|


*yii/bootstrap/Progress::__set*				public
 See |yii/base/Component::__set|


*yii/bootstrap/Progress::__isset*				public
 See |yii/base/Component::__isset|


*yii/bootstrap/Progress::__unset*				public
 See |yii/base/Component::__unset|


*yii/bootstrap/Progress::__call*				public
 See |yii/base/Component::__call|


*yii/bootstrap/Progress::hasProperty*			public
 See |yii/base/Component::hasProperty|


*yii/bootstrap/Progress::canGetProperty*			public
 See |yii/base/Component::canGetProperty|


*yii/bootstrap/Progress::canSetProperty*			public
 See |yii/base/Component::canSetProperty|


*yii/bootstrap/Progress::hasMethod*			public
 See |yii/base/Component::hasMethod|


*yii/bootstrap/Progress::__clone*				public
 See |yii/base/Component::__clone|


*yii/bootstrap/Progress::behaviors*			public
 See |yii/base/Component::behaviors|


*yii/bootstrap/Progress::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/bootstrap/Progress::on*				public
 See |yii/base/Component::on|


*yii/bootstrap/Progress::off*				public
 See |yii/base/Component::off|


*yii/bootstrap/Progress::trigger*				public
 See |yii/base/Component::trigger|


*yii/bootstrap/Progress::getBehavior*			public
 See |yii/base/Component::getBehavior|


*yii/bootstrap/Progress::getBehaviors*			public
 See |yii/base/Component::getBehaviors|


*yii/bootstrap/Progress::attachBehavior*			public
 See |yii/base/Component::attachBehavior|


*yii/bootstrap/Progress::attachBehaviors*			public
 See |yii/base/Component::attachBehaviors|


*yii/bootstrap/Progress::detachBehavior*			public
 See |yii/base/Component::detachBehavior|


*yii/bootstrap/Progress::detachBehaviors*			public
 See |yii/base/Component::detachBehaviors|


*yii/bootstrap/Progress::ensureBehaviors*			public
 See |yii/base/Component::ensureBehaviors|


*yii/bootstrap/Progress::begin*				public
 See |yii/base/Widget::begin|


*yii/bootstrap/Progress::end*				public
 See |yii/base/Widget::end|


*yii/bootstrap/Progress::widget*				public
 See |yii/base/Widget::widget|


*yii/bootstrap/Progress::getId*				public
 See |yii/base/Widget::getId|


*yii/bootstrap/Progress::setId*				public
 See |yii/base/Widget::setId|


*yii/bootstrap/Progress::getView*				public
 See |yii/base/Widget::getView|


*yii/bootstrap/Progress::setView*				public
 See |yii/base/Widget::setView|


*yii/bootstrap/Progress::run*				public
>
 run()
<
(void)



*yii/bootstrap/Progress::render*				public
 See |yii/base/Widget::render|


*yii/bootstrap/Progress::renderFile*			public
 See |yii/base/Widget::renderFile|


*yii/bootstrap/Progress::getViewPath*			public
 See |yii/base/Widget::getViewPath|


*yii/bootstrap/Progress::registerPlugin*			protected
 See |yii/bootstrap/Widget::registerPlugin|


*yii/bootstrap/Progress::registerClientEvents*		protected
 See |yii/bootstrap/Widget::registerClientEvents|


*yii/bootstrap/Progress::renderProgress*			protected
>
 renderProgress()
<
(string) The rendering result.



*yii/bootstrap/Progress::renderBar*			protected
>
 renderBar($percent, $label='\'\'', $options='[]')
<
(string) The rendering result.

    [$percent] (integer) The percentage of the bar
    [$label] () 
    [$options] (array) The HTML attributes of the bar



 vim:tw=78:ts=8:ft=help:norl:
