
*yii/mutex/MysqlMutex*   >> |yii/mutex/DbMutex|
======================

DESCRIPTION
------------------------------------------------------------------------------

 Application configuration example:

 ''' [     'components' => [         'db' => [             'class' =>
 'yii\db\Connection',             'dsn' => 'mysql:host=127.0.0.1;dbname=demo',
         ]         'mutex' => [             'class' => 'yii\mutex\MysqlMutex',
         ],     ], ] '''



METHOD DETAILS
------------------------------------------------------------------------------


*yii/mutex/MysqlMutex::className*				public

 See |yii/base/Object::className|


*yii/mutex/MysqlMutex::__construct*			public

 See |yii/base/Object::__construct|


*yii/mutex/MysqlMutex::init*				public
>
 init()
<
return (void)



*yii/mutex/MysqlMutex::__get*				public

 See |yii/base/Component::__get|


*yii/mutex/MysqlMutex::__set*				public

 See |yii/base/Component::__set|


*yii/mutex/MysqlMutex::__isset*				public

 See |yii/base/Component::__isset|


*yii/mutex/MysqlMutex::__unset*				public

 See |yii/base/Component::__unset|


*yii/mutex/MysqlMutex::__call*				public

 See |yii/base/Component::__call|


*yii/mutex/MysqlMutex::hasProperty*			public

 See |yii/base/Component::hasProperty|


*yii/mutex/MysqlMutex::canGetProperty*			public

 See |yii/base/Component::canGetProperty|


*yii/mutex/MysqlMutex::canSetProperty*			public

 See |yii/base/Component::canSetProperty|


*yii/mutex/MysqlMutex::hasMethod*				public

 See |yii/base/Component::hasMethod|


*yii/mutex/MysqlMutex::__clone*				public

 See |yii/base/Component::__clone|


*yii/mutex/MysqlMutex::behaviors*				public

 See |yii/base/Component::behaviors|


*yii/mutex/MysqlMutex::hasEventHandlers*			public

 See |yii/base/Component::hasEventHandlers|


*yii/mutex/MysqlMutex::on*				public

 See |yii/base/Component::on|


*yii/mutex/MysqlMutex::off*				public

 See |yii/base/Component::off|


*yii/mutex/MysqlMutex::trigger*				public

 See |yii/base/Component::trigger|


*yii/mutex/MysqlMutex::getBehavior*			public

 See |yii/base/Component::getBehavior|


*yii/mutex/MysqlMutex::getBehaviors*			public

 See |yii/base/Component::getBehaviors|


*yii/mutex/MysqlMutex::attachBehavior*			public

 See |yii/base/Component::attachBehavior|


*yii/mutex/MysqlMutex::attachBehaviors*			public

 See |yii/base/Component::attachBehaviors|


*yii/mutex/MysqlMutex::detachBehavior*			public

 See |yii/base/Component::detachBehavior|


*yii/mutex/MysqlMutex::detachBehaviors*			public

 See |yii/base/Component::detachBehaviors|


*yii/mutex/MysqlMutex::ensureBehaviors*			public

 See |yii/base/Component::ensureBehaviors|


*yii/mutex/MysqlMutex::acquire*				public

 See |yii/mutex/Mutex::acquire|


*yii/mutex/MysqlMutex::release*				public

 See |yii/mutex/Mutex::release|


*yii/mutex/MysqlMutex::acquireLock*			protected
>
 acquireLock($name, $timeout=0)
<
return (boolean) Acquiring result.

    [$name] (string) Of the lock to be acquired.
    [$timeout] (integer) To wait for lock to become released.


*yii/mutex/MysqlMutex::releaseLock*			protected
>
 releaseLock($name)
<
return (boolean) Release result.

    [$name] (string) Of the lock to be released.



 vim:tw=78:ts=8:ft=help:norl:
