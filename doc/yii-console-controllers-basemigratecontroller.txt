
*yii/console/controllers/BaseMigrateController*   >> |yii/console/Controller|
===============================================

SUBCLASSES
------------------------------------------------------------------------------

|yii/console/controllers/MigrateController|


PROPERTY DETAILS
------------------------------------------------------------------------------

$id					*yii/console/controllers/BaseMigrateController::$id*
 See |yii/base/Controller::$id|

$module					*yii/console/controllers/BaseMigrateController::$module*
 See |yii/base/Controller::$module|

$defaultAction				*yii/console/controllers/BaseMigrateController::$defaultAction*
 (string) The default command action.

$layout					*yii/console/controllers/BaseMigrateController::$layout*
 See |yii/base/Controller::$layout|

$action					*yii/console/controllers/BaseMigrateController::$action*
 See |yii/base/Controller::$action|

$interactive				*yii/console/controllers/BaseMigrateController::$interactive*
 See |yii/console/Controller::$interactive|

$color					*yii/console/controllers/BaseMigrateController::$color*
 See |yii/console/Controller::$color|

$migrationPath				*yii/console/controllers/BaseMigrateController::$migrationPath*
 (string) The directory storing the migration classes. This can be either a
 path alias or a directory.

$templateFile				*yii/console/controllers/BaseMigrateController::$templateFile*
 (string) The template file for generating new migrations. This can be either
 a path alias (e.g. "@app/migrations/template.php") or a file path.

$behaviors				*yii/console/controllers/BaseMigrateController::$behaviors*
 See |yii/base/Component::$behaviors|

$modules				*yii/console/controllers/BaseMigrateController::$modules*
 See |yii/base/Controller::$modules|

$uniqueId				*yii/console/controllers/BaseMigrateController::$uniqueId*
 See |yii/base/Controller::$uniqueId|

$route					*yii/console/controllers/BaseMigrateController::$route*
 See |yii/base/Controller::$route|

$view					*yii/console/controllers/BaseMigrateController::$view*
 See |yii/base/Controller::$view|

$viewPath				*yii/console/controllers/BaseMigrateController::$viewPath*
 See |yii/base/ViewContextInterface::$viewPath|

$helpSummary				*yii/console/controllers/BaseMigrateController::$helpSummary*
 See |yii/console/Controller::$helpSummary|

$help					*yii/console/controllers/BaseMigrateController::$help*
 See |yii/console/Controller::$help|



METHOD DETAILS
------------------------------------------------------------------------------

*yii/console/controllers/BaseMigrateController::className*public
 See |yii/base/Object::className|


*yii/console/controllers/BaseMigrateController::__construct*public
 See |yii/base/Controller::__construct|


*yii/console/controllers/BaseMigrateController::init*	public
 See |yii/base/Object::init|


*yii/console/controllers/BaseMigrateController::__get*	public
 See |yii/base/Component::__get|


*yii/console/controllers/BaseMigrateController::__set*	public
 See |yii/base/Component::__set|


*yii/console/controllers/BaseMigrateController::__isset*	public
 See |yii/base/Component::__isset|


*yii/console/controllers/BaseMigrateController::__unset*	public
 See |yii/base/Component::__unset|


*yii/console/controllers/BaseMigrateController::__call*	public
 See |yii/base/Component::__call|


*yii/console/controllers/BaseMigrateController::hasProperty*public
 See |yii/base/Component::hasProperty|


*yii/console/controllers/BaseMigrateController::canGetProperty*public
 See |yii/base/Component::canGetProperty|


*yii/console/controllers/BaseMigrateController::canSetProperty*public
 See |yii/base/Component::canSetProperty|


*yii/console/controllers/BaseMigrateController::hasMethod*public
 See |yii/base/Component::hasMethod|


*yii/console/controllers/BaseMigrateController::__clone*	public
 See |yii/base/Component::__clone|


*yii/console/controllers/BaseMigrateController::behaviors*public
 See |yii/base/Component::behaviors|


*yii/console/controllers/BaseMigrateController::hasEventHandlers*public
 See |yii/base/Component::hasEventHandlers|


*yii/console/controllers/BaseMigrateController::on*	public
 See |yii/base/Component::on|


*yii/console/controllers/BaseMigrateController::off*	public
 See |yii/base/Component::off|


*yii/console/controllers/BaseMigrateController::trigger*	public
 See |yii/base/Component::trigger|


*yii/console/controllers/BaseMigrateController::getBehavior*public
 See |yii/base/Component::getBehavior|


*yii/console/controllers/BaseMigrateController::getBehaviors*public
 See |yii/base/Component::getBehaviors|


*yii/console/controllers/BaseMigrateController::attachBehavior*public
 See |yii/base/Component::attachBehavior|


*yii/console/controllers/BaseMigrateController::attachBehaviors*public
 See |yii/base/Component::attachBehaviors|


*yii/console/controllers/BaseMigrateController::detachBehavior*public
 See |yii/base/Component::detachBehavior|


*yii/console/controllers/BaseMigrateController::detachBehaviors*public
 See |yii/base/Component::detachBehaviors|


*yii/console/controllers/BaseMigrateController::ensureBehaviors*public
 See |yii/base/Component::ensureBehaviors|


*yii/console/controllers/BaseMigrateController::actions*	public
 See |yii/base/Controller::actions|


*yii/console/controllers/BaseMigrateController::runAction*public
 See |yii/console/Controller::runAction|


*yii/console/controllers/BaseMigrateController::run*	public
 See |yii/base/Controller::run|


*yii/console/controllers/BaseMigrateController::bindActionParams*public
 See |yii/console/Controller::bindActionParams|


*yii/console/controllers/BaseMigrateController::createAction*public
 See |yii/base/Controller::createAction|


*yii/console/controllers/BaseMigrateController::beforeAction*public
>
 beforeAction($action)
<
(boolean) Whether the action should continue to be executed.

    [$action] (\yii\base\Action) The action to be executed.


*yii/console/controllers/BaseMigrateController::afterAction*public
 See |yii/base/Controller::afterAction|


*yii/console/controllers/BaseMigrateController::getModules*public
 See |yii/base/Controller::getModules|


*yii/console/controllers/BaseMigrateController::getUniqueId*public
 See |yii/base/Controller::getUniqueId|


*yii/console/controllers/BaseMigrateController::getRoute*	public
 See |yii/base/Controller::getRoute|


*yii/console/controllers/BaseMigrateController::render*	public
 See |yii/base/Controller::render|


*yii/console/controllers/BaseMigrateController::renderContent*public
 See |yii/base/Controller::renderContent|


*yii/console/controllers/BaseMigrateController::renderPartial*public
 See |yii/base/Controller::renderPartial|


*yii/console/controllers/BaseMigrateController::renderFile*public
 See |yii/base/Controller::renderFile|


*yii/console/controllers/BaseMigrateController::getView*	public
 See |yii/base/Controller::getView|


*yii/console/controllers/BaseMigrateController::setView*	public
 See |yii/base/Controller::setView|


*yii/console/controllers/BaseMigrateController::getViewPath*public
 See |yii/base/ViewContextInterface::getViewPath|


*yii/console/controllers/BaseMigrateController::findLayoutFile*public
 See |yii/base/Controller::findLayoutFile|


*yii/console/controllers/BaseMigrateController::isColorEnabled*public
 See |yii/console/Controller::isColorEnabled|


*yii/console/controllers/BaseMigrateController::ansiFormat*public
 See |yii/console/Controller::ansiFormat|


*yii/console/controllers/BaseMigrateController::stdout*	public
 See |yii/console/Controller::stdout|


*yii/console/controllers/BaseMigrateController::stderr*	public
 See |yii/console/Controller::stderr|


*yii/console/controllers/BaseMigrateController::prompt*	public
 See |yii/console/Controller::prompt|


*yii/console/controllers/BaseMigrateController::confirm*	public
 See |yii/console/Controller::confirm|


*yii/console/controllers/BaseMigrateController::select*	public
 See |yii/console/Controller::select|


*yii/console/controllers/BaseMigrateController::options*	public
>
 options($actionID)
<
(array) The names of the options valid for the action

 Child classes may override this method to specify possible options.

 Note that the values setting via options are not available until
 'beforeAction()' is being called.
    [$actionID] (string) The action id of the current request


*yii/console/controllers/BaseMigrateController::getHelpSummary*public
 See |yii/console/Controller::getHelpSummary|


*yii/console/controllers/BaseMigrateController::getHelp*	public
 See |yii/console/Controller::getHelp|


*yii/console/controllers/BaseMigrateController::getActionHelpSummary*public
 See |yii/console/Controller::getActionHelpSummary|


*yii/console/controllers/BaseMigrateController::getActionHelp*public
 See |yii/console/Controller::getActionHelp|


*yii/console/controllers/BaseMigrateController::getActionArgsHelp*public
 See |yii/console/Controller::getActionArgsHelp|


*yii/console/controllers/BaseMigrateController::getActionOptionsHelp*public
 See |yii/console/Controller::getActionOptionsHelp|


*yii/console/controllers/BaseMigrateController::getActionMethodReflection*protected
 See |yii/console/Controller::getActionMethodReflection|


*yii/console/controllers/BaseMigrateController::parseDocCommentTags*protected
 See |yii/console/Controller::parseDocCommentTags|


*yii/console/controllers/BaseMigrateController::parseDocCommentSummary*protected
 See |yii/console/Controller::parseDocCommentSummary|


*yii/console/controllers/BaseMigrateController::parseDocCommentDetail*protected
 See |yii/console/Controller::parseDocCommentDetail|


*yii/console/controllers/BaseMigrateController::actionUp*	public
>
 actionUp($limit=0)
<
(integer) The status of the action execution. 0 means normal, other values
mean abnormal.

 For example,

   yii migrate     # apply all new migrations
   yii migrate 3   # apply the first 3 new migrations


    [$limit] (integer) The number of new migrations to be applied. If 0, it
    means applying all available new migrations.


*yii/console/controllers/BaseMigrateController::actionDown*public
>
 actionDown($limit=1)
<
(integer) The status of the action execution. 0 means normal, other values
mean abnormal.

 For example,

   yii migrate/down     # revert the last migration
   yii migrate/down 3   # revert the last 3 migrations
   yii migrate/down all # revert all migrations


    [$limit] (integer) The number of migrations to be reverted. Defaults to 1,
    meaning the last applied migration will be reverted.


*yii/console/controllers/BaseMigrateController::actionRedo*public
>
 actionRedo($limit=1)
<
(integer) The status of the action execution. 0 means normal, other values
mean abnormal.

 This command will first revert the specified migrations, and then apply them
 again. For example,

   yii migrate/redo     # redo the last applied migration
   yii migrate/redo 3   # redo the last 3 applied migrations
   yii migrate/redo all # redo all migrations


    [$limit] (integer) The number of migrations to be redone. Defaults to 1,
    meaning the last applied migration will be redone.


*yii/console/controllers/BaseMigrateController::actionTo*	public
>
 actionTo($version)
<
(void)

 Can also downgrade versions to the certain apply time in the past by
 providing a UNIX timestamp or a string parseable by the strtotime() function.
 This means that all the versions applied after the specified certain time
 would be reverted.

 This command will first revert the specified migrations, and then apply them
 again. For example,

   yii migrate/to 101129_185401                      # using timestamp
   yii migrate/to m101129_185401_create_user_table   # using full name
   yii migrate/to 1392853618                         # using UNIX timestamp
   yii migrate/to "2014-02-15 13:00:50"              # using strtotime()
 parseable string


    [$version] (string) Either the version name or the certain time value in
    the past that the application should be migrated to. This can be either
    the timestamp, the full name of the migration, the UNIX timestamp, or the
    parseable datetime string.


*yii/console/controllers/BaseMigrateController::actionMark*public
>
 actionMark($version)
<
(integer) CLI exit code

 No actual migration will be performed.

   yii migrate/mark 101129_185401                      # using timestamp
   yii migrate/mark m101129_185401_create_user_table   # using full name


    [$version] (string) The version at which the migration history should be
    marked. This can be either the timestamp or the full name of the
    migration.


*yii/console/controllers/BaseMigrateController::actionHistory*public
>
 actionHistory($limit=10)
<
(void)

 This command will show the list of migrations that have been applied so far.
 For example,

   yii migrate/history     # showing the last 10 migrations
   yii migrate/history 5   # showing the last 5 migrations
   yii migrate/history all # showing the whole history


    [$limit] (integer) The maximum number of migrations to be displayed. If it
    is "all", the whole migration history will be displayed.


*yii/console/controllers/BaseMigrateController::actionNew*public
>
 actionNew($limit=10)
<
(void)

 This command will show the new migrations that have not been applied. For
 example,

   yii migrate/new     # showing the first 10 new migrations
   yii migrate/new 5   # showing the first 5 new migrations
   yii migrate/new all # showing all new migrations


    [$limit] (integer) The maximum number of new migrations to be displayed.
    If it is 'all', all available new migrations will be displayed.


*yii/console/controllers/BaseMigrateController::actionCreate*public
>
 actionCreate($name)
<
(void)

 This command creates a new migration using the available migration template.
 After using this command, developers should modify the created migration
 skeleton by filling up the actual migration logic.

   yii migrate/create create_user_table


    [$name] (string) The name of the new migration. This should only contain
    letters, digits and/or underscores.


*yii/console/controllers/BaseMigrateController::migrateUp*protected
>
 migrateUp($class)
<
(boolean) Whether the migration is successful

    [$class] (string) The migration class name


*yii/console/controllers/BaseMigrateController::migrateDown*protected
>
 migrateDown($class)
<
(boolean) Whether the migration is successful

    [$class] (string) The migration class name


*yii/console/controllers/BaseMigrateController::createMigration*protected
>
 createMigration($class)
<
(\yii\db\MigrationInterface) The migration instance

    [$class] (string) The migration class name


*yii/console/controllers/BaseMigrateController::migrateToTime*protected
>
 migrateToTime($time)
<
(void)

    [$time] (integer) UNIX timestamp value.


*yii/console/controllers/BaseMigrateController::migrateToVersion*protected
>
 migrateToVersion($version)
<
(integer) CLI exit code

    [$version] (string) Name in the full format.


*yii/console/controllers/BaseMigrateController::getNewMigrations*protected
>
 getNewMigrations()
<
(array) List of new migrations



*yii/console/controllers/BaseMigrateController::getMigrationHistory*protected
>
 getMigrationHistory($limit)
<
(array) The migration history

    [$limit] (integer) The maximum number of records in the history to be
    returned. 'null' for "no limit".


*yii/console/controllers/BaseMigrateController::addMigrationHistory*protected
>
 addMigrationHistory($version)
<
(void)

    [$version] (string) Migration version name.


*yii/console/controllers/BaseMigrateController::removeMigrationHistory*protected
>
 removeMigrationHistory($version)
<
(void)

    [$version] (string) Migration version name.



 vim:tw=78:ts=8:ft=help:norl:
