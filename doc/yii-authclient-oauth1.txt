
*yii/authclient/OAuth1*   >> |yii/authclient/BaseOAuth|
=======================

SUBCLASSES
------------------------------------------------------------------------------

|yii/authclient/clients/Twitter|

DESCRIPTION
------------------------------------------------------------------------------

 In order to acquire access token perform following sequence:

   use yii\authclient\OAuth1;
   use Yii;

   // assuming class MyAuthClient extends OAuth1
   $oauthClient = new MyAuthClient();
   $requestToken = $oauthClient->fetchRequestToken(); // Get request token
   $url = $oauthClient->buildAuthUrl($requestToken); // Get authorization URL
   return Yii::$app->getResponse()->redirect($url); // Redirect to
 authorization URL

   // After user returns at our site:
   $accessToken =
 $oauthClient->fetchAccessToken(Yii::$app->request->get('oauth_token'),
 $requestToken); // Upgrade to access token




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/authclient/BaseOAuth::$apiBaseUrl|
 |yii/authclient/BaseOAuth::$authUrl|
 |yii/authclient/BaseOAuth::$scope|
 |yii/authclient/BaseOAuth::$autoRefreshAccessToken|
 |yii/base/Component::$behaviors|
 |yii/authclient/ClientInterface::$id|
 |yii/authclient/ClientInterface::$name|
 |yii/authclient/ClientInterface::$title|
 |yii/authclient/BaseClient::$userAttributes|
 |yii/authclient/BaseClient::$normalizeUserAttributeMap|
 |yii/authclient/BaseClient::$viewOptions|
 |yii/authclient/BaseClient::$httpClient|
 |yii/authclient/BaseClient::$requestOptions|
 |yii/authclient/BaseClient::$stateStorage|
 |yii/authclient/BaseOAuth::$returnUrl|
 |yii/authclient/BaseOAuth::$accessToken|
 |yii/authclient/BaseOAuth::$signatureMethod|


$version				*yii/authclient/OAuth1::$version*

 (string) Protocol version.

$consumerKey				*yii/authclient/OAuth1::$consumerKey*

 (string) OAuth consumer key.

$consumerSecret				*yii/authclient/OAuth1::$consumerSecret*

 (string) OAuth consumer secret.

$requestTokenUrl			*yii/authclient/OAuth1::$requestTokenUrl*

 (string) OAuth request token URL.

$requestTokenMethod			*yii/authclient/OAuth1::$requestTokenMethod*

 (string) Request token HTTP method.

$accessTokenUrl				*yii/authclient/OAuth1::$accessTokenUrl*

 (string) OAuth access token URL.

$accessTokenMethod			*yii/authclient/OAuth1::$accessTokenMethod*

 (string) Access token HTTP method.

$authorizationHeaderMethods		*yii/authclient/OAuth1::$authorizationHeaderMethods*

 (array|null) List of the request methods, which require adding
 'Authorization' header. By default only POST requests will have
 'Authorization' header. You may set this option to 'null' in order to make
 all requests to use 'Authorization' header.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/authclient/ClientInterface::setId|
 |yii/authclient/ClientInterface::getId|
 |yii/authclient/ClientInterface::setName|
 |yii/authclient/ClientInterface::getName|
 |yii/authclient/ClientInterface::setTitle|
 |yii/authclient/ClientInterface::getTitle|
 |yii/authclient/BaseClient::setUserAttributes|
 |yii/authclient/ClientInterface::getUserAttributes|
 |yii/authclient/BaseClient::setNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::getNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::setViewOptions|
 |yii/authclient/ClientInterface::getViewOptions|
 |yii/authclient/BaseClient::getHttpClient|
 |yii/authclient/BaseOAuth::setHttpClient|
 |yii/authclient/BaseClient::setRequestOptions|
 |yii/authclient/BaseClient::getRequestOptions|
 |yii/authclient/BaseClient::getStateStorage|
 |yii/authclient/BaseClient::setStateStorage|
 |yii/authclient/BaseClient::defaultName|
 |yii/authclient/BaseClient::defaultTitle|
 |yii/authclient/BaseClient::initUserAttributes|
 |yii/authclient/BaseClient::defaultNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::defaultViewOptions|
 |yii/authclient/BaseOAuth::createHttpClient|
 |yii/authclient/BaseClient::normalizeUserAttributes|
 |yii/authclient/BaseOAuth::defaultRequestOptions|
 |yii/authclient/BaseClient::setState|
 |yii/authclient/BaseClient::getState|
 |yii/authclient/BaseClient::removeState|
 |yii/authclient/BaseClient::getStateKeyPrefix|
 |yii/authclient/BaseOAuth::setReturnUrl|
 |yii/authclient/BaseOAuth::getReturnUrl|
 |yii/authclient/BaseOAuth::setAccessToken|
 |yii/authclient/BaseOAuth::getAccessToken|
 |yii/authclient/BaseOAuth::setSignatureMethod|
 |yii/authclient/BaseOAuth::getSignatureMethod|
 |yii/authclient/BaseOAuth::createSignatureMethod|
 |yii/authclient/BaseOAuth::createToken|
 |yii/authclient/BaseOAuth::sendRequest|
 |yii/authclient/BaseOAuth::composeUrl|
 |yii/authclient/BaseOAuth::saveAccessToken|
 |yii/authclient/BaseOAuth::restoreAccessToken|
 |yii/authclient/BaseOAuth::beforeApiRequestSend|
 |yii/authclient/BaseOAuth::api|


*yii/authclient/OAuth1::createRequest*			public
>
 createRequest()
<
return (\yii\httpclient\Request) HTTP request instance.

 Creates HTTP request instance.








*yii/authclient/OAuth1::defaultReturnUrl*			protected
>
 defaultReturnUrl()
<
return (string) Return URL.

 Composes default 'returnUrl' value.


*yii/authclient/OAuth1::createApiRequest*			public
>
 createApiRequest()
<
return (\yii\httpclient\Request) HTTP request instance.

 Creates an HTTP request for the API call.



 The created request will be automatically processed adding access token
 parameters and signature before sending. You may use 'createRequest()' to
 gain full control over request composition and execution.




*yii/authclient/OAuth1::refreshAccessToken*		public
>
 refreshAccessToken($token)
<
return (\yii\authclient\OAuthToken) New auth token.

 Gets new auth token to replace expired one.

    [$token] (\yii\authclient\OAuthToken) Expired auth token.


*yii/authclient/OAuth1::applyAccessTokenToRequest*	public
>
 applyAccessTokenToRequest($request, $accessToken)
<
return (void)

 Applies access token to the HTTP request instance.







    [$request] (\yii\httpclient\Request) HTTP request instance.
    [$accessToken] (\yii\authclient\OAuthToken) Access token instance.


*yii/authclient/OAuth1::fetchRequestToken*		public
>
 fetchRequestToken($params='[]')
<
return (\yii\authclient\OAuthToken) Request token.

 Fetches the OAuth request token.

    [$params] (array) Additional request params.


*yii/authclient/OAuth1::buildAuthUrl*			public
>
 buildAuthUrl($requestToken='null', $params='[]')
<
return (string) Authorize URL

 Composes user authorization URL.

    [$requestToken] (\yii\authclient\OAuthToken) OAuth request token.
    [$params] (array) Additional request params.


*yii/authclient/OAuth1::fetchAccessToken*			public
>
 fetchAccessToken($oauthToken='null', $requestToken='null', $oauthVerifier='null', $params='[]')
<
return (\yii\authclient\OAuthToken) OAuth access token.

 Fetches OAuth access token.

    [$oauthToken] (string) OAuth token returned with redirection back to
    client.
    [$requestToken] (\yii\authclient\OAuthToken) OAuth request token.
    [$oauthVerifier] (string) OAuth verifier.
    [$params] (array) Additional request params.


*yii/authclient/OAuth1::beforeRequestSend*		public
>
 beforeRequestSend($event)
<
return (void)

 Handles 'Request::EVENT_BEFORE_SEND' event.

 Ensures every request has been signed up before sending.

    [$event] (\yii\httpclient\RequestEvent) Event instance.


*yii/authclient/OAuth1::generateNonce*			protected
>
 generateNonce()
<
return (string) Nonce value.

 Generates nonce value.


*yii/authclient/OAuth1::generateTimestamp*		protected
>
 generateTimestamp()
<
return (int) Timestamp.

 Generates timestamp.


*yii/authclient/OAuth1::generateCommonRequestParams*	protected
>
 generateCommonRequestParams()
<
return (array) Common request params.

 Generate common request params like version, timestamp etc.


*yii/authclient/OAuth1::signRequest*			public
>
 signRequest($request, $token='null')
<
return (void)

 Sign given request with 'signatureMethod'.

    [$request] (\yii\httpclient\Request) Request instance.
    [$token] (\yii\authclient\OAuthToken|null) OAuth token to be used for
    signature, if not set 'accessToken' will be used.


*yii/authclient/OAuth1::composeSignatureBaseString*	protected
>
 composeSignatureBaseString($method, $url, $params)
<
return (string) Base signature string.

 Creates signature base string, which will be signed by 'signatureMethod'.

    [$method] (string) Request method.
    [$url] (string) Request URL.
    [$params] (array) Request params.


*yii/authclient/OAuth1::composeSignatureKey*		protected
>
 composeSignatureKey($token='null')
<
return (string) Signature key.

 Composes request signature key.

    [$token] (\yii\authclient\OAuthToken|null) OAuth token to be used for
    signature key.


*yii/authclient/OAuth1::composeAuthorizationHeader*	protected
>
 composeAuthorizationHeader($params, $realm='''')
<
return (array) Authorization header in format: [name => content].

 Composes authorization header.

    [$params] (array) Request params.
    [$realm] (string) Authorization realm.



 vim:tw=78:ts=8:ft=help:norl:
