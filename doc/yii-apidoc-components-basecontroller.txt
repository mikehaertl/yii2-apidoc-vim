
*yii/apidoc/components/BaseController*   >> |yii/console/Controller|
======================================

SUBCLASSES
------------------------------------------------------------------------------

|yii/apidoc/commands/ApiController|
|yii/apidoc/commands/GuideController|


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Controller::$id|
 |yii/base/Controller::$module|
 |yii/base/Controller::$defaultAction|
 |yii/base/Controller::$layout|
 |yii/base/Controller::$action|
 |yii/console/Controller::$interactive|
 |yii/console/Controller::$color|
 |yii/console/Controller::$help|


$template				*yii/apidoc/components/BaseController::$template*

 (string) Template to use for rendering

$exclude				*yii/apidoc/components/BaseController::$exclude*

 (string|array) Files to exclude.

$pageTitle				*yii/apidoc/components/BaseController::$pageTitle*

 (string) Page title



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/Controller::__construct|
 |yii/base/BaseObject::init|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/base/Controller::actions|
 |yii/console/Controller::runAction|
 |yii/base/Controller::run|
 |yii/console/Controller::bindActionParams|
 |yii/base/Controller::createAction|
 |yii/base/Controller::beforeAction|
 |yii/base/Controller::afterAction|
 |yii/base/Controller::getModules|
 |yii/base/Controller::getUniqueId|
 |yii/base/Controller::getRoute|
 |yii/base/Controller::render|
 |yii/base/Controller::renderContent|
 |yii/base/Controller::renderPartial|
 |yii/base/Controller::renderFile|
 |yii/base/Controller::getView|
 |yii/base/Controller::setView|
 |yii/base/ViewContextInterface::getViewPath|
 |yii/base/Controller::setViewPath|
 |yii/base/Controller::findLayoutFile|
 |yii/console/Controller::isColorEnabled|
 |yii/console/Controller::ansiFormat|
 |yii/console/Controller::stdout|
 |yii/console/Controller::stderr|
 |yii/console/Controller::prompt|
 |yii/console/Controller::confirm|
 |yii/console/Controller::select|
 |yii/console/Controller::optionAliases|
 |yii/console/Controller::getOptionValues|
 |yii/console/Controller::getPassedOptions|
 |yii/console/Controller::getPassedOptionValues|
 |yii/console/Controller::getHelpSummary|
 |yii/console/Controller::getHelp|
 |yii/console/Controller::getActionHelpSummary|
 |yii/console/Controller::getActionHelp|
 |yii/console/Controller::getActionArgsHelp|
 |yii/console/Controller::getActionOptionsHelp|
 |yii/console/Controller::getActionMethodReflection|
 |yii/console/Controller::parseDocCommentTags|
 |yii/console/Controller::parseDocCommentSummary|
 |yii/console/Controller::parseDocCommentDetail|


*yii/apidoc/components/BaseController::options*		public
>
 options($actionID)
<
return (string[]) The names of the options valid for the action

 Returns the names of valid options for the action (id) An option requires the
 existence of a public member variable whose name is the option name.



 Child classes may override this method to specify possible options.

 Note that the values setting via options are not available until
 'beforeAction()' is being called.



    [$actionID] (string) The action id of the current request


*yii/apidoc/components/BaseController::normalizeTargetDir*protected
>
 normalizeTargetDir($target)
<
return (bool|string) 

 Checks that target directory is valid. Asks questions in tricky cases.

    [$target] (string) 


*yii/apidoc/components/BaseController::searchFiles*	protected
>
 searchFiles($sourceDirs)
<
return (array|bool) List of files to process or false on failure

 Finds files to process

    [$sourceDirs] (array) 


*yii/apidoc/components/BaseController::findFiles*		protected
>
 findFiles($dir, $except='[]')
<
return (array) Files found.

 Finds files

    [$dir] (string) Directory to search files in.
    [$except] (array) List of names to exclude from search.


*yii/apidoc/components/BaseController::loadContext*	protected
>
 loadContext($location)
<
return (\yii\apidoc\models\Context) 

 Loads context from cache

    [$location] (string) 


*yii/apidoc/components/BaseController::storeContext*	protected
>
 storeContext($context, $location)
<
return (void)

 Writes context into cache file

    [$context] (\yii\apidoc\models\Context) 
    [$location] (string) 


*yii/apidoc/components/BaseController::updateContext*	protected
>
 updateContext($context)
<
return (void)

    [$context] (\yii\apidoc\models\Context) 


*yii/apidoc/components/BaseController::findRenderer*	protected
>
 findRenderer($template)
<
return (\yii\apidoc\renderers\BaseRenderer) 

    [$template] (string) 



 vim:tw=78:ts=8:ft=help:norl:
