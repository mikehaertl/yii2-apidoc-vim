
*yii/apidoc/components/BaseController*   >> |yii/console/Controller|
======================================

SUBCLASSES
------------------------------------------------------------------------------

|yii/apidoc/commands/ApiController|
|yii/apidoc/commands/GuideController|


PROPERTY DETAILS
------------------------------------------------------------------------------


$template				*yii/apidoc/components/BaseController::$template*

 (string) Template to use for rendering

$exclude				*yii/apidoc/components/BaseController::$exclude*

 (string|array) Files to exclude.

$pageTitle				*yii/apidoc/components/BaseController::$pageTitle*

 (string) Page title



METHOD DETAILS
------------------------------------------------------------------------------


*yii/apidoc/components/BaseController::normalizeTargetDir*protected
>
 normalizeTargetDir($target)
<
return (bool|string) 

 Checks that target directory is valid. Asks questions in tricky cases.

    [$target] (string) 


*yii/apidoc/components/BaseController::searchFiles*	protected
>
 searchFiles($sourceDirs)
<
return (array|bool) List of files to process or false on failure

 Finds files to process

    [$sourceDirs] (array) 


*yii/apidoc/components/BaseController::findFiles*		protected
>
 findFiles($dir, $except='[]')
<
return (array) Files found.

 Finds files

    [$dir] (string) Directory to search files in.
    [$except] (array) List of names to exclude from search.


*yii/apidoc/components/BaseController::loadContext*	protected
>
 loadContext($location)
<
return (\yii\apidoc\models\Context) 

 Loads context from cache

    [$location] (string) 


*yii/apidoc/components/BaseController::storeContext*	protected
>
 storeContext($context, $location)
<
return (void)

 Writes context into cache file

    [$context] (\yii\apidoc\models\Context) 
    [$location] (string) 


*yii/apidoc/components/BaseController::updateContext*	protected
>
 updateContext($context)
<
return (void)

    [$context] (\yii\apidoc\models\Context) 


*yii/apidoc/components/BaseController::findRenderer*	protected
>
 findRenderer($template)
<
return (\yii\apidoc\renderers\BaseRenderer) 

    [$template] (string) 


*yii/apidoc/components/BaseController::options*		public
>
 options($actionID)
<
return (void)

    [$actionID] () 



 vim:tw=78:ts=8:ft=help:norl:
