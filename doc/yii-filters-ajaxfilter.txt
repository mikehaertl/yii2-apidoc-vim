
*yii/filters/AjaxFilter*   >> |yii/base/ActionFilter|
========================

DESCRIPTION
------------------------------------------------------------------------------



   public function behaviors()
   {
       return [
           [
               'class' => 'yii\filters\AjaxFilter',
               'only' => ['index']
           ],
       ];
   }




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Behavior::$owner|
 |yii/base/ActionFilter::$only|
 |yii/base/ActionFilter::$except|


$errorMessage				*yii/filters/AjaxFilter::$errorMessage*

 (string) The message to be displayed when request isn't ajax

$request				*yii/filters/AjaxFilter::$request*

 (\yii\web\Request) The current request. If not set, the 'request' application
 component will be used.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::__get|
 |yii/base/BaseObject::__set|
 |yii/base/BaseObject::__isset|
 |yii/base/BaseObject::__unset|
 |yii/base/BaseObject::__call|
 |yii/base/BaseObject::hasProperty|
 |yii/base/BaseObject::canGetProperty|
 |yii/base/BaseObject::canSetProperty|
 |yii/base/BaseObject::hasMethod|
 |yii/base/Behavior::events|
 |yii/base/ActionFilter::attach|
 |yii/base/ActionFilter::detach|
 |yii/base/ActionFilter::beforeFilter|
 |yii/base/ActionFilter::afterFilter|
 |yii/base/ActionFilter::afterAction|
 |yii/base/ActionFilter::getActionId|
 |yii/base/ActionFilter::isActive|


*yii/filters/AjaxFilter::init*				public
>
 init()
<
return (void)

 {@inheritdoc}


*yii/filters/AjaxFilter::beforeAction*			public
>
 beforeAction($action)
<
return (void)

 {@inheritdoc}

    [$action] () 



 vim:tw=78:ts=8:ft=help:norl:
