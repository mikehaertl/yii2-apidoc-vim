
*yii/filters/AjaxFilter*   >> |yii/base/ActionFilter|
========================

DESCRIPTION
------------------------------------------------------------------------------



   public function behaviors()
   {
       return [
           [
               'class' => 'yii\filters\AjaxFilter',
               'only' => ['index']
           ],
       ];
   }




PROPERTY DETAILS
------------------------------------------------------------------------------

$owner					*yii/filters/AjaxFilter::$owner*

 See |yii/base/Behavior::$owner|

$only					*yii/filters/AjaxFilter::$only*

 See |yii/base/ActionFilter::$only|

$except					*yii/filters/AjaxFilter::$except*

 See |yii/base/ActionFilter::$except|

$errorMessage				*yii/filters/AjaxFilter::$errorMessage*

 (string) The message to be displayed when request isn't ajax

$request				*yii/filters/AjaxFilter::$request*

 (\yii\web\Request) The current request. If not set, the 'request' application
 component will be used.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/filters/AjaxFilter::className*			public

 See |yii/base/BaseObject::className|


*yii/filters/AjaxFilter::__construct*			public

 See |yii/base/BaseObject::__construct|


*yii/filters/AjaxFilter::init*				public
>
 init()
<
return (void)



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/filters/AjaxFilter::__get*				public

 See |yii/base/BaseObject::__get|


*yii/filters/AjaxFilter::__set*				public

 See |yii/base/BaseObject::__set|


*yii/filters/AjaxFilter::__isset*				public

 See |yii/base/BaseObject::__isset|


*yii/filters/AjaxFilter::__unset*				public

 See |yii/base/BaseObject::__unset|


*yii/filters/AjaxFilter::__call*				public

 See |yii/base/BaseObject::__call|


*yii/filters/AjaxFilter::hasProperty*			public

 See |yii/base/BaseObject::hasProperty|


*yii/filters/AjaxFilter::canGetProperty*			public

 See |yii/base/BaseObject::canGetProperty|


*yii/filters/AjaxFilter::canSetProperty*			public

 See |yii/base/BaseObject::canSetProperty|


*yii/filters/AjaxFilter::hasMethod*			public

 See |yii/base/BaseObject::hasMethod|


*yii/filters/AjaxFilter::events*				public

 See |yii/base/Behavior::events|


*yii/filters/AjaxFilter::attach*				public

 See |yii/base/ActionFilter::attach|


*yii/filters/AjaxFilter::detach*				public

 See |yii/base/ActionFilter::detach|


*yii/filters/AjaxFilter::beforeFilter*			public

 See |yii/base/ActionFilter::beforeFilter|


*yii/filters/AjaxFilter::afterFilter*			public

 See |yii/base/ActionFilter::afterFilter|


*yii/filters/AjaxFilter::beforeAction*			public
>
 beforeAction($action)
<
return (bool) Whether the action should continue to be executed.







    [$action] (\yii\base\Action) The action to be executed.


*yii/filters/AjaxFilter::afterAction*			public

 See |yii/base/ActionFilter::afterAction|


*yii/filters/AjaxFilter::getActionId*			protected

 See |yii/base/ActionFilter::getActionId|


*yii/filters/AjaxFilter::isActive*			protected

 See |yii/base/ActionFilter::isActive|



 vim:tw=78:ts=8:ft=help:norl:
