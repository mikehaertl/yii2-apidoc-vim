
*yii/bootstrap/ActiveField*   >> |yii/widgets/ActiveField|
===========================

DESCRIPTION
------------------------------------------------------------------------------

 This class adds some useful features to
 '\yii\widgets\ActiveField|ActiveField' to render all sorts of Bootstrap 3
 form fields in different form layouts:


   - 'inputTemplate' is an optional template to render complex inputs,
   for example input groups 
   - 'horizontalCssClasses' defines the CSS grid classes to add to
   label, wrapper, error and hint   in horizontal forms 
   - 'inline'/'inline()' is used to render inline 'checkboxList()' and
   'radioList()' 
   - 'enableError' can be set to 'false' to disable to the error 
   - 'enableLabel' can be set to 'false' to disable to the label 
   - 'label()' can be used with a 'bool' argument to enable/disable the
   label

 There are also some new placeholders that you can use in the 'template'
 configuration:


   - '{beginLabel}': the opening label tag 
   - '{labelTitle}': the label title for use with
   '{beginLabel}'/'{endLabel}' 
   - '{endLabel}': the closing label tag 
   - '{beginWrapper}': the opening wrapper tag 
   - '{endWrapper}': the closing wrapper tag

 The wrapper tag is only used for some layouts and form elements.

 Note that some elements use slightly different defaults for 'template' and
 other options. You may want to override those predefined templates for
 checkboxes, radio buttons, checkboxLists and radioLists in the
 '\yii\widgets\ActiveForm::fieldConfig|fieldConfig' of the
 '\yii\widgets\ActiveForm':


   - 'checkboxTemplate' the template for checkboxes in default layout 
   - 'radioTemplate' the template for radio buttons in default layout 
   - 'horizontalCheckboxTemplate' the template for checkboxes in
   horizontal layout 
   - 'horizontalRadioTemplate' the template for radio buttons in
   horizontal layout 
   - 'inlineCheckboxListTemplate' the template for inline checkboxLists 
   - 'inlineRadioListTemplate' the template for inline radioLists

 Example:

   use yii\bootstrap\ActiveForm;

   $form = ActiveForm::begin(['layout' => 'horizontal']);

   // Form field without label
   echo $form->field($model, 'demo', [
       'inputOptions' => [
           'placeholder' => $model->getAttributeLabel('demo'),
       ],
   ])->label(false);

   // Inline radio list
   echo $form->field($model, 'demo')->inline()->radioList($items);

   // Control sizing in horizontal mode
   echo $form->field($model, 'demo', [
       'horizontalCssClasses' => [
           'wrapper' => 'col-sm-2',
       ]
   ]);

   // With 'default' layout you would use 'template' to size a specific field:
   echo $form->field($model, 'demo', [
       'template' => '{label} <div class="row"><div
 class="col-sm-4">{input}{error}{hint}</div></div>'
   ]);

   // Input group
   echo $form->field($model, 'demo', [
       'inputTemplate' => '<div class="input-group"><span
 class="input-group-addon">@</span>{input}</div>',
   ]);

   ActiveForm::end();




PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/widgets/ActiveField::$form|
 |yii/widgets/ActiveField::$model|
 |yii/widgets/ActiveField::$attribute|
 |yii/widgets/ActiveField::$options|
 |yii/widgets/ActiveField::$template|
 |yii/widgets/ActiveField::$inputOptions|
 |yii/widgets/ActiveField::$errorOptions|
 |yii/widgets/ActiveField::$labelOptions|
 |yii/widgets/ActiveField::$hintOptions|
 |yii/widgets/ActiveField::$enableClientValidation|
 |yii/widgets/ActiveField::$enableAjaxValidation|
 |yii/widgets/ActiveField::$validateOnChange|
 |yii/widgets/ActiveField::$validateOnBlur|
 |yii/widgets/ActiveField::$validateOnType|
 |yii/widgets/ActiveField::$validationDelay|
 |yii/widgets/ActiveField::$selectors|
 |yii/widgets/ActiveField::$parts|
 |yii/widgets/ActiveField::$addAriaAttributes|


$inline					*yii/bootstrap/ActiveField::$inline*

 (bool) Whether to render 'checkboxList()' and 'radioList()' inline.

$inputTemplate				*yii/bootstrap/ActiveField::$inputTemplate*

 (string|null) Optional template to render the '{input}' placeholder content

$wrapperOptions				*yii/bootstrap/ActiveField::$wrapperOptions*

 (array) Options for the wrapper tag, used in the '{beginWrapper}' placeholder

$horizontalCssClasses			*yii/bootstrap/ActiveField::$horizontalCssClasses*

 (null|array) CSS grid classes for horizontal layout. This must be an array
 with these keys:  
   - 'offset' the offset grid class to append to the wrapper if no
   label is rendered  
   - 'label' the label grid class  
   - 'wrapper' the wrapper grid class  
   - 'error' the error grid class  
   - 'hint' the hint grid class

$checkboxTemplate			*yii/bootstrap/ActiveField::$checkboxTemplate*

 (string) The template for checkboxes in default layout

$radioTemplate				*yii/bootstrap/ActiveField::$radioTemplate*

 (string) The template for radios in default layout

$horizontalCheckboxTemplate		*yii/bootstrap/ActiveField::$horizontalCheckboxTemplate*

 (string) The template for checkboxes in horizontal layout

$horizontalRadioTemplate		*yii/bootstrap/ActiveField::$horizontalRadioTemplate*

 (string) The template for radio buttons in horizontal layout

$inlineCheckboxListTemplate		*yii/bootstrap/ActiveField::$inlineCheckboxListTemplate*

 (string) The template for inline checkboxLists

$inlineRadioListTemplate		*yii/bootstrap/ActiveField::$inlineRadioListTemplate*

 (string) The template for inline radioLists

$enableError				*yii/bootstrap/ActiveField::$enableError*

 (bool) Whether to render the error. Default is 'true' except for layout
 'inline'.

$enableLabel				*yii/bootstrap/ActiveField::$enableLabel*

 (bool) Whether to render the label. Default is 'true'.



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/widgets/ActiveField::__toString|
 |yii/widgets/ActiveField::begin|
 |yii/widgets/ActiveField::end|
 |yii/widgets/ActiveField::error|
 |yii/widgets/ActiveField::hint|
 |yii/widgets/ActiveField::input|
 |yii/widgets/ActiveField::textInput|
 |yii/widgets/ActiveField::hiddenInput|
 |yii/widgets/ActiveField::passwordInput|
 |yii/widgets/ActiveField::fileInput|
 |yii/widgets/ActiveField::textarea|
 |yii/widgets/ActiveField::dropDownList|
 |yii/widgets/ActiveField::listBox|
 |yii/widgets/ActiveField::widget|
 |yii/widgets/ActiveField::adjustLabelFor|
 |yii/widgets/ActiveField::getClientOptions|
 |yii/widgets/ActiveField::isClientValidationEnabled|
 |yii/widgets/ActiveField::isAjaxValidationEnabled|
 |yii/widgets/ActiveField::getInputId|
 |yii/widgets/ActiveField::addAriaAttributes|
 |yii/widgets/ActiveField::addErrorClassIfNeeded|


*yii/bootstrap/ActiveField::__construct*			public
>
 __construct($config='[]')
<
return (void)

 {@inheritdoc}

    [$config] () 


*yii/bootstrap/ActiveField::render*			public
>
 render($content='null')
<
return (void)

 {@inheritdoc}

    [$content] () 


*yii/bootstrap/ActiveField::label*			public
>
 label($label='null', $options='[]')
<
return (void)

 {@inheritdoc}

    [$label] () 
    [$options] () 


*yii/bootstrap/ActiveField::radio*			public
>
 radio($options='[]', $enclosedByLabel='true')
<
return (void)

 {@inheritdoc}

    [$options] () 
    [$enclosedByLabel] () 


*yii/bootstrap/ActiveField::checkbox*			public
>
 checkbox($options='[]', $enclosedByLabel='true')
<
return (void)

 {@inheritdoc}

    [$options] () 
    [$enclosedByLabel] () 


*yii/bootstrap/ActiveField::checkboxList*			public
>
 checkboxList($items, $options='[]')
<
return (void)

 {@inheritdoc}

    [$items] () 
    [$options] () 


*yii/bootstrap/ActiveField::radioList*			public
>
 radioList($items, $options='[]')
<
return (void)

 {@inheritdoc}

    [$items] () 
    [$options] () 


*yii/bootstrap/ActiveField::staticControl*		public
>
 staticControl($options='[]')
<
return ($this) The field object itself

 Renders Bootstrap static form control.

    [$options] (array) The tag options in terms of name-value pairs. These
    will be rendered as the attributes of the resulting tag. There are also a
    special options:


      - encode: bool, whether value should be HTML-encoded or not.


*yii/bootstrap/ActiveField::inline*			public
>
 inline($value='true')
<
return ($this) The field object itself Make sure you call this method before
'checkboxList()' or 'radioList()' to have any effect.

    [$value] (bool) Whether to render a inline list


*yii/bootstrap/ActiveField::createLayoutConfig*		protected
>
 createLayoutConfig($instanceConfig)
<
return (array) The layout specific default configuration for this instance

    [$instanceConfig] (array) The configuration passed to this instance's
    constructor


*yii/bootstrap/ActiveField::renderLabelParts*		protected
>
 renderLabelParts($label='null', $options='[]')
<
return (void)

    [$label] (string|null) The label or null to use model label
    [$options] (array) The tag options



 vim:tw=78:ts=8:ft=help:norl:
