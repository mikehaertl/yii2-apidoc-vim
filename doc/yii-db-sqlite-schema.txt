
*yii/db/sqlite/Schema*   >> |yii/db/Schema|
======================


PROPERTY DETAILS
------------------------------------------------------------------------------

$db					*yii/db/sqlite/Schema::$db*

 See |yii/db/Schema::$db|

$defaultSchema				*yii/db/sqlite/Schema::$defaultSchema*

 See |yii/db/Schema::$defaultSchema|

$exceptionMap				*yii/db/sqlite/Schema::$exceptionMap*

 See |yii/db/Schema::$exceptionMap|

$typeMap				*yii/db/sqlite/Schema::$typeMap*

 (array) Mapping from physical column types (keys) to abstract column types
 (values)

$tableSchemas				*yii/db/sqlite/Schema::$tableSchemas*

 See |yii/db/Schema::$tableSchemas|

$schemaNames				*yii/db/sqlite/Schema::$schemaNames*

 See |yii/db/Schema::$schemaNames|

$tableNames				*yii/db/sqlite/Schema::$tableNames*

 See |yii/db/Schema::$tableNames|

$queryBuilder				*yii/db/sqlite/Schema::$queryBuilder*

 See |yii/db/Schema::$queryBuilder|

$lastInsertID				*yii/db/sqlite/Schema::$lastInsertID*

 See |yii/db/Schema::$lastInsertID|

$transactionIsolationLevel		*yii/db/sqlite/Schema::$transactionIsolationLevel*

 (string) The transaction isolation level to use for this transaction. This
 can be either 'Transaction::READ_UNCOMMITTED' or 'Transaction::SERIALIZABLE'.



METHOD DETAILS
------------------------------------------------------------------------------


*yii/db/sqlite/Schema::className*				public

 See |yii/base/Object::className|


*yii/db/sqlite/Schema::__construct*			public

 See |yii/base/Object::__construct|


*yii/db/sqlite/Schema::init*				public

 See |yii/base/Object::init|


*yii/db/sqlite/Schema::__get*				public

 See |yii/base/Object::__get|


*yii/db/sqlite/Schema::__set*				public

 See |yii/base/Object::__set|


*yii/db/sqlite/Schema::__isset*				public

 See |yii/base/Object::__isset|


*yii/db/sqlite/Schema::__unset*				public

 See |yii/base/Object::__unset|


*yii/db/sqlite/Schema::__call*				public

 See |yii/base/Object::__call|


*yii/db/sqlite/Schema::hasProperty*			public

 See |yii/base/Object::hasProperty|


*yii/db/sqlite/Schema::canGetProperty*			public

 See |yii/base/Object::canGetProperty|


*yii/db/sqlite/Schema::canSetProperty*			public

 See |yii/base/Object::canSetProperty|


*yii/db/sqlite/Schema::hasMethod*				public

 See |yii/base/Object::hasMethod|


*yii/db/sqlite/Schema::createColumnSchema*		protected

 See |yii/db/Schema::createColumnSchema|


*yii/db/sqlite/Schema::loadTableSchema*			protected
>
 loadTableSchema($name)
<
return (\yii\db\TableSchema) Driver dependent table metadata. Null if the table does
not exist.

    [$name] (string) Table name


*yii/db/sqlite/Schema::getTableSchema*			public

 See |yii/db/Schema::getTableSchema|


*yii/db/sqlite/Schema::getCacheKey*			protected

 See |yii/db/Schema::getCacheKey|


*yii/db/sqlite/Schema::getCacheTag*			protected

 See |yii/db/Schema::getCacheTag|


*yii/db/sqlite/Schema::getTableSchemas*			public

 See |yii/db/Schema::getTableSchemas|


*yii/db/sqlite/Schema::getSchemaNames*			public

 See |yii/db/Schema::getSchemaNames|


*yii/db/sqlite/Schema::getTableNames*			public

 See |yii/db/Schema::getTableNames|


*yii/db/sqlite/Schema::getQueryBuilder*			public

 See |yii/db/Schema::getQueryBuilder|


*yii/db/sqlite/Schema::getPdoType*			public

 See |yii/db/Schema::getPdoType|


*yii/db/sqlite/Schema::refresh*				public

 See |yii/db/Schema::refresh|


*yii/db/sqlite/Schema::refreshTableSchema*		public

 See |yii/db/Schema::refreshTableSchema|


*yii/db/sqlite/Schema::createQueryBuilder*		public
>
 createQueryBuilder()
<
return (\yii\db\sqlite\QueryBuilder) Query builder instance

 This method may be overridden by child classes to create a DBMS-specific
 query builder.


*yii/db/sqlite/Schema::createColumnSchemaBuilder*		public
>
 createColumnSchemaBuilder($type, $length='null')
<
return (\yii\db\sqlite\ColumnSchemaBuilder) Column schema builder instance



 This method may be overridden by child classes to create a DBMS-specific
 column schema builder.



    [$type] (string) Type of the column. See 'ColumnSchemaBuilder::$type'.
    [$length] (integer|string|array) Length or precision of the column. See
    'ColumnSchemaBuilder::$length'.


*yii/db/sqlite/Schema::findSchemaNames*			protected

 See |yii/db/Schema::findSchemaNames|


*yii/db/sqlite/Schema::findTableNames*			protected
>
 findTableNames($schema='''')
<
return (array) All table names in the database. The names have NO schema name prefix.

    [$schema] (string) The schema of the tables. Defaults to empty string,
    meaning the current or default schema.


*yii/db/sqlite/Schema::findUniqueIndexes*			public
>
 findUniqueIndexes($table)
<
return (array) All unique indexes for the given table.

 Each array element is of the following structure:

   [
       'IndexName1' => ['col1' [, ...]],
       'IndexName2' => ['col2' [, ...]],
   ]



    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/sqlite/Schema::getLastInsertID*			public

 See |yii/db/Schema::getLastInsertID|


*yii/db/sqlite/Schema::supportsSavepoint*			public

 See |yii/db/Schema::supportsSavepoint|


*yii/db/sqlite/Schema::createSavepoint*			public

 See |yii/db/Schema::createSavepoint|


*yii/db/sqlite/Schema::releaseSavepoint*			public

 See |yii/db/Schema::releaseSavepoint|


*yii/db/sqlite/Schema::rollBackSavepoint*			public

 See |yii/db/Schema::rollBackSavepoint|


*yii/db/sqlite/Schema::setTransactionIsolationLevel*	public
>
 setTransactionIsolationLevel($level)
<
return (void)

    [$level] (string) The transaction isolation level to use for this
    transaction. This can be either 'Transaction::READ_UNCOMMITTED' or
    'Transaction::SERIALIZABLE'.


*yii/db/sqlite/Schema::insert*				public

 See |yii/db/Schema::insert|


*yii/db/sqlite/Schema::quoteValue*			public

 See |yii/db/Schema::quoteValue|


*yii/db/sqlite/Schema::quoteTableName*			public

 See |yii/db/Schema::quoteTableName|


*yii/db/sqlite/Schema::quoteColumnName*			public

 See |yii/db/Schema::quoteColumnName|


*yii/db/sqlite/Schema::quoteSimpleTableName*		public
>
 quoteSimpleTableName($name)
<
return (string) The properly quoted table name

 A simple table name has no schema prefix.

    [$name] (string) Table name


*yii/db/sqlite/Schema::quoteSimpleColumnName*		public
>
 quoteSimpleColumnName($name)
<
return (string) The properly quoted column name

 A simple column name has no prefix.

    [$name] (string) Column name


*yii/db/sqlite/Schema::getRawTableName*			public

 See |yii/db/Schema::getRawTableName|


*yii/db/sqlite/Schema::getColumnPhpType*			protected

 See |yii/db/Schema::getColumnPhpType|


*yii/db/sqlite/Schema::convertException*			public

 See |yii/db/Schema::convertException|


*yii/db/sqlite/Schema::isReadQuery*			public

 See |yii/db/Schema::isReadQuery|


*yii/db/sqlite/Schema::findColumns*			protected
>
 findColumns($table)
<
return (boolean) Whether the table exists in the database

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/sqlite/Schema::findConstraints*			protected
>
 findConstraints($table)
<
return (void)

    [$table] (\yii\db\TableSchema) The table metadata


*yii/db/sqlite/Schema::loadColumnSchema*			protected
>
 loadColumnSchema($info)
<
return (\yii\db\ColumnSchema) The column schema object

    [$info] (array) Column information



 vim:tw=78:ts=8:ft=help:norl:
