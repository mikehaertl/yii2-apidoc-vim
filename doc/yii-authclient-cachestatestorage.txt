
*yii/authclient/CacheStateStorage*   >> |yii/base/Component|
==================================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/base/Component::$behaviors|


$cache					*yii/authclient/CacheStateStorage::$cache*

 (\yii\caching\Cache|array|string) Cache object or the application component
 ID of the cache object to be used.

 After the CacheStateStorage object is created, if you want to change this
 property, you should only assign it with a cache object.

 If not set 
   - application 'cache' component will be used, but only, if it is
   available (e.g. in web application), otherwise 
   - no cache will be used and no data saving will be performed.

$prefix					*yii/authclient/CacheStateStorage::$prefix*

 ()



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|


*yii/authclient/CacheStateStorage::init*			public
>
 init()
<
return (void)

 Initializes the object.



 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.




*yii/authclient/CacheStateStorage::set*			public
>
 set($key, $value)
<
return (void)

 Adds a state variable.



 If the specified name already exists, the old value will be overwritten.



    [$key] (string) Variable name
    [$value] (mixed) Variable value


*yii/authclient/CacheStateStorage::get*			public
>
 get($key)
<
return (mixed) The variable value, or 'null' if the variable does not exist.

 Returns the state variable value with the variable name.







    [$key] (string) The variable name


*yii/authclient/CacheStateStorage::remove*		public
>
 remove($key)
<
return (bool) Success.

 Removes a state variable.







    [$key] (string) The name of the variable to be removed



 vim:tw=78:ts=8:ft=help:norl:
