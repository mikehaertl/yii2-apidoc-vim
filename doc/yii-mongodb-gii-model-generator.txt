
*yii/mongodb/gii/model/Generator*   >> |yii/gii/Generator|
=================================


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/gii/Generator::$templates|
 |yii/gii/Generator::$template|
 |yii/gii/Generator::$enableI18N|
 |yii/gii/Generator::$messageCategory|


$db					*yii/mongodb/gii/model/Generator::$db*

 ()

$ns					*yii/mongodb/gii/model/Generator::$ns*

 ()

$collectionName				*yii/mongodb/gii/model/Generator::$collectionName*

 ()

$databaseName				*yii/mongodb/gii/model/Generator::$databaseName*

 ()

$attributeList				*yii/mongodb/gii/model/Generator::$attributeList*

 ()

$modelClass				*yii/mongodb/gii/model/Generator::$modelClass*

 ()

$baseClass				*yii/mongodb/gii/model/Generator::$baseClass*

 ()



METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/gii/Generator::init|
 |yii/gii/Generator::successMessage|
 |yii/gii/Generator::formView|
 |yii/gii/Generator::defaultTemplate|
 |yii/gii/Generator::loadStickyAttributes|
 |yii/gii/Generator::saveStickyAttributes|
 |yii/gii/Generator::getStickyDataFile|
 |yii/gii/Generator::save|
 |yii/gii/Generator::getTemplatePath|
 |yii/gii/Generator::render|
 |yii/gii/Generator::validateTemplate|
 |yii/gii/Generator::validateClass|
 |yii/gii/Generator::validateNewClass|
 |yii/gii/Generator::validateMessageCategory|
 |yii/gii/Generator::isReservedKeyword|
 |yii/gii/Generator::generateString|


*yii/mongodb/gii/model/Generator::getName*		public
>
 getName()
<
return (string) Name of the code generator








*yii/mongodb/gii/model/Generator::generate*		public
>
 generate()
<
return (\yii\gii\CodeFile[]) A list of code files to be created.

 Generates the code based on the current user input and the specified code
 template files.



 This is the main method that child classes should implement. Please refer to
 '\yii\gii\generators\controller\Generator::generate()' as an example on how
 to implement this method.




*yii/mongodb/gii/model/Generator::attributeLabels*	public
>
 attributeLabels()
<
return (void)








*yii/mongodb/gii/model/Generator::requiredTemplates*	public
>
 requiredTemplates()
<
return (array) List of code template files that are required. They should be file
paths relative to 'templatePath'.

 Returns a list of code template files that are required.



 Derived classes usually should override this method if they require the
 existence of certain template files.




*yii/mongodb/gii/model/Generator::stickyAttributes*	public
>
 stickyAttributes()
<
return (array) List of sticky attributes

 Returns the list of sticky attributes.



 A sticky attribute will remember its value and will initialize the attribute
 with this value when the generator is restarted.




*yii/mongodb/gii/model/Generator::hints*			public
>
 hints()
<
return (array) The list of hint messages

 Returns the list of hint messages.



 The array keys are the attribute names, and the array values are the
 corresponding hint messages. Hint messages will be displayed to end users
 when they are filling the form for the generator.




*yii/mongodb/gii/model/Generator::autoCompleteData*	public
>
 autoCompleteData()
<
return (array) The list of auto complete values

 Returns the list of auto complete values.



 The array keys are the attribute names, and the array values are the
 corresponding auto complete values. Auto complete values can also be callable
 typed in order one want to make postponed data generation.




*yii/mongodb/gii/model/Generator::getDescription*		public
>
 getDescription()
<
return (string) The detailed description of the generator.








*yii/mongodb/gii/model/Generator::rules*			public
>
 rules()
<
return (void)



 Child classes should override this method like the following so that the
 parent rules are included:

   return array_merge(parent::rules(), [
       ...rules for the child class...
   ]);




*yii/mongodb/gii/model/Generator::generateLabels*		public
>
 generateLabels($attributes)
<
return (array) The generated attribute labels (name => label)

 Generates the attribute labels for the specified attributes list.

    [$attributes] (array) The list of attributes


*yii/mongodb/gii/model/Generator::generateRules*		public
>
 generateRules($attributes)
<
return (array) The generated validation rules

 Generates validation rules for the specified collection.

    [$attributes] (array) The list of attributes


*yii/mongodb/gii/model/Generator::validateDb*		public
>
 validateDb()
<
return (void)

 Validates the 'db' attribute.


*yii/mongodb/gii/model/Generator::validateNamespace*	public
>
 validateNamespace()
<
return (void)

 Validates the 'ns' attribute.


*yii/mongodb/gii/model/Generator::validateModelClass*	public
>
 validateModelClass()
<
return (void)

 Validates the 'modelClass' attribute.


*yii/mongodb/gii/model/Generator::validateCollectionName*	public
>
 validateCollectionName()
<
return (void)

 Validates the 'collectionName' attribute.


*yii/mongodb/gii/model/Generator::generateClassName*	protected
>
 generateClassName($collectionName)
<
return (string) The generated class name

 Generates a class name from the specified collection name.

    [$collectionName] (string) The collection name (which may contain schema
    prefix)


*yii/mongodb/gii/model/Generator::getDbConnection*	protected
>
 getDbConnection()
<
return (\yii\mongodb\Connection) The DB connection as specified by 'db'.




 vim:tw=78:ts=8:ft=help:norl:
