
*yii/elasticsearch/Connection*   >> |yii/base/Component|
==============================


PROPERTY DETAILS
------------------------------------------------------------------------------

$autodetectCluster			*yii/elasticsearch/Connection::$autodetectCluster*
 (boolean) Whether to autodetect available cluster nodes on 'open()'

$nodes					*yii/elasticsearch/Connection::$nodes*
 (array) Cluster nodes This is populated with the result of a cluster nodes
 request when 'autodetectCluster' is true.

$activeNode				*yii/elasticsearch/Connection::$activeNode*
 (array) The active node. key of 'nodes'. Will be randomly selected on
 'open()'.

$auth					*yii/elasticsearch/Connection::$auth*
 ()

$connectionTimeout			*yii/elasticsearch/Connection::$connectionTimeout*
 (float) Timeout to use for connecting to an elasticsearch node. This value
 will be used to configure the curl 'CURLOPT_CONNECTTIMEOUT' option. If not
 set, no explicit timeout will be set for curl.

$dataTimeout				*yii/elasticsearch/Connection::$dataTimeout*
 (float) Timeout to use when reading the response from an elasticsearch node.
 This value will be used to configure the curl 'CURLOPT_TIMEOUT' option. If
 not set, no explicit timeout will be set for curl.

$behaviors				*yii/elasticsearch/Connection::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

$isActive				*yii/elasticsearch/Connection::$isActive*
 (boolean) Whether the DB connection is established

$driverName				*yii/elasticsearch/Connection::$driverName*
 (string) Name of the DB driver

$queryBuilder				*yii/elasticsearch/Connection::$queryBuilder*
 (\yii\elasticsearch\QueryBuilder)

$nodeInfo				*yii/elasticsearch/Connection::$nodeInfo*
 ()

$clusterState				*yii/elasticsearch/Connection::$clusterState*
 ()



METHOD DETAILS
------------------------------------------------------------------------------

*yii/elasticsearch/Connection::className*			public
 See |yii/base/Object::className|


*yii/elasticsearch/Connection::__construct*		public
 See |yii/base/Object::__construct|


*yii/elasticsearch/Connection::init*			public
>
 init()
<
(void)



*yii/elasticsearch/Connection::__get*			public
 See |yii/base/Component::__get|


*yii/elasticsearch/Connection::__set*			public
 See |yii/base/Component::__set|


*yii/elasticsearch/Connection::__isset*			public
 See |yii/base/Component::__isset|


*yii/elasticsearch/Connection::__unset*			public
 See |yii/base/Component::__unset|


*yii/elasticsearch/Connection::__call*			public
 See |yii/base/Component::__call|


*yii/elasticsearch/Connection::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/elasticsearch/Connection::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/elasticsearch/Connection::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/elasticsearch/Connection::hasMethod*			public
 See |yii/base/Component::hasMethod|


*yii/elasticsearch/Connection::__clone*			public
 See |yii/base/Component::__clone|


*yii/elasticsearch/Connection::behaviors*			public
 See |yii/base/Component::behaviors|


*yii/elasticsearch/Connection::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/elasticsearch/Connection::on*			public
 See |yii/base/Component::on|


*yii/elasticsearch/Connection::off*			public
 See |yii/base/Component::off|


*yii/elasticsearch/Connection::trigger*			public
 See |yii/base/Component::trigger|


*yii/elasticsearch/Connection::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/elasticsearch/Connection::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/elasticsearch/Connection::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/elasticsearch/Connection::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/elasticsearch/Connection::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/elasticsearch/Connection::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/elasticsearch/Connection::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/elasticsearch/Connection::__sleep*			public
>
 __sleep()
<
(array) 



*yii/elasticsearch/Connection::getIsActive*		public
>
 getIsActive()
<
(boolean) Whether the DB connection is established



*yii/elasticsearch/Connection::open*			public
>
 open()
<
(void)

 It does nothing if a DB connection has already been established.


*yii/elasticsearch/Connection::selectActiveNode*		protected
>
 selectActiveNode()
<
(void)



*yii/elasticsearch/Connection::close*			public
>
 close()
<
(void)

 It does nothing if the connection is already closed.


*yii/elasticsearch/Connection::initConnection*		protected
>
 initConnection()
<
(void)

 This method is invoked right after the DB connection is established. The
 default implementation triggers an 'EVENT_AFTER_OPEN' event.


*yii/elasticsearch/Connection::getDriverName*		public
>
 getDriverName()
<
(string) Name of the DB driver



*yii/elasticsearch/Connection::createCommand*		public
>
 createCommand($config='[]')
<
(\yii\elasticsearch\Command) The DB command

    [$config] (array) The configuration for the Command class


*yii/elasticsearch/Connection::getQueryBuilder*		public
>
 getQueryBuilder()
<
(\yii\elasticsearch\QueryBuilder) 



*yii/elasticsearch/Connection::get*			public
>
 get($url, $options='[]', $body='null', $raw='false')
<
(mixed) Response

    [$url] (string) URL
    [$options] (array) URL options
    [$body] (string) Request body
    [$raw] (boolean) If response body contains JSON and should be decoded


*yii/elasticsearch/Connection::head*			public
>
 head($url, $options='[]', $body='null')
<
(mixed) Response

    [$url] (string) URL
    [$options] (array) URL options
    [$body] (string) Request body


*yii/elasticsearch/Connection::post*			public
>
 post($url, $options='[]', $body='null', $raw='false')
<
(mixed) Response

    [$url] (string) URL
    [$options] (array) URL options
    [$body] (string) Request body
    [$raw] (boolean) If response body contains JSON and should be decoded


*yii/elasticsearch/Connection::put*			public
>
 put($url, $options='[]', $body='null', $raw='false')
<
(mixed) Response

    [$url] (string) URL
    [$options] (array) URL options
    [$body] (string) Request body
    [$raw] (boolean) If response body contains JSON and should be decoded


*yii/elasticsearch/Connection::delete*			public
>
 delete($url, $options='[]', $body='null', $raw='false')
<
(mixed) Response

    [$url] (string) URL
    [$options] (array) URL options
    [$body] (string) Request body
    [$raw] (boolean) If response body contains JSON and should be decoded


*yii/elasticsearch/Connection::httpRequest*		protected
>
 httpRequest($method, $url, $requestBody='null', $raw='false')
<
(mixed) Response

    [$method] (string) Method name
    [$url] (string) URL
    [$requestBody] (string) Request body
    [$raw] (boolean) If response body contains JSON and should be decoded


*yii/elasticsearch/Connection::decodeErrorBody*		protected
>
 decodeErrorBody($body)
<
(mixed) 

    [$body] () 


*yii/elasticsearch/Connection::getNodeInfo*		public
>
 getNodeInfo()
<
(void)



*yii/elasticsearch/Connection::getClusterState*		public
>
 getClusterState()
<
(void)




 vim:tw=78:ts=8:ft=help:norl:
