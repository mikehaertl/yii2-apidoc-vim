
*yii/authclient/clients/Twitter*   >> |yii/authclient/OAuth1|
================================

DESCRIPTION
------------------------------------------------------------------------------

 In order to use Twitter OAuth you must register your application at
 <https://dev.twitter.com/apps/new>.

 Example application configuration:

   'components' => [
       'authClientCollection' => [
           'class' => 'yii\authclient\Collection',
           'clients' => [
               'twitter' => [
                   'class' => 'yii\authclient\clients\Twitter',
                   'attributeParams' => [
                       'include_email' => 'true'
                   ],
                   'consumerKey' => 'twitter_consumer_key',
                   'consumerSecret' => 'twitter_consumer_secret',
               ],
           ],
       ]
       // ...
   ]

 > Note: some auth workflows provided by Twitter, such as [application-only
 authentication](https://dev.twitter.com/oauth/application-only),   uses OAuth
 2 protocol and thus are impossible to be used with this class. You should use
 'TwitterOAuth2' for these.


PROPERTY DETAILS
------------------------------------------------------------------------------

Inherited properties:

 |yii/authclient/OAuth1::$version|
 |yii/authclient/BaseOAuth::$scope|
 |yii/authclient/BaseOAuth::$autoRefreshAccessToken|
 |yii/authclient/OAuth1::$consumerKey|
 |yii/authclient/OAuth1::$consumerSecret|
 |yii/authclient/OAuth1::$authorizationHeaderMethods|


$apiBaseUrl				*yii/authclient/clients/Twitter::$apiBaseUrl*

 ()

$authUrl				*yii/authclient/clients/Twitter::$authUrl*

 ()

$requestTokenUrl			*yii/authclient/clients/Twitter::$requestTokenUrl*

 ()

$requestTokenMethod			*yii/authclient/clients/Twitter::$requestTokenMethod*

 ()

$accessTokenUrl				*yii/authclient/clients/Twitter::$accessTokenUrl*

 ()

$accessTokenMethod			*yii/authclient/clients/Twitter::$accessTokenMethod*

 ()

$attributeParams			*yii/authclient/clients/Twitter::$attributeParams*

 (array) List of extra parameters, which should be used, while requesting user
 attributes from Twitter API. For example:

   [
       'include_email' => 'true'
   ]





METHOD DETAILS
------------------------------------------------------------------------------

Inherited methods:

 |yii/base/BaseObject::className|
 |yii/base/BaseObject::__construct|
 |yii/base/BaseObject::init|
 |yii/base/Component::__get|
 |yii/base/Component::__set|
 |yii/base/Component::__isset|
 |yii/base/Component::__unset|
 |yii/base/Component::__call|
 |yii/base/Component::hasProperty|
 |yii/base/Component::canGetProperty|
 |yii/base/Component::canSetProperty|
 |yii/base/Component::hasMethod|
 |yii/base/Component::__clone|
 |yii/base/Component::behaviors|
 |yii/base/Component::hasEventHandlers|
 |yii/base/Component::on|
 |yii/base/Component::off|
 |yii/base/Component::trigger|
 |yii/base/Component::getBehavior|
 |yii/base/Component::getBehaviors|
 |yii/base/Component::attachBehavior|
 |yii/base/Component::attachBehaviors|
 |yii/base/Component::detachBehavior|
 |yii/base/Component::detachBehaviors|
 |yii/base/Component::ensureBehaviors|
 |yii/authclient/ClientInterface::setId|
 |yii/authclient/ClientInterface::getId|
 |yii/authclient/ClientInterface::setName|
 |yii/authclient/ClientInterface::getName|
 |yii/authclient/ClientInterface::setTitle|
 |yii/authclient/ClientInterface::getTitle|
 |yii/authclient/BaseClient::setUserAttributes|
 |yii/authclient/ClientInterface::getUserAttributes|
 |yii/authclient/BaseClient::setNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::getNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::setViewOptions|
 |yii/authclient/ClientInterface::getViewOptions|
 |yii/authclient/BaseClient::getHttpClient|
 |yii/authclient/BaseClient::setHttpClient|
 |yii/authclient/BaseClient::setRequestOptions|
 |yii/authclient/BaseClient::getRequestOptions|
 |yii/authclient/BaseClient::getStateStorage|
 |yii/authclient/BaseClient::setStateStorage|
 |yii/authclient/BaseClient::defaultNormalizeUserAttributeMap|
 |yii/authclient/BaseClient::defaultViewOptions|
 |yii/authclient/BaseClient::createHttpClient|
 |yii/authclient/BaseClient::normalizeUserAttributes|
 |yii/authclient/OAuth1::createRequest|
 |yii/authclient/BaseClient::defaultRequestOptions|
 |yii/authclient/BaseClient::setState|
 |yii/authclient/BaseClient::getState|
 |yii/authclient/BaseClient::removeState|
 |yii/authclient/BaseClient::getStateKeyPrefix|
 |yii/authclient/BaseOAuth::setReturnUrl|
 |yii/authclient/BaseOAuth::getReturnUrl|
 |yii/authclient/BaseOAuth::setAccessToken|
 |yii/authclient/BaseOAuth::getAccessToken|
 |yii/authclient/BaseOAuth::setSignatureMethod|
 |yii/authclient/BaseOAuth::getSignatureMethod|
 |yii/authclient/OAuth1::defaultReturnUrl|
 |yii/authclient/BaseOAuth::createSignatureMethod|
 |yii/authclient/BaseOAuth::createToken|
 |yii/authclient/BaseOAuth::sendRequest|
 |yii/authclient/BaseOAuth::composeUrl|
 |yii/authclient/BaseOAuth::saveAccessToken|
 |yii/authclient/BaseOAuth::restoreAccessToken|
 |yii/authclient/OAuth1::createApiRequest|
 |yii/authclient/BaseOAuth::beforeApiRequestSend|
 |yii/authclient/BaseOAuth::api|
 |yii/authclient/OAuth1::refreshAccessToken|
 |yii/authclient/OAuth1::applyAccessTokenToRequest|
 |yii/authclient/OAuth1::fetchRequestToken|
 |yii/authclient/OAuth1::buildAuthUrl|
 |yii/authclient/OAuth1::fetchAccessToken|
 |yii/authclient/OAuth1::beforeRequestSend|
 |yii/authclient/OAuth1::generateNonce|
 |yii/authclient/OAuth1::generateTimestamp|
 |yii/authclient/OAuth1::generateCommonRequestParams|
 |yii/authclient/OAuth1::signRequest|
 |yii/authclient/OAuth1::composeSignatureBaseString|
 |yii/authclient/OAuth1::composeSignatureKey|
 |yii/authclient/OAuth1::composeAuthorizationHeader|


*yii/authclient/clients/Twitter::defaultName*		protected
>
 defaultName()
<
return (void)

 {@inheritdoc}


*yii/authclient/clients/Twitter::defaultTitle*		protected
>
 defaultTitle()
<
return (void)

 {@inheritdoc}


*yii/authclient/clients/Twitter::initUserAttributes*	protected
>
 initUserAttributes()
<
return (void)

 {@inheritdoc}



 vim:tw=78:ts=8:ft=help:norl:
