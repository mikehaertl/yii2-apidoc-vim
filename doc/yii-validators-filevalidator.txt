
*yii/validators/FileValidator*   >> |yii/validators/Validator|
==============================

SUBCLASSES
------------------------------------------------------------------------------

|yii/validators/ImageValidator|


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/FileValidator::$builtInValidators*
 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/FileValidator::$attributes*
 See |yii/validators/Validator::$attributes|

$message				*yii/validators/FileValidator::$message*
 (string) The error message used when a file is not uploaded correctly.

$on					*yii/validators/FileValidator::$on*
 See |yii/validators/Validator::$on|

$except					*yii/validators/FileValidator::$except*
 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/FileValidator::$skipOnError*
 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/FileValidator::$skipOnEmpty*
 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/FileValidator::$enableClientValidation*
 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/FileValidator::$isEmpty*
 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/FileValidator::$when*
 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/FileValidator::$whenClient*
 See |yii/validators/Validator::$whenClient|

$types					*yii/validators/FileValidator::$types*
 (array|string) A list of file name extensions that are allowed to be
 uploaded. This can be either an array or a string consisting of file
 extension names separated by space or comma (e.g. "gif, jpg"). Extension
 names are case-insensitive. Defaults to null, meaning all file name
 extensions are allowed.

$minSize				*yii/validators/FileValidator::$minSize*
 (integer) The minimum number of bytes required for the uploaded file.
 Defaults to null, meaning no limit.

$maxSize				*yii/validators/FileValidator::$maxSize*
 (integer) The maximum number of bytes required for the uploaded file.
 Defaults to null, meaning no limit. Note, the size limit is also affected by
 'upload_max_filesize' INI setting and the 'MAX_FILE_SIZE' hidden field value.

$maxFiles				*yii/validators/FileValidator::$maxFiles*
 (integer) The maximum file count the given attribute can hold. It defaults to
 1, meaning single file upload. By defining a higher number, multiple uploads
 become possible.

$uploadRequired				*yii/validators/FileValidator::$uploadRequired*
 (string) The error message used when no file is uploaded.

$tooBig					*yii/validators/FileValidator::$tooBig*
 (string) The error message used when the uploaded file is too large. You may
 use the following tokens in the message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name 
   - {limit}: the maximum size allowed (see 'getSizeLimit()')

$tooSmall				*yii/validators/FileValidator::$tooSmall*
 (string) The error message used when the uploaded file is too small. You may
 use the following tokens in the message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name 
   - {limit}: the value of 'minSize'

$wrongType				*yii/validators/FileValidator::$wrongType*
 (string) The error message used when the uploaded file has an extension name
 that is not listed in 'types'. You may use the following tokens in the
 message:


   - {attribute}: the attribute name 
   - {file}: the uploaded file name 
   - {extensions}: the list of the allowed extensions.

$tooMany				*yii/validators/FileValidator::$tooMany*
 (string) The error message used if the count of multiple uploads exceeds
 limit. You may use the following tokens in the message:


   - {attribute}: the attribute name 
   - {limit}: the value of 'maxFiles'

$behaviors				*yii/validators/FileValidator::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component

$sizeLimit				*yii/validators/FileValidator::$sizeLimit*
 (integer) The size limit for uploaded files.



METHOD DETAILS
------------------------------------------------------------------------------

*yii/validators/FileValidator::className*			public
 See |yii/base/Object::className|


*yii/validators/FileValidator::__construct*		public
 See |yii/base/Object::__construct|


*yii/validators/FileValidator::init*			public
>
 init()
<
(void)

 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.


*yii/validators/FileValidator::__get*			public
 See |yii/base/Component::__get|


*yii/validators/FileValidator::__set*			public
 See |yii/base/Component::__set|


*yii/validators/FileValidator::__isset*			public
 See |yii/base/Component::__isset|


*yii/validators/FileValidator::__unset*			public
 See |yii/base/Component::__unset|


*yii/validators/FileValidator::__call*			public
 See |yii/base/Component::__call|


*yii/validators/FileValidator::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/validators/FileValidator::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/validators/FileValidator::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/validators/FileValidator::hasMethod*			public
 See |yii/base/Component::hasMethod|


*yii/validators/FileValidator::__clone*			public
 See |yii/base/Component::__clone|


*yii/validators/FileValidator::behaviors*			public
 See |yii/base/Component::behaviors|


*yii/validators/FileValidator::hasEventHandlers*		public
 See |yii/base/Component::hasEventHandlers|


*yii/validators/FileValidator::on*			public
 See |yii/base/Component::on|


*yii/validators/FileValidator::off*			public
 See |yii/base/Component::off|


*yii/validators/FileValidator::trigger*			public
 See |yii/base/Component::trigger|


*yii/validators/FileValidator::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/validators/FileValidator::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/validators/FileValidator::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/validators/FileValidator::attachBehaviors*		public
 See |yii/base/Component::attachBehaviors|


*yii/validators/FileValidator::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/validators/FileValidator::detachBehaviors*		public
 See |yii/base/Component::detachBehaviors|


*yii/validators/FileValidator::ensureBehaviors*		public
 See |yii/base/Component::ensureBehaviors|


*yii/validators/FileValidator::createValidator*		public
 See |yii/validators/Validator::createValidator|


*yii/validators/FileValidator::validateAttributes*	public
 See |yii/validators/Validator::validateAttributes|


*yii/validators/FileValidator::validateAttribute*		public
>
 validateAttribute($object, $attribute)
<
(void)

 Child classes must implement this method to provide the actual validation
 logic.
    [$object] (\yii\base\Model) The data object to be validated
    [$attribute] (string) The name of the attribute to be validated.


*yii/validators/FileValidator::validate*			public
 See |yii/validators/Validator::validate|


*yii/validators/FileValidator::validateValue*		protected
>
 validateValue($file)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.

 A validator class can implement this method to support data validation out of
 the context of a data model.
    [$file] () 


*yii/validators/FileValidator::clientValidateAttribute*	public
 See |yii/validators/Validator::clientValidateAttribute|


*yii/validators/FileValidator::isActive*			public
 See |yii/validators/Validator::isActive|


*yii/validators/FileValidator::addError*			public
 See |yii/validators/Validator::addError|


*yii/validators/FileValidator::isEmpty*			public
>
 isEmpty($value, $trim='false')
<
(boolean) Whether the value is empty

 A value is considered empty if it is null, an empty array, or the trimmed
 result is an empty string. Note that this method is different from PHP
 empty(). It will return false when the value is 0.
    [$value] (mixed) The value to be checked
    [$trim] () 


*yii/validators/FileValidator::getSizeLimit*		public
>
 getSizeLimit()
<
(integer) The size limit for uploaded files.

 This is determined based on three factors:


   - 'upload_max_filesize' in php.ini 
   - 'MAX_FILE_SIZE' hidden field 
   - 'maxSize'



 vim:tw=78:ts=8:ft=help:norl:
