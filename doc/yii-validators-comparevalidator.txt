
*yii/validators/CompareValidator*   >> |yii/validators/Validator|
=================================

DESCRIPTION
------------------------------------------------------------------------------

 The value being compared with can be another attribute value (specified via
 'compareAttribute') or a constant (specified via 'compareValue'. When both
 are specified, the latter takes precedence. If neither is specified, the
 attribute will be compared with another attribute whose name is by appending
 "_repeat" to the source attribute name.

 CompareValidator supports different comparison operators, specified via the
 'operator' property.


PROPERTY DETAILS
------------------------------------------------------------------------------

$builtInValidators			*yii/validators/CompareValidator::$builtInValidators*
 See |yii/validators/Validator::$builtInValidators|

$attributes				*yii/validators/CompareValidator::$attributes*
 See |yii/validators/Validator::$attributes|

$message				*yii/validators/CompareValidator::$message*
 (string) The user-defined error message. It may contain the following
 placeholders which will be replaced accordingly by the validator:


   - '{attribute}': the label of the attribute being validated 
   - '{value}': the value of the attribute being validated 
   - '{compareValue}': the value or the attribute label to be compared
   with 
   - '{compareAttribute}': the label of the attribute to be compared
   with

$on					*yii/validators/CompareValidator::$on*
 See |yii/validators/Validator::$on|

$except					*yii/validators/CompareValidator::$except*
 See |yii/validators/Validator::$except|

$skipOnError				*yii/validators/CompareValidator::$skipOnError*
 See |yii/validators/Validator::$skipOnError|

$skipOnEmpty				*yii/validators/CompareValidator::$skipOnEmpty*
 See |yii/validators/Validator::$skipOnEmpty|

$enableClientValidation			*yii/validators/CompareValidator::$enableClientValidation*
 See |yii/validators/Validator::$enableClientValidation|

$isEmpty				*yii/validators/CompareValidator::$isEmpty*
 See |yii/validators/Validator::$isEmpty|

$when					*yii/validators/CompareValidator::$when*
 See |yii/validators/Validator::$when|

$whenClient				*yii/validators/CompareValidator::$whenClient*
 See |yii/validators/Validator::$whenClient|

$compareAttribute			*yii/validators/CompareValidator::$compareAttribute*
 (string) The name of the attribute to be compared with. When both this
 property and 'compareValue' are set, the latter takes precedence. If neither
 is set, it assumes the comparison is against another attribute whose name is
 formed by appending '_repeat' to the attribute being validated. For example,
 if 'password' is being validated, then the attribute to be compared would be
 'password_repeat'.

$compareValue				*yii/validators/CompareValidator::$compareValue*
 (mixed) The constant value to be compared with. When both this property and
 'compareAttribute' are set, this property takes precedence.

$operator				*yii/validators/CompareValidator::$operator*
 (string) The operator for comparison. The following operators are supported:


   - '==': check if two values are equal. The comparison is done is
   non-strict mode. 
   - '===': check if two values are equal. The comparison is done is
   strict mode. 
   - '!=': check if two values are NOT equal. The comparison is done is
   non-strict mode. 
   - '!==': check if two values are NOT equal. The comparison is done
   is strict mode. 
   - '>': check if value being validated is greater than the value
   being compared with. 
   - '>=': check if value being validated is greater than or equal to
   the value being compared with. 
   - '<': check if value being validated is less than the value being
   compared with. 
   - '<=': check if value being validated is less than or equal to the
   value being compared with.

$behaviors				*yii/validators/CompareValidator::$behaviors*
 (\yii\base\Behavior[]) List of behaviors attached to this component



METHOD DETAILS
------------------------------------------------------------------------------

*yii/validators/CompareValidator::className*		public
 See |yii/base/Object::className|


*yii/validators/CompareValidator::__construct*		public
 See |yii/base/Object::__construct|


*yii/validators/CompareValidator::init*			public
>
 init()
<
(void)

 This method is invoked at the end of the constructor after the object is
 initialized with the given configuration.


*yii/validators/CompareValidator::__get*			public
 See |yii/base/Component::__get|


*yii/validators/CompareValidator::__set*			public
 See |yii/base/Component::__set|


*yii/validators/CompareValidator::__isset*		public
 See |yii/base/Component::__isset|


*yii/validators/CompareValidator::__unset*		public
 See |yii/base/Component::__unset|


*yii/validators/CompareValidator::__call*			public
 See |yii/base/Component::__call|


*yii/validators/CompareValidator::hasProperty*		public
 See |yii/base/Component::hasProperty|


*yii/validators/CompareValidator::canGetProperty*		public
 See |yii/base/Component::canGetProperty|


*yii/validators/CompareValidator::canSetProperty*		public
 See |yii/base/Component::canSetProperty|


*yii/validators/CompareValidator::hasMethod*		public
 See |yii/base/Component::hasMethod|


*yii/validators/CompareValidator::__clone*		public
 See |yii/base/Component::__clone|


*yii/validators/CompareValidator::behaviors*		public
 See |yii/base/Component::behaviors|


*yii/validators/CompareValidator::hasEventHandlers*	public
 See |yii/base/Component::hasEventHandlers|


*yii/validators/CompareValidator::on*			public
 See |yii/base/Component::on|


*yii/validators/CompareValidator::off*			public
 See |yii/base/Component::off|


*yii/validators/CompareValidator::trigger*		public
 See |yii/base/Component::trigger|


*yii/validators/CompareValidator::getBehavior*		public
 See |yii/base/Component::getBehavior|


*yii/validators/CompareValidator::getBehaviors*		public
 See |yii/base/Component::getBehaviors|


*yii/validators/CompareValidator::attachBehavior*		public
 See |yii/base/Component::attachBehavior|


*yii/validators/CompareValidator::attachBehaviors*	public
 See |yii/base/Component::attachBehaviors|


*yii/validators/CompareValidator::detachBehavior*		public
 See |yii/base/Component::detachBehavior|


*yii/validators/CompareValidator::detachBehaviors*	public
 See |yii/base/Component::detachBehaviors|


*yii/validators/CompareValidator::ensureBehaviors*	public
 See |yii/base/Component::ensureBehaviors|


*yii/validators/CompareValidator::createValidator*	public
 See |yii/validators/Validator::createValidator|


*yii/validators/CompareValidator::validateAttributes*	public
 See |yii/validators/Validator::validateAttributes|


*yii/validators/CompareValidator::validateAttribute*	public
>
 validateAttribute($object, $attribute)
<
(void)

 Child classes must implement this method to provide the actual validation
 logic.
    [$object] (\yii\base\Model) The data object to be validated
    [$attribute] (string) The name of the attribute to be validated.


*yii/validators/CompareValidator::validate*		public
 See |yii/validators/Validator::validate|


*yii/validators/CompareValidator::validateValue*		protected
>
 validateValue($value)
<
(array|null) The error message and the parameters to be inserted into the
error message. Null should be returned if the data is valid.

 A validator class can implement this method to support data validation out of
 the context of a data model.
    [$value] (mixed) The data value to be validated.


*yii/validators/CompareValidator::clientValidateAttribute*public
>
 clientValidateAttribute($object, $attribute, $view)
<
(string) The client-side validation script. Null if the validator does not
support client-side validation.

 You may override this method to return the JavaScript validation code if the
 validator can support client-side validation.

 The following JavaScript variables are predefined and can be used in the
 validation code:


   - 'attribute': the name of the attribute being validated. 
   - 'value': the value being validated. 
   - 'messages': an array used to hold the validation error messages
   for the attribute. 
   - 'deferred': an array used to hold deferred objects for
   asynchronous validation
    [$object] (\yii\base\Model) The data object being validated
    [$attribute] (string) The name of the attribute to be validated.
    [$view] (\yii\web\View) The view object that is going to be used to render
    views or view files containing a model form with this validator applied.


*yii/validators/CompareValidator::isActive*		public
 See |yii/validators/Validator::isActive|


*yii/validators/CompareValidator::addError*		public
 See |yii/validators/Validator::addError|


*yii/validators/CompareValidator::isEmpty*		public
 See |yii/validators/Validator::isEmpty|


*yii/validators/CompareValidator::compareValues*		protected
>
 compareValues($operator, $value, $compareValue)
<
(boolean) Whether the comparison using the specified operator is true.

    [$operator] (string) The comparison operator
    [$value] (mixed) The value being compared
    [$compareValue] (mixed) Another value being compared



 vim:tw=78:ts=8:ft=help:norl:
